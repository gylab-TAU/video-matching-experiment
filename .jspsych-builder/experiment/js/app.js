/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js ***!
  \******************************************************************************************************************/
/***/ (function(module) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js ***!
  \**************************************************************************************************************************/
/***/ (function(module) {

// eslint-disable-next-line es/no-typed-arrays -- safe
module.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");

var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray = global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
var TypedArray = Int8Array && getPrototypeOf(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype = Object.prototype;
var isPrototypeOf = ObjectPrototype.isPrototypeOf;

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
var TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');
// Fixing native typed arrays in Opera Presto crashes the browser, see #595
var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';
var TYPED_ARRAY_TAG_REQIRED = false;
var NAME, Constructor, Prototype;

var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};

var BigIntArrayConstructorsList = {
  BigInt64Array: 8,
  BigUint64Array: 8
};

var isView = function isView(it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return klass === 'DataView'
    || has(TypedArrayConstructorsList, klass)
    || has(BigIntArrayConstructorsList, klass);
};

var isTypedArray = function (it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return has(TypedArrayConstructorsList, klass)
    || has(BigIntArrayConstructorsList, klass);
};

var aTypedArray = function (it) {
  if (isTypedArray(it)) return it;
  throw TypeError('Target is not a typed array');
};

var aTypedArrayConstructor = function (C) {
  if (setPrototypeOf && !isPrototypeOf.call(TypedArray, C)) {
    throw TypeError('Target is not a typed array constructor');
  } return C;
};

var exportTypedArrayMethod = function (KEY, property, forced) {
  if (!DESCRIPTORS) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) try {
      delete TypedArrayConstructor.prototype[KEY];
    } catch (error) { /* empty */ }
  }
  if (!TypedArrayPrototype[KEY] || forced) {
    redefine(TypedArrayPrototype, KEY, forced ? property
      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);
  }
};

var exportTypedArrayStaticMethod = function (KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!DESCRIPTORS) return;
  if (setPrototypeOf) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global[ARRAY];
      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) try {
        delete TypedArrayConstructor[KEY];
      } catch (error) { /* empty */ }
    }
    if (!TypedArray[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);
      } catch (error) { /* empty */ }
    } else return;
  }
  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      redefine(TypedArrayConstructor, KEY, property);
    }
  }
};

for (NAME in TypedArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);
  else NATIVE_ARRAY_BUFFER_VIEWS = false;
}

for (NAME in BigIntArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {
  // eslint-disable-next-line no-shadow -- safe
  TypedArray = function TypedArray() {
    throw TypeError('Incorrect invocation');
  };
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
  }
}

if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
  TypedArrayPrototype = TypedArray.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
  }
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}

if (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {
  TYPED_ARRAY_TAG_REQIRED = true;
  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {
    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
  } });
  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {
    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
  }
}

module.exports = {
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,
  aTypedArray: aTypedArray,
  aTypedArrayConstructor: aTypedArrayConstructor,
  exportTypedArrayMethod: exportTypedArrayMethod,
  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
  isView: isView,
  isTypedArray: isTypedArray,
  TypedArray: TypedArray,
  TypedArrayPrototype: TypedArrayPrototype
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js");
var IEEE754 = __webpack_require__(/*! ../internals/ieee754 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ieee754.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f;
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var arrayFill = __webpack_require__(/*! ../internals/array-fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var $DataView = global[DATA_VIEW];
var $DataViewPrototype = $DataView && $DataView[PROTOTYPE];
var ObjectPrototype = Object.prototype;
var RangeError = global.RangeError;

var packIEEE754 = IEEE754.pack;
var unpackIEEE754 = IEEE754.unpack;

var packInt8 = function (number) {
  return [number & 0xFF];
};

var packInt16 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};

var packInt32 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};

var unpackInt32 = function (buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};

var packFloat32 = function (number) {
  return packIEEE754(number, 23, 4);
};

var packFloat64 = function (number) {
  return packIEEE754(number, 52, 8);
};

var addGetter = function (Constructor, key) {
  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });
};

var get = function (view, count, index, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = bytes.slice(start, start + count);
  return isLittleEndian ? pack : pack.reverse();
};

var set = function (view, count, index, conversion, value, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = conversion(+value);
  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
};

if (!NATIVE_ARRAY_BUFFER) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    setInternalState(this, {
      bytes: arrayFill.call(new Array(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS) this.byteLength = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = getInternalState(buffer).byteLength;
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    setInternalState(this, {
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset
    });
    if (!DESCRIPTORS) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, 'byteLength');
    addGetter($DataView, 'buffer');
    addGetter($DataView, 'byteLength');
    addGetter($DataView, 'byteOffset');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
    }
  });
} else {
  /* eslint-disable no-new -- required for testing */
  if (!fails(function () {
    NativeArrayBuffer(1);
  }) || !fails(function () {
    new NativeArrayBuffer(-1);
  }) || fails(function () {
    new NativeArrayBuffer();
    new NativeArrayBuffer(1.5);
    new NativeArrayBuffer(NaN);
    return NativeArrayBuffer.name != ARRAY_BUFFER;
  })) {
  /* eslint-enable no-new -- required for testing */
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new NativeArrayBuffer(toIndex(length));
    };
    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];
    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) {
        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
      }
    }
    ArrayBufferPrototype.constructor = $ArrayBuffer;
  }

  // WebKit bug - the same parent prototype for typed arrays and data view
  if (setPrototypeOf && getPrototypeOf($DataViewPrototype) !== ObjectPrototype) {
    setPrototypeOf($DataViewPrototype, ObjectPrototype);
  }

  // iOS Safari 7.x bug
  var testView = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataViewPrototype.setInt8;
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, { unsafe: true });
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);

module.exports = {
  ArrayBuffer: $ArrayBuffer,
  DataView: $DataView
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");

var min = Math.min;

// `Array.prototype.copyWithin` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
// eslint-disable-next-line es/no-array-prototype-copywithin -- safe
module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");

// `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach;
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from-constructor-and-list.js":
/*!**************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from-constructor-and-list.js ***!
  \**************************************************************************************************************************************/
/***/ (function(module) {

module.exports = function (Constructor, list) {
  var index = 0;
  var length = list.length;
  var result = new Constructor(length);
  while (length > index) result[index] = list[index++];
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push.call(target, value); // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-lastindexof -- safe */
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var min = Math.min;
var $lastIndexOf = [].lastIndexOf;
var NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');
var FORCED = NEGATIVE_ZERO || !STRICT_METHOD;

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
module.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return $lastIndexOf.apply(this, arguments) || 0;
  var O = toIndexedObject(this);
  var length = toLength(O.length);
  var index = length - 1;
  if (arguments.length > 1) index = min(index, toInteger(arguments[1]));
  if (index < 0) index = length + index;
  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
  return -1;
} : $lastIndexOf;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js ***!
  \***************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aFunction(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = toLength(O.length);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

// TODO: use something more complex like timsort?
var floor = Math.floor;

var mergeSort = function (array, comparefn) {
  var length = array.length;
  var middle = floor(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    mergeSort(array.slice(0, middle), comparefn),
    mergeSort(array.slice(middle), comparefn),
    comparefn
  );
};

var insertionSort = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge = function (left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;
  var result = [];

  while (lindex < llength || rindex < rlength) {
    if (lindex < llength && rindex < rlength) {
      result.push(comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]);
    } else {
      result.push(lindex < llength ? left[lindex++] : right[rindex++]);
    }
  } return result;
};

module.exports = mergeSort;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-constructor.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-constructor.js ***!
  \********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \***************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose(iterator, 'throw', error);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \*************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js ***!
  \******************************************************************************************************************/
/***/ (function(module) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js ***!
  \**************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var fastKey = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").fastKey;
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(C.prototype, {
      // `{ Map, Set }.prototype.clear()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.clear
      // https://tc39.es/ecma262/#sec-set.prototype.clear
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // `{ Map, Set }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.delete
      // https://tc39.es/ecma262/#sec-set.prototype.delete
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.foreach
      // https://tc39.es/ecma262/#sec-set.prototype.foreach
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // `{ Map, Set}.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.has
      // https://tc39.es/ecma262/#sec-set.prototype.has
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // `Map.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-map.prototype.get
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // `Map.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-map.prototype.set
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // `Set.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-set.prototype.add
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return C;
  },
  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
    // https://tc39.es/ecma262/#sec-map.prototype.entries
    // https://tc39.es/ecma262/#sec-map.prototype.keys
    // https://tc39.es/ecma262/#sec-map.prototype.values
    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
    // https://tc39.es/ecma262/#sec-set.prototype.entries
    // https://tc39.es/ecma262/#sec-set.prototype.keys
    // https://tc39.es/ecma262/#sec-set.prototype.values
    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return { value: undefined, done: true };
      }
      // return step by kind
      if (kind == 'keys') return { value: entry.key, done: false };
      if (kind == 'values') return { value: entry.value, done: false };
      return { value: [entry.key, entry.value], done: false };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // `{ Map, Set }.prototype[@@species]` accessors
    // https://tc39.es/ecma262/#sec-get-map-@@species
    // https://tc39.es/ecma262/#sec-get-set-@@species
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var getWeakData = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").getWeakData;
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var ArrayIterationModule = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js");
var $has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var find = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (store) {
  return store.frozen || (store.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function () {
  this.entries = [];
};

var findUncaughtFrozen = function (store, key) {
  return find(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.entries.push([key, value]);
  },
  'delete': function (key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) this.entries.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);
      else data[state.id] = value;
      return that;
    };

    redefineAll(C.prototype, {
      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
      'delete': function (key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && $has(data, state.id) && delete data[state.id];
      },
      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
      // https://tc39.es/ecma262/#sec-weakset.prototype.has
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && $has(data, state.id);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // `WeakMap.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // `WeakMap.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // `WeakSet.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-weakset.prototype.add
      add: function add(value) {
        return define(this, value, true);
      }
    });

    return C;
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var nativeMethod = NativePrototype[KEY];
    redefine(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        nativeMethod.call(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : nativeMethod.call(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : nativeMethod.call(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        nativeMethod.call(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  var REPLACE = isForced(
    CONSTRUCTOR_NAME,
    typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
      new NativeConstructor().entries().next();
    }))
  );

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.enable();
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, Constructor, CONSTRUCTOR_NAME);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js ***!
  \**********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var quot = /"/g;

// `CreateHTML` abstract operation
// https://tc39.es/ecma262/#sec-createhtml
module.exports = function (string, tag, attribute, value) {
  var S = toString(requireObjectCoercible(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + toString(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js ***!
  \**********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__(/*! ../internals/iterators-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js").IteratorPrototype;
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \*************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js ***!
  \*********************************************************************************************************************************/
/***/ (function(module) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-iso-string.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-iso-string.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var padStart = __webpack_require__(/*! ../internals/string-pad */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js").start;

var abs = Math.abs;
var DatePrototype = Date.prototype;
var getTime = DatePrototype.getTime;
var nativeDateToISOString = DatePrototype.toISOString;

// `Date.prototype.toISOString` method implementation
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit fails here:
module.exports = (fails(function () {
  return nativeDateToISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  nativeDateToISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var date = this;
  var year = date.getUTCFullYear();
  var milliseconds = date.getUTCMilliseconds();
  var sign = year < 0 ? '-' : year > 9999 ? '+' : '';
  return sign + padStart(abs(year), sign ? 6 : 4, 0) +
    '-' + padStart(date.getUTCMonth() + 1, 2, 0) +
    '-' + padStart(date.getUTCDate(), 2, 0) +
    'T' + padStart(date.getUTCHours(), 2, 0) +
    ':' + padStart(date.getUTCMinutes(), 2, 0) +
    ':' + padStart(date.getUTCSeconds(), 2, 0) +
    '.' + padStart(milliseconds, 3, 0) +
    'Z';
} : nativeDateToISOString;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-primitive.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-primitive.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js");

// `Date.prototype[@@toPrimitive](hint)` method implementation
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
module.exports = function (hint) {
  anObject(this);
  if (hint === 'string' || hint === 'default') hint = 'string';
  else if (hint !== 'number') throw TypeError('Incorrect hint');
  return ordinaryToPrimitive(this, hint);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js ***!
  \********************************************************************************************************************/
/***/ (function(module) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

var firefox = userAgent.match(/firefox\/(\d+)/i);

module.exports = !!firefox && +firefox[1];


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-browser.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-browser.js ***!
  \************************************************************************************************************************/
/***/ (function(module) {

module.exports = typeof window == 'object';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var UA = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

module.exports = /MSIE|Trident/.test(UA);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios-pebble.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios-pebble.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-webos-webkit.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-webos-webkit.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] < 4 ? 1 : match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

module.exports = !!webkit && +webkit[1];


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js ***!
  \********************************************************************************************************************/
/***/ (function(module) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js ***!
  \*************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js":
/*!************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js ***!
  \************************************************************************************************************/
/***/ (function(module) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":
/*!*****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(/*! ../modules/es.regexp.exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");

var SPECIES = wellKnownSymbol('species');
var RegExpPrototype = RegExp.prototype;

module.exports = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var $exec = regexp.exec;
      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    });

    redefine(String.prototype, KEY, methods[0]);
    redefine(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;
  var element;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};

module.exports = flattenIntoArray;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var slice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func -- we have no proper alternatives, IE8- only
    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind
module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = slice.call(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = partArgs.concat(slice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };
  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");

module.exports = function (it, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(it) : usingIterator;
  if (typeof iteratorMethod != 'function') {
    throw TypeError(String(it) + ' is not iterable');
  } return anObject(iteratorMethod.call(it));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");

var floor = Math.floor;
var replace = ''.replace;
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace.call(replacement, symbols, function (match, ch) {
    var capture;
    switch (ch.charAt(0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return str.slice(0, position);
      case "'": return str.slice(tailPos);
      case '<':
        capture = namedCaptures[ch.slice(1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js ***!
  \*************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js":
/*!**********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js ***!
  \**********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");

var hasOwnProperty = {}.hasOwnProperty;

module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty.call(toObject(it), key);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js ***!
  \******************************************************************************************************************/
/***/ (function(module) {

module.exports = {};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/host-report-errors.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/host-report-errors.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ieee754.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ieee754.js ***!
  \**************************************************************************************************************/
/***/ (function(module) {

// IEEE754 conversions based on https://github.com/feross/ieee754
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;

var pack = function (number, mantissaLength, bytes) {
  var buffer = new Array(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs(number);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (number != number || number === Infinity) {
    // eslint-disable-next-line no-self-compare -- NaN check
    mantissa = number != number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor(log(number) / LN2);
    if (number * (c = pow(2, -exponent)) < 1) {
      exponent--;
      c *= 2;
    }
    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow(2, 1 - eBias);
    }
    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }
    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow(2, mantissaLength);
      exponent = exponent + eBias;
    } else {
      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
      exponent = 0;
    }
  }
  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);
  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;
  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);
  buffer[--index] |= sign * 128;
  return buffer;
};

var unpack = function (buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;
  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);
  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;
  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);
  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa = mantissa + pow(2, mantissaLength);
    exponent = exponent - eBias;
  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};

module.exports = {
  pack: pack,
  unpack: unpack
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    typeof (NewTarget = dummy.constructor) == 'function' &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var store = __webpack_require__(/*! ../internals/shared-store */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js");

var functionToString = Function.toString;

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternalModule = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");

var REQUIRED = false;
var METADATA = uid('meta');
var id = 0;

// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + id++, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var enable = function () {
  meta.enable = function () { /* empty */ };
  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = [].splice;
  var test = {};
  test[METADATA] = 1;

  // prevent exposing of metadata key
  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);
      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice.call(result, i, 1);
          break;
        }
      } return result;
    };

    $({ target: 'Object', stat: true, forced: true }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};

var meta = module.exports = {
  enable: enable,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var objectHas = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");

module.exports = function (descriptor) {
  return descriptor !== undefined && (has(descriptor, 'value') || has(descriptor, 'writable'));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integer.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integer.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var floor = Math.floor;

// `Number.isInteger` method implementation
// https://tc39.es/ecma262/#sec-number.isinteger
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js ***!
  \**************************************************************************************************************/
/***/ (function(module) {

module.exports = false;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js");

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return typeof $Symbol == 'function' && Object(it) instanceof $Symbol;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js ***!
  \**************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");

module.exports = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = iterator['return'];
    if (innerResult === undefined) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = innerResult.call(iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

module.exports = {};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

// eslint-disable-next-line es/no-math-expm1 -- safe
var $expm1 = Math.expm1;
var exp = Math.exp;

// `Math.expm1` method implementation
// https://tc39.es/ecma262/#sec-math.expm1
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : exp(x) - 1;
} : $expm1;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-fround.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-fround.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js");

var abs = Math.abs;
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

// `Math.fround` method implementation
// https://tc39.es/ecma262/#sec-math.fround
// eslint-disable-next-line es/no-math-fround -- safe
module.exports = Math.fround || function fround(x) {
  var $abs = abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

var log = Math.log;

// `Math.log1p` method implementation
// https://tc39.es/ecma262/#sec-math.log1p
// eslint-disable-next-line es/no-math-log1p -- safe
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + x);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

// `Math.sign` method implementation
// https://tc39.es/ecma262/#sec-math.sign
// eslint-disable-next-line es/no-math-sign -- safe
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var macrotask = __webpack_require__(/*! ../internals/task */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js").set;
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js");
var IS_IOS_PEBBLE = __webpack_require__(/*! ../internals/engine-is-ios-pebble */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios-pebble.js");
var IS_WEBOS_WEBKIT = __webpack_require__(/*! ../internals/engine-is-webos-webkit */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-webos-webkit.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise;
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js ***!
  \*********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = global.Promise;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = !fails(function () {
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return (IS_PURE && !url.toJSON)
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?a=1&c=3'
    || searchParams.get('c') !== '3'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://тест').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#б').hash !== '#%D0%B1'
    // fails in Chrome 66-
    || result !== 'a1c3'
    // throws in Safari
    || new URL('http://x', undefined).host !== 'x';
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-is-finite.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-is-finite.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var globalIsFinite = global.isFinite;

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
// eslint-disable-next-line es/no-number-isfinite -- safe
module.exports = Number.isFinite || function isFinite(it) {
  return typeof it == 'number' && globalIsFinite(it);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var trim = __webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim;
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var $parseFloat = global.parseFloat;
var FORCED = 1 / $parseFloat(whitespaces + '-0') !== -Infinity;

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
module.exports = FORCED ? function parseFloat(string) {
  var trimmedString = trim(toString(string));
  var result = $parseFloat(trimmedString);
  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;
} : $parseFloat;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var trim = __webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim;
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var $parseInt = global.parseInt;
var hex = /^[+-]?0[Xx]/;
var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22;

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
module.exports = FORCED ? function parseInt(string, radix) {
  var S = trim(toString(string));
  return $parseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));
} : $parseInt;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var defineProperties = __webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!*****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js":
/*!*********************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \*********************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var $getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js":
/*!************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!**************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \**************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var indexOf = __webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").indexOf;
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js":
/*!************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js":
/*!****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js ***!
  \****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js");

// Forced replacement object prototype accessors methods
module.exports = IS_PURE || !fails(function () {
  // This feature detection crashes old WebKit
  // https://github.com/zloirock/core-js/issues/232
  if (WEBKIT && WEBKIT < 535) return;
  var key = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call -- required for testing
  __defineSetter__.call(null, key, function () { /* empty */ });
  delete global[key];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable no-proto -- safe */
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var propertyIsEnumerable = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js").f;

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {
        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-string.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-string.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (pref !== 'string' && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js ***!
  \**************************************************************************************************************/
/***/ (function(module) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var state;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) {
      createNonEnumerableProperty(value, 'name', key);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var regexpExec = __webpack_require__(/*! ./regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var regexpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var getInternalState = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").get;
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js");

var nativeExec = RegExp.prototype.exec;
var nativeReplace = shared('native-string-replace', String.prototype.replace);

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

if (PATCH) {
  // eslint-disable-next-line max-statements -- TODO
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState(re);
    var str = toString(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = patchedExec.call(raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = regexpFlags.call(re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = flags.replace('y', '');
      if (flags.indexOf('g') === -1) {
        flags += 'g';
      }

      strCopy = str.slice(re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str.charAt(re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = match.input.slice(charsAdded);
        match[0] = match[0].slice(charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp = global.RegExp;

exports.UNSUPPORTED_Y = fails(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

exports.BROKEN_CARET = fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js ***!
  \*********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ./fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ./fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module) {

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

// `SameValue` abstract operation
// https://tc39.es/ecma262/#sec-samevalue
// eslint-disable-next-line es/no-object-is -- safe
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = function (key, value) {
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js ***!
  \*************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.17.2',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// check the existence of a method, lowercase
// of a tag and escaping quotes in arguments
module.exports = function (METHOD_NAME) {
  return fails(function () {
    var test = ''[METHOD_NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

// `String.prototype.codePointAt` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// https://github.com/zloirock/core-js/issues/280
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

// eslint-disable-next-line unicorn/no-unsafe-regex -- safe
module.exports = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(userAgent);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

var ceil = Math.ceil;

// `String.prototype.{ padStart, padEnd }` methods implementation
var createMethod = function (IS_END) {
  return function ($this, maxLength, fillString) {
    var S = toString(requireObjectCoercible($this));
    var stringLength = S.length;
    var fillStr = fillString === undefined ? ' ' : toString(fillString);
    var intMaxLength = toLength(maxLength);
    var fillLen, stringFiller;
    if (intMaxLength <= stringLength || fillStr == '') return S;
    fillLen = intMaxLength - stringLength;
    stringFiller = repeat.call(fillStr, ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
    return IS_END ? S + stringFiller : stringFiller + S;
  };
};

module.exports = {
  // `String.prototype.padStart` method
  // https://tc39.es/ecma262/#sec-string.prototype.padstart
  start: createMethod(false),
  // `String.prototype.padEnd` method
  // https://tc39.es/ecma262/#sec-string.prototype.padend
  end: createMethod(true)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-punycode-to-ascii.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-punycode-to-ascii.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module) {

"use strict";

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function (string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = string.charCodeAt(counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = string.charCodeAt(counter++);
      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        output.push(value);
        counter--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function (digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function (delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  for (; delta > baseMinusTMin * tMax >> 1; k += base) {
    delta = floor(delta / baseMinusTMin);
  }
  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
// eslint-disable-next-line max-statements -- TODO
var encode = function (input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      output.push(stringFromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    output.push(delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      throw RangeError(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw RangeError(OVERFLOW_ERROR);
      }
      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        for (var k = base; /* no condition */; k += base) {
          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor(qMinusT / baseMinusT);
        }

        output.push(stringFromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        ++handledCPCount;
      }
    }

    ++delta;
    ++n;
  }
  return output.join('');
};

module.exports = function (input) {
  var encoded = [];
  var labels = input.toLowerCase().replace(regexSeparators, '\u002E').split('.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);
  }
  return encoded.join('.');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

// `String.prototype.repeat` method implementation
// https://tc39.es/ecma262/#sec-string.prototype.repeat
module.exports = function repeat(count) {
  var str = toString(requireObjectCoercible(this));
  var result = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = toString(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var html = __webpack_require__(/*! ../internals/html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var location, defer, channel, port;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  location = global.location;
} catch (error) { /* empty */ }

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins -- safe
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(String(id), location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var argumentsLength = arguments.length;
    var i = 1;
    while (argumentsLength > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func -- spec requirement
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    typeof postMessage == 'function' &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js ***!
  \************************************************************************************************************************/
/***/ (function(module) {

var valueOf = 1.0.valueOf;

// `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue
module.exports = function (value) {
  return valueOf.call(value);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");

// `ToIndex` abstract operation
// https://tc39.es/ecma262/#sec-toindex
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length or index');
  return length;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.es/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPositiveInteger = __webpack_require__(/*! ../internals/to-positive-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-positive-integer.js");

module.exports = function (it, BYTES) {
  var offset = toPositiveInteger(it);
  if (offset % BYTES) throw RangeError('Wrong offset');
  return offset;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-positive-integer.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-positive-integer.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");

module.exports = function (it) {
  var result = toInteger(it);
  if (result < 0) throw RangeError("The argument can't be less than 0");
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = input[TO_PRIMITIVE];
  var result;
  if (exoticToPrim !== undefined) {
    if (pref === undefined) pref = 'default';
    result = exoticToPrim.call(input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : String(key);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");

module.exports = function (argument) {
  if (isSymbol(argument)) throw TypeError('Cannot convert a Symbol value to a string');
  return String(argument);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-array-constructors-require-wrappers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var isInteger = __webpack_require__(/*! ../internals/is-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js");
var toOffset = __webpack_require__(/*! ../internals/to-offset */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f;
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js");
var forEach = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach;
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var round = Math.round;
var RangeError = global.RangeError;
var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;
var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
var TypedArray = ArrayBufferViewCore.TypedArray;
var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var isTypedArray = ArrayBufferViewCore.isTypedArray;
var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
var WRONG_LENGTH = 'Wrong length';

var fromList = function (C, list) {
  var index = 0;
  var length = list.length;
  var result = new (aTypedArrayConstructor(C))(length);
  while (length > index) result[index] = list[index++];
  return result;
};

var addGetter = function (it, key) {
  nativeDefineProperty(it, key, { get: function () {
    return getInternalState(this)[key];
  } });
};

var isArrayBuffer = function (it) {
  var klass;
  return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
};

var isTypedArrayIndex = function (target, key) {
  return isTypedArray(target)
    && !isSymbol(key)
    && key in target
    && isInteger(+key)
    && key >= 0;
};

var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
  key = toPropertyKey(key);
  return isTypedArrayIndex(target, key)
    ? createPropertyDescriptor(2, target[key])
    : nativeGetOwnPropertyDescriptor(target, key);
};

var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
  key = toPropertyKey(key);
  if (isTypedArrayIndex(target, key)
    && isObject(descriptor)
    && has(descriptor, 'value')
    && !has(descriptor, 'get')
    && !has(descriptor, 'set')
    // TODO: add validation descriptor w/o calling accessors
    && !descriptor.configurable
    && (!has(descriptor, 'writable') || descriptor.writable)
    && (!has(descriptor, 'enumerable') || descriptor.enumerable)
  ) {
    target[key] = descriptor.value;
    return target;
  } return nativeDefineProperty(target, key, descriptor);
};

if (DESCRIPTORS) {
  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
    definePropertyModule.f = wrappedDefineProperty;
    addGetter(TypedArrayPrototype, 'buffer');
    addGetter(TypedArrayPrototype, 'byteOffset');
    addGetter(TypedArrayPrototype, 'byteLength');
    addGetter(TypedArrayPrototype, 'length');
  }

  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
    defineProperty: wrappedDefineProperty
  });

  module.exports = function (TYPE, wrapper, CLAMPED) {
    var BYTES = TYPE.match(/\d+$/)[0] / 8;
    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + TYPE;
    var SETTER = 'set' + TYPE;
    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
    var TypedArrayConstructor = NativeTypedArrayConstructor;
    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
    var exported = {};

    var getter = function (that, index) {
      var data = getInternalState(that);
      return data.view[GETTER](index * BYTES + data.byteOffset, true);
    };

    var setter = function (that, index, value) {
      var data = getInternalState(that);
      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
      data.view[SETTER](index * BYTES + data.byteOffset, value, true);
    };

    var addElement = function (that, index) {
      nativeDefineProperty(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };

    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);
        var index = 0;
        var byteOffset = 0;
        var buffer, byteLength, length;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new ArrayBuffer(byteLength);
        } else if (isArrayBuffer(data)) {
          buffer = data;
          byteOffset = toOffset(offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - byteOffset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (isTypedArray(data)) {
          return fromList(TypedArrayConstructor, data);
        } else {
          return typedArrayFrom.call(TypedArrayConstructor, data);
        }
        setInternalState(that, {
          buffer: buffer,
          byteOffset: byteOffset,
          byteLength: byteLength,
          length: length,
          view: new DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
        anInstance(dummy, TypedArrayConstructor, CONSTRUCTOR_NAME);
        return inheritIfRequired(function () {
          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
          if (isArrayBuffer(data)) return $length !== undefined
            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)
            : typedArrayOffset !== undefined
              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))
              : new NativeTypedArrayConstructor(data);
          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
          return typedArrayFrom.call(TypedArrayConstructor, data);
        }(), dummy, TypedArrayConstructor);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
        if (!(key in TypedArrayConstructor)) {
          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
        }
      });
      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
    }

    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
    }

    createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR, TypedArrayConstructor);

    if (TYPED_ARRAY_TAG) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
    }

    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

    $({
      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS
    }, exported);

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
    }

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
    }

    setSpecies(CONSTRUCTOR_NAME);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js":
/*!************************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js ***!
  \************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable no-new -- required for testing */
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");
var NATIVE_ARRAY_BUFFER_VIEWS = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").NATIVE_ARRAY_BUFFER_VIEWS;

var ArrayBuffer = global.ArrayBuffer;
var Int8Array = global.Int8Array;

module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
  Int8Array(1);
}) || !fails(function () {
  new Int8Array(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
  new Int8Array();
  new Int8Array(null);
  new Int8Array(1.5);
  new Int8Array(iterable);
}, true) || fails(function () {
  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from-species-and-list.js":
/*!****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from-species-and-list.js ***!
  \****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayFromConstructorAndList = __webpack_require__(/*! ../internals/array-from-constructor-and-list */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from-constructor-and-list.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");

module.exports = function (instance, list) {
  return arrayFromConstructorAndList(typedArraySpeciesConstructor(instance), list);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var aTypedArrayConstructor = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").aTypedArrayConstructor;

module.exports = function from(source /* , mapfn, thisArg */) {
  var O = toObject(source);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var i, length, result, step, iterator, next;
  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    O = [];
    while (!(step = next.call(iterator)).done) {
      O.push(step.value);
    }
  }
  if (mapping && argumentsLength > 2) {
    mapfn = bind(mapfn, arguments[2], 2);
  }
  length = toLength(O.length);
  result = new (aTypedArrayConstructor(this))(length);
  for (i = 0; length > i; i++) {
    result[i] = mapping ? mapfn(O[i], i) : O[i];
  }
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js":
/*!**************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js ***!
  \**************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");

var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;

// a part of `TypedArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#typedarray-species-create
module.exports = function (originalArray) {
  return aTypedArrayConstructor(speciesConstructor(originalArray, originalArray[TYPED_ARRAY_CONSTRUCTOR]));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js":
/*!**********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js ***!
  \**********************************************************************************************************/
/***/ (function(module) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    if (NATIVE_SYMBOL && has(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js ***!
  \******************************************************************************************************************/
/***/ (function(module) {

// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var $AggregateError = function AggregateError(errors, message) {
  var that = this;
  if (!(that instanceof $AggregateError)) return new $AggregateError(errors, message);
  if (setPrototypeOf) {
    // eslint-disable-next-line unicorn/error-message -- expected
    that = setPrototypeOf(new Error(undefined), getPrototypeOf(that));
  }
  if (message !== undefined) createNonEnumerableProperty(that, 'message', toString(message));
  var errorsArray = [];
  iterate(errors, errorsArray.push, { that: errorsArray });
  createNonEnumerableProperty(that, 'errors', errorsArray);
  return that;
};

$AggregateError.prototype = create(Error.prototype, {
  constructor: createPropertyDescriptor(5, $AggregateError),
  message: createPropertyDescriptor(5, ''),
  name: createPropertyDescriptor(5, 'AggregateError')
});

// `AggregateError` constructor
// https://tc39.es/ecma262/#sec-aggregate-error-constructor
$({ global: true }, {
  AggregateError: $AggregateError
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.constructor.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.constructor.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var arrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");

var ARRAY_BUFFER = 'ArrayBuffer';
var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
var NativeArrayBuffer = global[ARRAY_BUFFER];

// `ArrayBuffer` constructor
// https://tc39.es/ecma262/#sec-arraybuffer-constructor
$({ global: true, forced: NativeArrayBuffer !== ArrayBuffer }, {
  ArrayBuffer: ArrayBuffer
});

setSpecies(ARRAY_BUFFER);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.is-view.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.is-view.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");

var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;

// `ArrayBuffer.isView` method
// https://tc39.es/ecma262/#sec-arraybuffer.isview
$({ target: 'ArrayBuffer', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
  isView: ArrayBufferViewCore.isView
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.slice.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.slice.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");

var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var nativeArrayBufferSlice = ArrayBuffer.prototype.slice;

var INCORRECT_SLICE = fails(function () {
  return !new ArrayBuffer(2).slice(1, undefined).byteLength;
});

// `ArrayBuffer.prototype.slice` method
// https://tc39.es/ecma262/#sec-arraybuffer.prototype.slice
$({ target: 'ArrayBuffer', proto: true, unsafe: true, forced: INCORRECT_SLICE }, {
  slice: function slice(start, end) {
    if (nativeArrayBufferSlice !== undefined && end === undefined) {
      return nativeArrayBufferSlice.call(anObject(this), start); // FF fix
    }
    var length = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));
    var viewSource = new DataView(this);
    var viewTarget = new DataView(result);
    var index = 0;
    while (first < fin) {
      viewTarget.setUint8(index++, viewSource.getUint8(first++));
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.at.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.at.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method
$({ target: 'Array', proto: true }, {
  at: function at(index) {
    var O = toObject(this);
    var len = toLength(O.length);
    var relativeIndex = toInteger(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return (k < 0 || k >= len) ? undefined : O[k];
  }
});

addToUnscopables('at');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.concat.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.concat.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.copy-within.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.copy-within.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var copyWithin = __webpack_require__(/*! ../internals/array-copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
$({ target: 'Array', proto: true }, {
  copyWithin: copyWithin
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('copyWithin');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.every.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.every.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $every = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").every;
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('every');

// `Array.prototype.every` method
// https://tc39.es/ecma262/#sec-array.prototype.every
$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.fill.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.fill.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fill = __webpack_require__(/*! ../internals/array-fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.fill` method
// https://tc39.es/ecma262/#sec-array.prototype.fill
$({ target: 'Array', proto: true }, {
  fill: fill
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('fill');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.filter.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.filter.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $filter = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find-index.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find-index.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $findIndex = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").findIndex;
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findindex
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $find = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").find;
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

var FIND = 'find';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.es/ecma262/#sec-array.prototype.find
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat-map.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat-map.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flatMap` method
// https://tc39.es/ecma262/#sec-array.prototype.flatmap
$({ target: 'Array', proto: true }, {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A;
    aFunction(callbackfn);
    A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flat` method
// https://tc39.es/ecma262/#sec-array.prototype.flat
$({ target: 'Array', proto: true }, {
  flat: function flat(/* depthArg = 1 */) {
    var depthArg = arguments.length ? arguments[0] : undefined;
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.for-each.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.for-each.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js");

// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.from.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.from.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var from = __webpack_require__(/*! ../internals/array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.includes.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.includes.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $includes = __webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").includes;
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.index-of.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.index-of.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-indexof -- required for testing */
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $indexOf = __webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").indexOf;
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.is-array.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.is-array.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");

// `Array.isArray` method
// https://tc39.es/ecma262/#sec-array.isarray
$({ target: 'Array', stat: true }, {
  isArray: isArray
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.join.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.join.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var nativeJoin = [].join;

var ES3_STRINGS = IndexedObject != Object;
var STRICT_METHOD = arrayMethodIsStrict('join', ',');

// `Array.prototype.join` method
// https://tc39.es/ecma262/#sec-array.prototype.join
$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
  join: function join(separator) {
    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.last-index-of.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.last-index-of.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var lastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js");

// `Array.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
// eslint-disable-next-line es/no-array-prototype-lastindexof -- required for testing
$({ target: 'Array', proto: true, forced: lastIndexOf !== [].lastIndexOf }, {
  lastIndexOf: lastIndexOf
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.map.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.map.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $map = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").map;
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.of.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.of.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");

var ISNT_GENERIC = fails(function () {
  function F() { /* empty */ }
  // eslint-disable-next-line es/no-array-of -- required for testing
  return !(Array.of.call(F) instanceof F);
});

// `Array.of` method
// https://tc39.es/ecma262/#sec-array.of
// WebKit Array.of isn't generic
$({ target: 'Array', stat: true, forced: ISNT_GENERIC }, {
  of: function of(/* ...args */) {
    var index = 0;
    var argumentsLength = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(argumentsLength);
    while (argumentsLength > index) createProperty(result, index, arguments[index++]);
    result.length = argumentsLength;
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce-right.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce-right.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $reduceRight = __webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").right;
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");
var CHROME_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var STRICT_METHOD = arrayMethodIsStrict('reduceRight');
// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

// `Array.prototype.reduceRight` method
// https://tc39.es/ecma262/#sec-array.prototype.reduceright
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $reduce = __webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").left;
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");
var CHROME_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var STRICT_METHOD = arrayMethodIsStrict('reduce');
// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reverse.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reverse.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");

var nativeReverse = [].reverse;
var test = [1, 2];

// `Array.prototype.reverse` method
// https://tc39.es/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794
$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {
  reverse: function reverse() {
    // eslint-disable-next-line no-self-assign -- dirty hack
    if (isArray(this)) this.length = this.length;
    return nativeReverse.call(this);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.slice.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.slice.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.some.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.some.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $some = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").some;
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('some');

// `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some
$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.sort.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.sort.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var internalSort = __webpack_require__(/*! ../internals/array-sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");
var FF = __webpack_require__(/*! ../internals/engine-ff-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js");
var IE_OR_EDGE = __webpack_require__(/*! ../internals/engine-is-ie-or-edge */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js");
var V8 = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js");

var test = [];
var nativeSort = test.sort;

// IE8-
var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails(function () {
  test.sort(null);
});
// Old WebKit
var STRICT_METHOD = arrayMethodIsStrict('sort');

var STABLE_SORT = !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 70;
  if (FF && FF > 3) return;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 603;

  var result = '';
  var code, chr, value, index;

  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);

    switch (code) {
      case 66: case 69: case 70: case 72: value = 3; break;
      case 68: case 71: value = 4; break;
      default: value = 2;
    }

    for (index = 0; index < 47; index++) {
      test.push({ k: chr + index, v: value });
    }
  }

  test.sort(function (a, b) { return b.v - a.v; });

  for (index = 0; index < test.length; index++) {
    chr = test[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }

  return result !== 'DGBEFHACIJK';
});

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString(x) > toString(y) ? 1 : -1;
  };
};

// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
$({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aFunction(comparefn);

    var array = toObject(this);

    if (STABLE_SORT) return comparefn === undefined ? nativeSort.call(array) : nativeSort.call(array, comparefn);

    var items = [];
    var arrayLength = toLength(array.length);
    var itemsLength, index;

    for (index = 0; index < arrayLength; index++) {
      if (index in array) items.push(array[index]);
    }

    items = internalSort(items, getSortCompare(comparefn));
    itemsLength = items.length;
    index = 0;

    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) delete array[index++];

    return array;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.species.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.species.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");

// `Array[@@species]` getter
// https://tc39.es/ecma262/#sec-get-array-@@species
setSpecies('Array');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.splice.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.splice.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat-map.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat-map.js ***!
  \**********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('flatMap');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('flat');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.data-view.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.data-view.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js");

// `DataView` constructor
// https://tc39.es/ecma262/#sec-dataview-constructor
$({ global: true, forced: !NATIVE_ARRAY_BUFFER }, {
  DataView: ArrayBufferModule.DataView
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.get-year.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.get-year.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var FORCED = fails(function () {
  return new Date(16e11).getYear() !== 120;
});

var getFullYear = Date.prototype.getFullYear;

// `Date.prototype.getYear` method
// https://tc39.es/ecma262/#sec-date.prototype.getyear
$({ target: 'Date', proto: true, forced: FORCED }, {
  getYear: function getYear() {
    return getFullYear.call(this) - 1900;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.now.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.now.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Date.now` method
// https://tc39.es/ecma262/#sec-date.now
$({ target: 'Date', stat: true }, {
  now: function now() {
    return new Date().getTime();
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.set-year.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.set-year.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");

var getTime = Date.prototype.getTime;
var setFullYear = Date.prototype.setFullYear;

// `Date.prototype.setYear` method
// https://tc39.es/ecma262/#sec-date.prototype.setyear
$({ target: 'Date', proto: true }, {
  setYear: function setYear(year) {
    // validate
    getTime.call(this);
    var yi = toInteger(year);
    var yyyy = 0 <= yi && yi <= 99 ? yi + 1900 : yi;
    return setFullYear.call(this, yyyy);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-gmt-string.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-gmt-string.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Date.prototype.toGMTString` method
// https://tc39.es/ecma262/#sec-date.prototype.togmtstring
$({ target: 'Date', proto: true }, {
  toGMTString: Date.prototype.toUTCString
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-iso-string.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-iso-string.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toISOString = __webpack_require__(/*! ../internals/date-to-iso-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-iso-string.js");

// `Date.prototype.toISOString` method
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit has a broken implementations
$({ target: 'Date', proto: true, forced: Date.prototype.toISOString !== toISOString }, {
  toISOString: toISOString
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-json.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-json.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js");

var FORCED = fails(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
});

// `Date.prototype.toJSON` method
// https://tc39.es/ecma262/#sec-date.prototype.tojson
$({ target: 'Date', proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O, 'number');
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-primitive.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-primitive.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var dateToPrimitive = __webpack_require__(/*! ../internals/date-to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var DatePrototype = Date.prototype;

// `Date.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
if (!(TO_PRIMITIVE in DatePrototype)) {
  createNonEnumerableProperty(DatePrototype, TO_PRIMITIVE, dateToPrimitive);
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-string.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-string.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");

var DatePrototype = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var nativeDateToString = DatePrototype[TO_STRING];
var getTime = DatePrototype.getTime;

// `Date.prototype.toString` method
// https://tc39.es/ecma262/#sec-date.prototype.tostring
if (String(new Date(NaN)) != INVALID_DATE) {
  redefine(DatePrototype, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare -- NaN check
    return value === value ? nativeDateToString.call(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.escape.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.escape.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var raw = /[\w*+\-./@]/;

var hex = function (code, length) {
  var result = code.toString(16);
  while (result.length < length) result = '0' + result;
  return result;
};

// `escape` method
// https://tc39.es/ecma262/#sec-escape-string
$({ global: true }, {
  escape: function escape(string) {
    var str = toString(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, code;
    while (index < length) {
      chr = str.charAt(index++);
      if (raw.test(chr)) {
        result += chr;
      } else {
        code = chr.charCodeAt(0);
        if (code < 256) {
          result += '%' + hex(code, 2);
        } else {
          result += '%u' + hex(code, 4).toUpperCase();
        }
      }
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.bind.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.bind.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js");

// `Function.prototype.bind` method
// https://tc39.es/ecma262/#sec-function.prototype.bind
$({ target: 'Function', proto: true }, {
  bind: bind
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.has-instance.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.has-instance.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var HAS_INSTANCE = wellKnownSymbol('hasInstance');
var FunctionPrototype = Function.prototype;

// `Function.prototype[@@hasInstance]` method
// https://tc39.es/ecma262/#sec-function.prototype-@@hasinstance
if (!(HAS_INSTANCE in FunctionPrototype)) {
  definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, { value: function (O) {
    if (typeof this != 'function' || !isObject(O)) return false;
    if (!isObject(this.prototype)) return O instanceof this;
    // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
    while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
    return false;
  } });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.name.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.name.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.global-this.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.global-this.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// `globalThis` object
// https://tc39.es/ecma262/#sec-globalthis
$({ global: true }, {
  globalThis: global
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.stringify.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.stringify.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var $stringify = getBuiltIn('JSON', 'stringify');
var re = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;

var fix = function (match, offset, string) {
  var prev = string.charAt(offset - 1);
  var next = string.charAt(offset + 1);
  if ((low.test(match) && !hi.test(next)) || (hi.test(match) && !low.test(prev))) {
    return '\\u' + match.charCodeAt(0).toString(16);
  } return match;
};

var FORCED = fails(function () {
  return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"'
    || $stringify('\uDEAD') !== '"\\udead"';
});

if ($stringify) {
  // `JSON.stringify` method
  // https://tc39.es/ecma262/#sec-json.stringify
  // https://github.com/tc39/proposal-well-formed-stringify
  $({ target: 'JSON', stat: true, forced: FORCED }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var result = $stringify.apply(null, arguments);
      return typeof result == 'string' ? result.replace(re, fix) : result;
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.to-string-tag.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.to-string-tag.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");

// JSON[@@toStringTag] property
// https://tc39.es/ecma262/#sec-json-@@tostringtag
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.map.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.map.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js");

// `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects
module.exports = collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.acosh.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.acosh.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var log1p = __webpack_require__(/*! ../internals/math-log1p */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js");

// eslint-disable-next-line es/no-math-acosh -- required for testing
var $acosh = Math.acosh;
var log = Math.log;
var sqrt = Math.sqrt;
var LN2 = Math.LN2;

var FORCED = !$acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  || Math.floor($acosh(Number.MAX_VALUE)) != 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  || $acosh(Infinity) != Infinity;

// `Math.acosh` method
// https://tc39.es/ecma262/#sec-math.acosh
$({ target: 'Math', stat: true, forced: FORCED }, {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? log(x) + LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.asinh.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.asinh.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// eslint-disable-next-line es/no-math-asinh -- required for testing
var $asinh = Math.asinh;
var log = Math.log;
var sqrt = Math.sqrt;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));
}

// `Math.asinh` method
// https://tc39.es/ecma262/#sec-math.asinh
// Tor Browser bug: Math.asinh(0) -> -0
$({ target: 'Math', stat: true, forced: !($asinh && 1 / $asinh(0) > 0) }, {
  asinh: asinh
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.atanh.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.atanh.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// eslint-disable-next-line es/no-math-atanh -- required for testing
var $atanh = Math.atanh;
var log = Math.log;

// `Math.atanh` method
// https://tc39.es/ecma262/#sec-math.atanh
// Tor Browser bug: Math.atanh(-0) -> 0
$({ target: 'Math', stat: true, forced: !($atanh && 1 / $atanh(-0) < 0) }, {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cbrt.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cbrt.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js");

var abs = Math.abs;
var pow = Math.pow;

// `Math.cbrt` method
// https://tc39.es/ecma262/#sec-math.cbrt
$({ target: 'Math', stat: true }, {
  cbrt: function cbrt(x) {
    return sign(x = +x) * pow(abs(x), 1 / 3);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.clz32.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.clz32.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

var floor = Math.floor;
var log = Math.log;
var LOG2E = Math.LOG2E;

// `Math.clz32` method
// https://tc39.es/ecma262/#sec-math.clz32
$({ target: 'Math', stat: true }, {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - floor(log(x + 0.5) * LOG2E) : 32;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cosh.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cosh.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

// eslint-disable-next-line es/no-math-cosh -- required for testing
var $cosh = Math.cosh;
var abs = Math.abs;
var E = Math.E;

// `Math.cosh` method
// https://tc39.es/ecma262/#sec-math.cosh
$({ target: 'Math', stat: true, forced: !$cosh || $cosh(710) === Infinity }, {
  cosh: function cosh(x) {
    var t = expm1(abs(x) - 1) + 1;
    return (t + 1 / (t * E * E)) * (E / 2);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.expm1.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.expm1.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

// `Math.expm1` method
// https://tc39.es/ecma262/#sec-math.expm1
// eslint-disable-next-line es/no-math-expm1 -- required for testing
$({ target: 'Math', stat: true, forced: expm1 != Math.expm1 }, { expm1: expm1 });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.fround.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.fround.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fround = __webpack_require__(/*! ../internals/math-fround */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-fround.js");

// `Math.fround` method
// https://tc39.es/ecma262/#sec-math.fround
$({ target: 'Math', stat: true }, { fround: fround });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.hypot.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.hypot.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// eslint-disable-next-line es/no-math-hypot -- required for testing
var $hypot = Math.hypot;
var abs = Math.abs;
var sqrt = Math.sqrt;

// Chrome 77 bug
// https://bugs.chromium.org/p/v8/issues/detail?id=9546
var BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;

// `Math.hypot` method
// https://tc39.es/ecma262/#sec-math.hypot
$({ target: 'Math', stat: true, forced: BUGGY }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  hypot: function hypot(value1, value2) {
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * sqrt(sum);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.imul.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.imul.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-math-imul -- required for testing
var $imul = Math.imul;

var FORCED = fails(function () {
  return $imul(0xFFFFFFFF, 5) != -5 || $imul.length != 2;
});

// `Math.imul` method
// https://tc39.es/ecma262/#sec-math.imul
// some WebKit versions fails with big numbers, some has wrong arity
$({ target: 'Math', stat: true, forced: FORCED }, {
  imul: function imul(x, y) {
    var UINT16 = 0xFFFF;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log10.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log10.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

var log = Math.log;
var LOG10E = Math.LOG10E;

// `Math.log10` method
// https://tc39.es/ecma262/#sec-math.log10
$({ target: 'Math', stat: true }, {
  log10: function log10(x) {
    return log(x) * LOG10E;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log1p.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log1p.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var log1p = __webpack_require__(/*! ../internals/math-log1p */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js");

// `Math.log1p` method
// https://tc39.es/ecma262/#sec-math.log1p
$({ target: 'Math', stat: true }, { log1p: log1p });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log2.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log2.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

var log = Math.log;
var LN2 = Math.LN2;

// `Math.log2` method
// https://tc39.es/ecma262/#sec-math.log2
$({ target: 'Math', stat: true }, {
  log2: function log2(x) {
    return log(x) / LN2;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sign.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sign.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js");

// `Math.sign` method
// https://tc39.es/ecma262/#sec-math.sign
$({ target: 'Math', stat: true }, {
  sign: sign
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sinh.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sinh.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

var abs = Math.abs;
var exp = Math.exp;
var E = Math.E;

var FORCED = fails(function () {
  // eslint-disable-next-line es/no-math-sinh -- required for testing
  return Math.sinh(-2e-17) != -2e-17;
});

// `Math.sinh` method
// https://tc39.es/ecma262/#sec-math.sinh
// V8 near Chromium 38 has a problem with very small numbers
$({ target: 'Math', stat: true, forced: FORCED }, {
  sinh: function sinh(x) {
    return abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.tanh.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.tanh.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

var exp = Math.exp;

// `Math.tanh` method
// https://tc39.es/ecma262/#sec-math.tanh
$({ target: 'Math', stat: true }, {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.to-string-tag.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.to-string-tag.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");

// Math[@@toStringTag] property
// https://tc39.es/ecma262/#sec-math-@@tostringtag
setToStringTag(Math, 'Math', true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.trunc.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.trunc.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
$({ target: 'Math', stat: true }, {
  trunc: function trunc(it) {
    return (it > 0 ? floor : ceil)(it);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.constructor.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.constructor.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f;
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var trim = __webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim;

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF = classof(create(NumberPrototype)) == NUMBER;

// `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber
var toNumber = function (argument) {
  if (isSymbol(argument)) throw TypeError('Cannot convert a Symbol value to a number');
  var it = toPrimitive(argument, 'number');
  var first, third, radix, maxCode, digits, length, index, code;
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = it.charCodeAt(0);
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = it.slice(2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = digits.charCodeAt(index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var dummy = this;
    return dummy instanceof NumberWrapper
      // check on 1..constructor(foo) case
      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(dummy); }) : classof(dummy) != NUMBER)
        ? inheritIfRequired(new NativeNumber(toNumber(it)), dummy, NumberWrapper) : toNumber(it);
  };
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,' +
    // ESNext
    'fromString,range'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.epsilon.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.epsilon.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.EPSILON` constant
// https://tc39.es/ecma262/#sec-number.epsilon
$({ target: 'Number', stat: true }, {
  EPSILON: Math.pow(2, -52)
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-finite.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-finite.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var numberIsFinite = __webpack_require__(/*! ../internals/number-is-finite */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-is-finite.js");

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
$({ target: 'Number', stat: true }, { isFinite: numberIsFinite });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-integer.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-integer.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isInteger = __webpack_require__(/*! ../internals/is-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integer.js");

// `Number.isInteger` method
// https://tc39.es/ecma262/#sec-number.isinteger
$({ target: 'Number', stat: true }, {
  isInteger: isInteger
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-nan.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-nan.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.isNaN` method
// https://tc39.es/ecma262/#sec-number.isnan
$({ target: 'Number', stat: true }, {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare -- NaN check
    return number != number;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-safe-integer.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-safe-integer.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isInteger = __webpack_require__(/*! ../internals/is-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integer.js");

var abs = Math.abs;

// `Number.isSafeInteger` method
// https://tc39.es/ecma262/#sec-number.issafeinteger
$({ target: 'Number', stat: true }, {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1FFFFFFFFFFFFF;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.max-safe-integer.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.max-safe-integer.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.MAX_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.max_safe_integer
$({ target: 'Number', stat: true }, {
  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.min-safe-integer.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.min-safe-integer.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.MIN_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.min_safe_integer
$({ target: 'Number', stat: true }, {
  MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-float.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-float.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var parseFloat = __webpack_require__(/*! ../internals/number-parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js");

// `Number.parseFloat` method
// https://tc39.es/ecma262/#sec-number.parseFloat
// eslint-disable-next-line es/no-number-parsefloat -- required for testing
$({ target: 'Number', stat: true, forced: Number.parseFloat != parseFloat }, {
  parseFloat: parseFloat
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-int.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-int.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var parseInt = __webpack_require__(/*! ../internals/number-parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js");

// `Number.parseInt` method
// https://tc39.es/ecma262/#sec-number.parseint
// eslint-disable-next-line es/no-number-parseint -- required for testing
$({ target: 'Number', stat: true, forced: Number.parseInt != parseInt }, {
  parseInt: parseInt
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-fixed.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-fixed.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js");
var repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var nativeToFixed = 1.0.toFixed;
var floor = Math.floor;

var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

var multiply = function (data, n, c) {
  var index = -1;
  var c2 = c;
  while (++index < 6) {
    c2 += n * data[index];
    data[index] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};

var divide = function (data, n) {
  var index = 6;
  var c = 0;
  while (--index >= 0) {
    c += data[index];
    data[index] = floor(c / n);
    c = (c % n) * 1e7;
  }
};

var dataToString = function (data) {
  var index = 6;
  var s = '';
  while (--index >= 0) {
    if (s !== '' || index === 0 || data[index] !== 0) {
      var t = String(data[index]);
      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;
    }
  } return s;
};

var FORCED = nativeToFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !fails(function () {
  // V8 ~ Android 4.3-
  nativeToFixed.call({});
});

// `Number.prototype.toFixed` method
// https://tc39.es/ecma262/#sec-number.prototype.tofixed
$({ target: 'Number', proto: true, forced: FORCED }, {
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue(this);
    var fractDigits = toInteger(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k;

    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare -- NaN check
    if (number != number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return String(number);
    if (number < 0) {
      sign = '-';
      number = -number;
    }
    if (number > 1e-21) {
      e = log(number * pow(2, 69, 1)) - 69;
      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(data, 0, z);
        j = fractDigits;
        while (j >= 7) {
          multiply(data, 1e7, 0);
          j -= 7;
        }
        multiply(data, pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(data, 1 << 23);
          j -= 23;
        }
        divide(data, 1 << j);
        multiply(data, 1, 1);
        divide(data, 2);
        result = dataToString(data);
      } else {
        multiply(data, 0, z);
        multiply(data, 1 << -e, 0);
        result = dataToString(data) + repeat.call('0', fractDigits);
      }
    }
    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits
        ? '0.' + repeat.call('0', fractDigits - k) + result
        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));
    } else {
      result = sign + result;
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-precision.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-precision.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js");

var nativeToPrecision = 1.0.toPrecision;

var FORCED = fails(function () {
  // IE7-
  return nativeToPrecision.call(1, undefined) !== '1';
}) || !fails(function () {
  // V8 ~ Android 4.3-
  nativeToPrecision.call({});
});

// `Number.prototype.toPrecision` method
// https://tc39.es/ecma262/#sec-number.prototype.toprecision
$({ target: 'Number', proto: true, forced: FORCED }, {
  toPrecision: function toPrecision(precision) {
    return precision === undefined
      ? nativeToPrecision.call(thisNumberValue(this))
      : nativeToPrecision.call(thisNumberValue(this), precision);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.assign.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.assign.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.create.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.create.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  create: create
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-getter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-getter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

// `Object.prototype.__defineGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineGetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __defineGetter__: function __defineGetter__(P, getter) {
      definePropertyModule.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-properties.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-properties.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var defineProperties = __webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {
  defineProperties: defineProperties
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-property.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-property.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var objectDefinePropertyModile = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
$({ target: 'Object', stat: true, forced: !DESCRIPTORS, sham: !DESCRIPTORS }, {
  defineProperty: objectDefinePropertyModile.f
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-setter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-setter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

// `Object.prototype.__defineSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineSetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __defineSetter__: function __defineSetter__(P, setter) {
      definePropertyModule.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.entries.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.entries.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $entries = __webpack_require__(/*! ../internals/object-to-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js").entries;

// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
$({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.freeze.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.freeze.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var onFreeze = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").onFreeze;

// eslint-disable-next-line es/no-object-freeze -- safe
var $freeze = Object.freeze;
var FAILS_ON_PRIMITIVES = fails(function () { $freeze(1); });

// `Object.freeze` method
// https://tc39.es/ecma262/#sec-object.freeze
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  freeze: function freeze(it) {
    return $freeze && isObject(it) ? $freeze(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.from-entries.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.from-entries.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");

// `Object.fromEntries` method
// https://github.com/tc39/proposal-object-from-entries
$({ target: 'Object', stat: true }, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function (k, v) {
      createProperty(obj, k, v);
    }, { AS_ENTRIES: true });
    return obj;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptor.js":
/*!******************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptor.js ***!
  \******************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var nativeGetOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptors.js":
/*!*******************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptors.js ***!
  \*******************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-names.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-names.js ***!
  \*************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js").f;

// eslint-disable-next-line es/no-object-getownpropertynames -- required for testing
var FAILS_ON_PRIMITIVES = fails(function () { return !Object.getOwnPropertyNames(1); });

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  getOwnPropertyNames: getOwnPropertyNames
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-prototype-of.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-prototype-of.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var nativeGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.has-own.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.has-own.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var hasOwn = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");

// `Object.hasOwn` method
// https://github.com/tc39/proposal-accessible-object-hasownproperty
$({ target: 'Object', stat: true }, {
  hasOwn: hasOwn
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-extensible.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-extensible.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

// eslint-disable-next-line es/no-object-isextensible -- safe
var $isExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES = fails(function () { $isExtensible(1); });

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  isExtensible: function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-frozen.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-frozen.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

// eslint-disable-next-line es/no-object-isfrozen -- safe
var $isFrozen = Object.isFrozen;
var FAILS_ON_PRIMITIVES = fails(function () { $isFrozen(1); });

// `Object.isFrozen` method
// https://tc39.es/ecma262/#sec-object.isfrozen
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  isFrozen: function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-sealed.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-sealed.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

// eslint-disable-next-line es/no-object-issealed -- safe
var $isSealed = Object.isSealed;
var FAILS_ON_PRIMITIVES = fails(function () { $isSealed(1); });

// `Object.isSealed` method
// https://tc39.es/ecma262/#sec-object.issealed
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  isSealed: function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var is = __webpack_require__(/*! ../internals/same-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js");

// `Object.is` method
// https://tc39.es/ecma262/#sec-object.is
$({ target: 'Object', stat: true }, {
  is: is
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.keys.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.keys.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var nativeKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-getter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-getter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;

// `Object.prototype.__lookupGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupGetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupGetter__: function __lookupGetter__(P) {
      var O = toObject(this);
      var key = toPropertyKey(P);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.get;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-setter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-setter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;

// `Object.prototype.__lookupSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupSetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupSetter__: function __lookupSetter__(P) {
      var O = toObject(this);
      var key = toPropertyKey(P);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.set;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.prevent-extensions.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.prevent-extensions.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var onFreeze = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").onFreeze;
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-preventextensions -- safe
var $preventExtensions = Object.preventExtensions;
var FAILS_ON_PRIMITIVES = fails(function () { $preventExtensions(1); });

// `Object.preventExtensions` method
// https://tc39.es/ecma262/#sec-object.preventextensions
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  preventExtensions: function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.seal.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.seal.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var onFreeze = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").onFreeze;
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-seal -- safe
var $seal = Object.seal;
var FAILS_ON_PRIMITIVES = fails(function () { $seal(1); });

// `Object.seal` method
// https://tc39.es/ecma262/#sec-object.seal
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  seal: function seal(it) {
    return $seal && isObject(it) ? $seal(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.set-prototype-of.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.set-prototype-of.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
$({ target: 'Object', stat: true }, {
  setPrototypeOf: setPrototypeOf
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.to-string.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.to-string.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var toString = __webpack_require__(/*! ../internals/object-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.values.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.values.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $values = __webpack_require__(/*! ../internals/object-to-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js").values;

// `Object.values` method
// https://tc39.es/ecma262/#sec-object.values
$({ target: 'Object', stat: true }, {
  values: function values(O) {
    return $values(O);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-float.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-float.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var parseFloatImplementation = __webpack_require__(/*! ../internals/number-parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js");

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
$({ global: true, forced: parseFloat != parseFloatImplementation }, {
  parseFloat: parseFloatImplementation
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-int.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-int.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var parseIntImplementation = __webpack_require__(/*! ../internals/number-parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js");

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
$({ global: true, forced: parseInt != parseIntImplementation }, {
  parseInt: parseIntImplementation
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.all-settled.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.all-settled.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");

// `Promise.allSettled` method
// https://tc39.es/ecma262/#sec-promise.allsettled
$({ target: 'Promise', stat: true }, {
  allSettled: function allSettled(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'fulfilled', value: value };
          --remaining || resolve(values);
        }, function (error) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'rejected', reason: error };
          --remaining || resolve(values);
        });
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.any.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.any.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");

var PROMISE_ANY_ERROR = 'No one promise resolved';

// `Promise.any` method
// https://tc39.es/ecma262/#sec-promise.any
$({ target: 'Promise', stat: true }, {
  any: function any(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var errors = [];
      var counter = 0;
      var remaining = 1;
      var alreadyResolved = false;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyRejected = false;
        errors.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyResolved = true;
          resolve(value);
        }, function (error) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyRejected = true;
          errors[index] = error;
          --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
        });
      });
      --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.finally.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.finally.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var NativePromise = __webpack_require__(/*! ../internals/native-promise-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC = !!NativePromise && fails(function () {
  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });
});

// `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally
$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = typeof onFinally == 'function';
    return this.then(
      isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});

// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`
if (!IS_PURE && typeof NativePromise == 'function') {
  var method = getBuiltIn('Promise').prototype['finally'];
  if (NativePromise.prototype['finally'] !== method) {
    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });
  }
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var NativePromise = __webpack_require__(/*! ../internals/native-promise-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var task = __webpack_require__(/*! ../internals/task */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js").set;
var microtask = __webpack_require__(/*! ../internals/microtask */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/host-report-errors.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_BROWSER = __webpack_require__(/*! ../internals/engine-is-browser */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-browser.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var NativePromisePrototype = NativePromise && NativePromise.prototype;
var PromiseConstructor = NativePromise;
var PromiseConstructorPrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var SUBCLASSING = false;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructorPrototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = new PromiseConstructor(function (resolve) { resolve(1); });
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
  if (!SUBCLASSING) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  PromiseConstructorPrototype = PromiseConstructor.prototype;
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructorPrototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function' && NativePromisePrototype !== Object.prototype) {
    nativeThen = NativePromisePrototype.then;

    if (!SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          nativeThen.call(that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });

      // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
      redefine(NativePromisePrototype, 'catch', PromiseConstructorPrototype['catch'], { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (setPrototypeOf) {
      setPrototypeOf(NativePromisePrototype, PromiseConstructorPrototype);
    }
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.apply.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.apply.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var nativeApply = getBuiltIn('Reflect', 'apply');
var functionApply = Function.apply;

// MS Edge argumentsList argument is optional
var OPTIONAL_ARGUMENTS_LIST = !fails(function () {
  nativeApply(function () { /* empty */ });
});

// `Reflect.apply` method
// https://tc39.es/ecma262/#sec-reflect.apply
$({ target: 'Reflect', stat: true, forced: OPTIONAL_ARGUMENTS_LIST }, {
  apply: function apply(target, thisArgument, argumentsList) {
    aFunction(target);
    anObject(argumentsList);
    return nativeApply
      ? nativeApply(target, thisArgument, argumentsList)
      : functionApply.call(target, thisArgument, argumentsList);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.construct.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.construct.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var nativeConstruct = getBuiltIn('Reflect', 'construct');

// `Reflect.construct` method
// https://tc39.es/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.define-property.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.define-property.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
var ERROR_INSTEAD_OF_FALSE = fails(function () {
  // eslint-disable-next-line es/no-reflect -- required for testing
  Reflect.defineProperty(definePropertyModule.f({}, 1, { value: 1 }), 1, { value: 2 });
});

// `Reflect.defineProperty` method
// https://tc39.es/ecma262/#sec-reflect.defineproperty
$({ target: 'Reflect', stat: true, forced: ERROR_INSTEAD_OF_FALSE, sham: !DESCRIPTORS }, {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    var key = toPropertyKey(propertyKey);
    anObject(attributes);
    try {
      definePropertyModule.f(target, key, attributes);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.delete-property.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.delete-property.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;

// `Reflect.deleteProperty` method
// https://tc39.es/ecma262/#sec-reflect.deleteproperty
$({ target: 'Reflect', stat: true }, {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var descriptor = getOwnPropertyDescriptor(anObject(target), propertyKey);
    return descriptor && !descriptor.configurable ? false : delete target[propertyKey];
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js":
/*!*******************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js ***!
  \*******************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");

// `Reflect.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-reflect.getownpropertydescriptor
$({ target: 'Reflect', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-prototype-of.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-prototype-of.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var objectGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js");

// `Reflect.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.getprototypeof
$({ target: 'Reflect', stat: true, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(target) {
    return objectGetPrototypeOf(anObject(target));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isDataDescriptor = __webpack_require__(/*! ../internals/is-data-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");

// `Reflect.get` method
// https://tc39.es/ecma262/#sec-reflect.get
function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var descriptor, prototype;
  if (anObject(target) === receiver) return target[propertyKey];
  descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey);
  if (descriptor) return isDataDescriptor(descriptor)
    ? descriptor.value
    : descriptor.get === undefined ? undefined : descriptor.get.call(receiver);
  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);
}

$({ target: 'Reflect', stat: true }, {
  get: get
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.has.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.has.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Reflect.has` method
// https://tc39.es/ecma262/#sec-reflect.has
$({ target: 'Reflect', stat: true }, {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.is-extensible.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.is-extensible.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");

// eslint-disable-next-line es/no-object-isextensible -- safe
var objectIsExtensible = Object.isExtensible;

// `Reflect.isExtensible` method
// https://tc39.es/ecma262/#sec-reflect.isextensible
$({ target: 'Reflect', stat: true }, {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return objectIsExtensible ? objectIsExtensible(target) : true;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.own-keys.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.own-keys.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js");

// `Reflect.ownKeys` method
// https://tc39.es/ecma262/#sec-reflect.ownkeys
$({ target: 'Reflect', stat: true }, {
  ownKeys: ownKeys
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.prevent-extensions.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.prevent-extensions.js ***!
  \**********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");

// `Reflect.preventExtensions` method
// https://tc39.es/ecma262/#sec-reflect.preventextensions
$({ target: 'Reflect', stat: true, sham: !FREEZING }, {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      var objectPreventExtensions = getBuiltIn('Object', 'preventExtensions');
      if (objectPreventExtensions) objectPreventExtensions(target);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set-prototype-of.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set-prototype-of.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js");
var objectSetPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");

// `Reflect.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.setprototypeof
if (objectSetPrototypeOf) $({ target: 'Reflect', stat: true }, {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    anObject(target);
    aPossiblePrototype(proto);
    try {
      objectSetPrototypeOf(target, proto);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isDataDescriptor = __webpack_require__(/*! ../internals/is-data-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");

// `Reflect.set` method
// https://tc39.es/ecma262/#sec-reflect.set
function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDescriptor = getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  var existingDescriptor, prototype, setter;
  if (!ownDescriptor) {
    if (isObject(prototype = getPrototypeOf(target))) {
      return set(prototype, propertyKey, V, receiver);
    }
    ownDescriptor = createPropertyDescriptor(0);
  }
  if (isDataDescriptor(ownDescriptor)) {
    if (ownDescriptor.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = getOwnPropertyDescriptorModule.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      definePropertyModule.f(receiver, propertyKey, existingDescriptor);
    } else definePropertyModule.f(receiver, propertyKey, createPropertyDescriptor(0, V));
  } else {
    setter = ownDescriptor.set;
    if (setter === undefined) return false;
    setter.call(receiver, V);
  } return true;
}

// MS Edge 17-18 Reflect.set allows setting the property to object
// with non-writable property on the prototype
var MS_EDGE_BUG = fails(function () {
  var Constructor = function () { /* empty */ };
  var object = definePropertyModule.f(new Constructor(), 'a', { configurable: true });
  // eslint-disable-next-line es/no-reflect -- required for testing
  return Reflect.set(Constructor.prototype, 'a', 1, object) !== false;
});

$({ target: 'Reflect', stat: true, forced: MS_EDGE_BUG }, {
  set: set
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.to-string-tag.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.to-string-tag.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");

$({ global: true }, { Reflect: {} });

// Reflect[@@toStringTag] property
// https://tc39.es/ecma262/#sec-reflect-@@tostringtag
setToStringTag(global.Reflect, 'Reflect', true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.constructor.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.constructor.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f;
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var getFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var enforceInternalState = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").enforce;
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js");

var MATCH = wellKnownSymbol('match');
var NativeRegExp = global.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
// TODO: Use only propper RegExpIdentifierName
var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

var BASE_FORCED = DESCRIPTORS &&
  (!CORRECT_NEW || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {
    re2[MATCH] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
  }));

var handleDotAll = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;
  for (; index <= length; index++) {
    chr = string.charAt(index);
    if (chr === '\\') {
      result += chr + string.charAt(++index);
      continue;
    }
    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      } result += chr;
    }
  } return result;
};

var handleNCG = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = {};
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;
  for (; index <= length; index++) {
    chr = string.charAt(index);
    if (chr === '\\') {
      chr = chr + string.charAt(++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;
      case chr === '(':
        if (IS_NCG.test(string.slice(index + 1))) {
          index += 2;
          ncg = true;
        }
        result += chr;
        groupid++;
        continue;
      case chr === '>' && ncg:
        if (groupname === '' || has(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }
        names[groupname] = true;
        named.push([groupname, groupid]);
        ncg = false;
        groupname = '';
        continue;
    }
    if (ncg) groupname += chr;
    else result += chr;
  } return [result, named];
};

// `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor
if (isForced('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = this instanceof RegExpWrapper;
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;

    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }

    if (patternIsRegExp || pattern instanceof RegExpWrapper) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags.call(rawPattern);
    }

    pattern = pattern === undefined ? '' : toString(pattern);
    flags = flags === undefined ? '' : toString(flags);
    rawPattern = pattern;

    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
      dotAll = !!flags && flags.indexOf('s') > -1;
      if (dotAll) flags = flags.replace(/s/g, '');
    }

    rawFlags = flags;

    if (UNSUPPORTED_Y && 'sticky' in re1) {
      sticky = !!flags && flags.indexOf('y') > -1;
      if (sticky) flags = flags.replace(/y/g, '');
    }

    if (UNSUPPORTED_NCG) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }

    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);

    if (dotAll || sticky || groups.length) {
      state = enforceInternalState(result);
      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }
      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }

    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) { /* empty */ }

    return result;
  };

  var proxy = function (key) {
    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
      configurable: true,
      get: function () { return NativeRegExp[key]; },
      set: function (it) { NativeRegExp[key] = it; }
    });
  };

  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {
    proxy(keys[index++]);
  }

  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  redefine(global, 'RegExp', RegExpWrapper);
}

// https://tc39.es/ecma262/#sec-get-regexp-@@species
setSpecies('RegExp');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.dot-all.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.dot-all.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var getInternalState = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").get;
var RegExpPrototype = RegExp.prototype;

// `RegExp.prototype.dotAll` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.dotall
if (DESCRIPTORS && UNSUPPORTED_DOT_ALL) {
  defineProperty(RegExpPrototype, 'dotAll', {
    configurable: true,
    get: function () {
      if (this === RegExpPrototype) return undefined;
      // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.
      if (this instanceof RegExp) {
        return !!getInternalState(this).dotAll;
      }
      throw TypeError('Incompatible receiver, RegExp required');
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var exec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.flags.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.flags.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var objectDefinePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var FORCED = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  return Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call({ dotAll: true, sticky: true }) !== 'sy';
});

// `RegExp.prototype.flags` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
if (FORCED) objectDefinePropertyModule.f(RegExp.prototype, 'flags', {
  configurable: true,
  get: regExpFlags
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.sticky.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.sticky.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var UNSUPPORTED_Y = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js").UNSUPPORTED_Y;
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var getInternalState = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").get;
var RegExpPrototype = RegExp.prototype;

// `RegExp.prototype.sticky` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky
if (DESCRIPTORS && UNSUPPORTED_Y) {
  defineProperty(RegExpPrototype, 'sticky', {
    configurable: true,
    get: function () {
      if (this === RegExpPrototype) return undefined;
      // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.
      if (this instanceof RegExp) {
        return !!getInternalState(this).sticky;
      }
      throw TypeError('Incompatible receiver, RegExp required');
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.test.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.test.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(/*! ../modules/es.regexp.exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js");
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var DELEGATES_TO_EXEC = function () {
  var execCalled = false;
  var re = /[ac]/;
  re.exec = function () {
    execCalled = true;
    return /./.exec.apply(this, arguments);
  };
  return re.test('abc') === true && execCalled;
}();

var nativeTest = /./.test;

// `RegExp.prototype.test` method
// https://tc39.es/ecma262/#sec-regexp.prototype.test
$({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {
  test: function (str) {
    if (typeof this.exec !== 'function') {
      return nativeTest.call(this, str);
    }
    var result = this.exec(str);
    if (result !== null && !isObject(result)) {
      throw new Error('RegExp exec method returned something other than an Object or null');
    }
    return !!result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.to-string.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.to-string.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var flags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var nativeToString = RegExpPrototype[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = $toString(R.source);
    var rf = R.flags;
    var f = $toString(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.set.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.set.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js");

// `Set` constructor
// https://tc39.es/ecma262/#sec-set-objects
module.exports = collection('Set', function (init) {
  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.anchor.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.anchor.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.anchor` method
// https://tc39.es/ecma262/#sec-string.prototype.anchor
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('anchor') }, {
  anchor: function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.at-alternative.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.at-alternative.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var FORCED = fails(function () {
  return '𠮷'.at(0) !== '\uD842';
});

// `String.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method
$({ target: 'String', proto: true, forced: FORCED }, {
  at: function at(index) {
    var S = toString(requireObjectCoercible(this));
    var len = toLength(S.length);
    var relativeIndex = toInteger(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return (k < 0 || k >= len) ? undefined : S.charAt(k);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.big.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.big.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.big` method
// https://tc39.es/ecma262/#sec-string.prototype.big
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('big') }, {
  big: function big() {
    return createHTML(this, 'big', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.blink.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.blink.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.blink` method
// https://tc39.es/ecma262/#sec-string.prototype.blink
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('blink') }, {
  blink: function blink() {
    return createHTML(this, 'blink', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.bold.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.bold.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.bold` method
// https://tc39.es/ecma262/#sec-string.prototype.bold
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('bold') }, {
  bold: function bold() {
    return createHTML(this, 'b', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.code-point-at.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.code-point-at.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var codeAt = __webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").codeAt;

// `String.prototype.codePointAt` method
// https://tc39.es/ecma262/#sec-string.prototype.codepointat
$({ target: 'String', proto: true }, {
  codePointAt: function codePointAt(pos) {
    return codeAt(this, pos);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.ends-with.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.ends-with.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

// eslint-disable-next-line es/no-string-prototype-endswith -- safe
var $endsWith = ''.endsWith;
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith
$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = toString(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fixed.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fixed.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.fixed` method
// https://tc39.es/ecma262/#sec-string.prototype.fixed
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fixed') }, {
  fixed: function fixed() {
    return createHTML(this, 'tt', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontcolor.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontcolor.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.fontcolor` method
// https://tc39.es/ecma262/#sec-string.prototype.fontcolor
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontcolor') }, {
  fontcolor: function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontsize.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontsize.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.fontsize` method
// https://tc39.es/ecma262/#sec-string.prototype.fontsize
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontsize') }, {
  fontsize: function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.from-code-point.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.from-code-point.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");

var fromCharCode = String.fromCharCode;
// eslint-disable-next-line es/no-string-fromcodepoint -- required for testing
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
var INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1;

// `String.fromCodePoint` method
// https://tc39.es/ecma262/#sec-string.fromcodepoint
$({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  fromCodePoint: function fromCodePoint(x) {
    var elements = [];
    var length = arguments.length;
    var i = 0;
    var code;
    while (length > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');
      elements.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00)
      );
    } return elements.join('');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.includes.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.includes.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js");

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~toString(requireObjectCoercible(this))
      .indexOf(toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.italics.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.italics.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.italics` method
// https://tc39.es/ecma262/#sec-string.prototype.italics
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('italics') }, {
  italics: function italics() {
    return createHTML(this, 'i', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").charAt;
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: toString(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.link.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.link.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.link` method
// https://tc39.es/ecma262/#sec-string.prototype.link
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {
  link: function link(url) {
    return createHTML(this, 'a', 'href', url);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match-all.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match-all.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-string-prototype-matchall -- safe */
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var getRegExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var MATCH_ALL = wellKnownSymbol('matchAll');
var REGEXP_STRING = 'RegExp String';
var REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);
var RegExpPrototype = RegExp.prototype;
var regExpBuiltinExec = RegExpPrototype.exec;
var nativeMatchAll = ''.matchAll;

var WORKS_WITH_NON_GLOBAL_REGEX = !!nativeMatchAll && !fails(function () {
  'a'.matchAll(/./);
});

var regExpExec = function (R, S) {
  var exec = R.exec;
  var result;
  if (typeof exec == 'function') {
    result = exec.call(R, S);
    if (typeof result != 'object') throw TypeError('Incorrect exec result');
    return result;
  } return regExpBuiltinExec.call(R, S);
};

// eslint-disable-next-line max-len -- ignore
var $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, global, fullUnicode) {
  setInternalState(this, {
    type: REGEXP_STRING_ITERATOR,
    regexp: regexp,
    string: string,
    global: global,
    unicode: fullUnicode,
    done: false
  });
}, REGEXP_STRING, function next() {
  var state = getInternalState(this);
  if (state.done) return { value: undefined, done: true };
  var R = state.regexp;
  var S = state.string;
  var match = regExpExec(R, S);
  if (match === null) return { value: undefined, done: state.done = true };
  if (state.global) {
    if (toString(match[0]) === '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);
    return { value: match, done: false };
  }
  state.done = true;
  return { value: match, done: false };
});

var $matchAll = function (string) {
  var R = anObject(this);
  var S = toString(string);
  var C, flagsValue, flags, matcher, global, fullUnicode;
  C = speciesConstructor(R, RegExp);
  flagsValue = R.flags;
  if (flagsValue === undefined && R instanceof RegExp && !('flags' in RegExpPrototype)) {
    flagsValue = getRegExpFlags.call(R);
  }
  flags = flagsValue === undefined ? '' : toString(flagsValue);
  matcher = new C(C === RegExp ? R.source : R, flags);
  global = !!~flags.indexOf('g');
  fullUnicode = !!~flags.indexOf('u');
  matcher.lastIndex = toLength(R.lastIndex);
  return new $RegExpStringIterator(matcher, S, global, fullUnicode);
};

// `String.prototype.matchAll` method
// https://tc39.es/ecma262/#sec-string.prototype.matchall
$({ target: 'String', proto: true, forced: WORKS_WITH_NON_GLOBAL_REGEX }, {
  matchAll: function matchAll(regexp) {
    var O = requireObjectCoercible(this);
    var flags, S, matcher, rx;
    if (regexp != null) {
      if (isRegExp(regexp)) {
        flags = toString(requireObjectCoercible('flags' in RegExpPrototype
          ? regexp.flags
          : getRegExpFlags.call(regexp)
        ));
        if (!~flags.indexOf('g')) throw TypeError('`.matchAll` does not allow non-global regexes');
      }
      if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll.apply(O, arguments);
      matcher = regexp[MATCH_ALL];
      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;
      if (matcher != null) return aFunction(matcher).call(regexp, O);
    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll.apply(O, arguments);
    S = toString(O);
    rx = new RegExp(regexp, 'g');
    return IS_PURE ? $matchAll.call(rx, S) : rx[MATCH_ALL](S);
  }
});

IS_PURE || MATCH_ALL in RegExpPrototype || createNonEnumerableProperty(RegExpPrototype, MATCH_ALL, $matchAll);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");

// @@match logic
fixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.es/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = requireObjectCoercible(this);
      var matcher = regexp == undefined ? undefined : regexp[MATCH];
      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](toString(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
    function (string) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(nativeMatch, rx, S);

      if (res.done) return res.value;

      if (!rx.global) return regExpExec(rx, S);

      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = toString(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-end.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-end.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $padEnd = __webpack_require__(/*! ../internals/string-pad */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js").end;
var WEBKIT_BUG = __webpack_require__(/*! ../internals/string-pad-webkit-bug */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js");

// `String.prototype.padEnd` method
// https://tc39.es/ecma262/#sec-string.prototype.padend
$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-start.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-start.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $padStart = __webpack_require__(/*! ../internals/string-pad */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js").start;
var WEBKIT_BUG = __webpack_require__(/*! ../internals/string-pad-webkit-bug */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js");

// `String.prototype.padStart` method
// https://tc39.es/ecma262/#sec-string.prototype.padstart
$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.raw.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.raw.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

// `String.raw` method
// https://tc39.es/ecma262/#sec-string.raw
$({ target: 'String', stat: true }, {
  raw: function raw(template) {
    var rawTemplate = toIndexedObject(template.raw);
    var literalSegments = toLength(rawTemplate.length);
    var argumentsLength = arguments.length;
    var elements = [];
    var i = 0;
    while (literalSegments > i) {
      elements.push(toString(rawTemplate[i++]));
      if (i < argumentsLength) elements.push(toString(arguments[i]));
    } return elements.join('');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.repeat.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.repeat.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js");

// `String.prototype.repeat` method
// https://tc39.es/ecma262/#sec-string.prototype.repeat
$({ target: 'String', proto: true }, {
  repeat: repeat
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace-all.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace-all.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var getRegExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var getSubstitution = __webpack_require__(/*! ../internals/get-substitution */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var REPLACE = wellKnownSymbol('replace');
var RegExpPrototype = RegExp.prototype;
var max = Math.max;

var stringIndexOf = function (string, searchValue, fromIndex) {
  if (fromIndex > string.length) return -1;
  if (searchValue === '') return fromIndex;
  return string.indexOf(searchValue, fromIndex);
};

// `String.prototype.replaceAll` method
// https://tc39.es/ecma262/#sec-string.prototype.replaceall
$({ target: 'String', proto: true }, {
  replaceAll: function replaceAll(searchValue, replaceValue) {
    var O = requireObjectCoercible(this);
    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;
    var position = 0;
    var endOfLastMatch = 0;
    var result = '';
    if (searchValue != null) {
      IS_REG_EXP = isRegExp(searchValue);
      if (IS_REG_EXP) {
        flags = toString(requireObjectCoercible('flags' in RegExpPrototype
          ? searchValue.flags
          : getRegExpFlags.call(searchValue)
        ));
        if (!~flags.indexOf('g')) throw TypeError('`.replaceAll` does not allow non-global regexes');
      }
      replacer = searchValue[REPLACE];
      if (replacer !== undefined) {
        return replacer.call(searchValue, O, replaceValue);
      } else if (IS_PURE && IS_REG_EXP) {
        return toString(O).replace(searchValue, replaceValue);
      }
    }
    string = toString(O);
    searchString = toString(searchValue);
    functionalReplace = typeof replaceValue === 'function';
    if (!functionalReplace) replaceValue = toString(replaceValue);
    searchLength = searchString.length;
    advanceBy = max(1, searchLength);
    position = stringIndexOf(string, searchString, 0);
    while (position !== -1) {
      if (functionalReplace) {
        replacement = toString(replaceValue(searchString, position, string));
      } else {
        replacement = getSubstitution(searchString, string, position, [], undefined, replaceValue);
      }
      result += string.slice(endOfLastMatch, position) + replacement;
      endOfLastMatch = position + searchLength;
      position = stringIndexOf(string, searchString, position + advanceBy);
    }
    if (endOfLastMatch < string.length) {
      result += string.slice(endOfLastMatch);
    }
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var getSubstitution = __webpack_require__(/*! ../internals/get-substitution */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
      return replacer !== undefined
        ? replacer.call(searchValue, O, replaceValue)
        : nativeReplace.call(toString(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString(string);

      if (
        typeof replaceValue === 'string' &&
        replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1 &&
        replaceValue.indexOf('$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = toString(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        results.push(result);
        if (!global) break;

        var matchStr = toString(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = toString(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.search.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.search.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var sameValue = __webpack_require__(/*! ../internals/same-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");

// @@search logic
fixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.es/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = requireObjectCoercible(this);
      var searcher = regexp == undefined ? undefined : regexp[SEARCH];
      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](toString(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
    function (string) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(nativeSearch, rx, S);

      if (res.done) return res.value;

      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.small.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.small.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.small` method
// https://tc39.es/ecma262/#sec-string.prototype.small
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('small') }, {
  small: function small() {
    return createHTML(this, 'small', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.split.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.split.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var callRegExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
var arrayPush = [].push;
var min = Math.min;
var MAX_UINT32 = 0xFFFFFFFF;

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  // eslint-disable-next-line regexp/no-empty-group -- required for testing
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

// @@split logic
fixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] == 'c' ||
    // eslint-disable-next-line regexp/no-empty-group -- required for testing
    'test'.split(/(?:)/, -1).length != 4 ||
    'ab'.split(/(?:ab)*/).length != 2 ||
    '.'.split(/(.?)(.?)/).length != 4 ||
    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = toString(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return nativeSplit.call(string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output.length > lim ? output.slice(0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.es/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(toString(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (string, limit) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);

      if (res.done) return res.value;

      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (UNSUPPORTED_Y ? 'g' : 'y');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.starts-with.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.starts-with.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

// eslint-disable-next-line es/no-string-prototype-startswith -- safe
var $startsWith = ''.startsWith;
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith
$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.strike.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.strike.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.strike` method
// https://tc39.es/ecma262/#sec-string.prototype.strike
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('strike') }, {
  strike: function strike() {
    return createHTML(this, 'strike', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sub.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sub.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.sub` method
// https://tc39.es/ecma262/#sec-string.prototype.sub
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {
  sub: function sub() {
    return createHTML(this, 'sub', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.substr.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.substr.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var slice = ''.slice;
var max = Math.max;
var min = Math.min;

// `String.prototype.substr` method
// https://tc39.es/ecma262/#sec-string.prototype.substr
$({ target: 'String', proto: true }, {
  substr: function substr(start, length) {
    var that = toString(requireObjectCoercible(this));
    var size = that.length;
    var intStart = toInteger(start);
    var intLength, intEnd;
    if (intStart === Infinity) intStart = 0;
    if (intStart < 0) intStart = max(size + intStart, 0);
    intLength = length === undefined ? size : toInteger(length);
    if (intLength <= 0 || intLength === Infinity) return '';
    intEnd = min(intStart + intLength, size);
    return intStart >= intEnd ? '' : slice.call(that, intStart, intEnd);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sup.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sup.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.sup` method
// https://tc39.es/ecma262/#sec-string.prototype.sup
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sup') }, {
  sup: function sup() {
    return createHTML(this, 'sup', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-end.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-end.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $trimEnd = __webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").end;
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js");

var FORCED = forcedStringTrimMethod('trimEnd');

var trimEnd = FORCED ? function trimEnd() {
  return $trimEnd(this);
// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimEnd;

// `String.prototype.{ trimEnd, trimRight }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimend
// https://tc39.es/ecma262/#String.prototype.trimright
$({ target: 'String', proto: true, forced: FORCED }, {
  trimEnd: trimEnd,
  trimRight: trimEnd
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-start.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-start.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $trimStart = __webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").start;
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js");

var FORCED = forcedStringTrimMethod('trimStart');

var trimStart = FORCED ? function trimStart() {
  return $trimStart(this);
// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimStart;

// `String.prototype.{ trimStart, trimLeft }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimstart
// https://tc39.es/ecma262/#String.prototype.trimleft
$({ target: 'String', proto: true, forced: FORCED }, {
  trimStart: trimStart,
  trimLeft: trimStart
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $trim = __webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim;
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js");

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.async-iterator.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.async-iterator.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.asyncIterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.asynciterator
defineWellKnownSymbol('asyncIterator');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.description.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.description.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f;
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var nativeSymbol = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = nativeSymbol ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.has-instance.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.has-instance.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.hasInstance` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.hasinstance
defineWellKnownSymbol('hasInstance');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js":
/*!***********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js ***!
  \***********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable
defineWellKnownSymbol('isConcatSpreadable');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.iterator.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.iterator.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var nativeObjectCreate = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternal = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var $forEach = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPropertyKey(P);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPropertyKey(V);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPropertyKey(P);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = $toString(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match-all.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match-all.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.matchAll` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.matchall
defineWellKnownSymbol('matchAll');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.match` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.match
defineWellKnownSymbol('match');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.replace.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.replace.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.replace` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.replace
defineWellKnownSymbol('replace');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.search.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.search.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.search` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.search
defineWellKnownSymbol('search');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.species.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.species.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.species` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.species
defineWellKnownSymbol('species');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.split.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.split.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.split` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.split
defineWellKnownSymbol('split');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-primitive.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-primitive.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.toPrimitive` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.toprimitive
defineWellKnownSymbol('toPrimitive');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-string-tag.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-string-tag.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.toStringTag` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.tostringtag
defineWellKnownSymbol('toStringTag');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.unscopables.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.unscopables.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.unscopables` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.unscopables
defineWellKnownSymbol('unscopables');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.at.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.at.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method
exportTypedArrayMethod('at', function at(index) {
  var O = aTypedArray(this);
  var len = toLength(O.length);
  var relativeIndex = toInteger(index);
  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
  return (k < 0 || k >= len) ? undefined : O[k];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.copy-within.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.copy-within.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $copyWithin = __webpack_require__(/*! ../internals/array-copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
exportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {
  return $copyWithin.call(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.every.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.every.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $every = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").every;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.every` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
exportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {
  return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.fill.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.fill.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $fill = __webpack_require__(/*! ../internals/array-fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.fill` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
// eslint-disable-next-line no-unused-vars -- required for `.length`
exportTypedArrayMethod('fill', function fill(value /* , start, end */) {
  return $fill.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.filter.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.filter.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $filter = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").filter;
var fromSpeciesAndList = __webpack_require__(/*! ../internals/typed-array-from-species-and-list */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from-species-and-list.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.filter` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
exportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {
  var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  return fromSpeciesAndList(this, list);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find-index.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find-index.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $findIndex = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").findIndex;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
exportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {
  return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $find = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").find;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.find` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
exportTypedArrayMethod('find', function find(predicate /* , thisArg */) {
  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float32-array.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float32-array.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Float32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Float32', function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float64-array.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float64-array.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Float64Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Float64', function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.for-each.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.for-each.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $forEach = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.forEach` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
exportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {
  $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.from.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.from.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-array-constructors-require-wrappers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js");
var exportTypedArrayStaticMethod = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").exportTypedArrayStaticMethod;
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js");

// `%TypedArray%.from` method
// https://tc39.es/ecma262/#sec-%typedarray%.from
exportTypedArrayStaticMethod('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.includes.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.includes.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $includes = __webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").includes;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.includes` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
exportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {
  return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.index-of.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.index-of.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $indexOf = __webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").indexOf;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
exportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {
  return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int16-array.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int16-array.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Int16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Int16', function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int32-array.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int32-array.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Int32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Int32', function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int8-array.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int8-array.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Int8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Int8', function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.iterator.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.iterator.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var ArrayIterators = __webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var Uint8Array = global.Uint8Array;
var arrayValues = ArrayIterators.values;
var arrayKeys = ArrayIterators.keys;
var arrayEntries = ArrayIterators.entries;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var nativeTypedArrayIterator = Uint8Array && Uint8Array.prototype[ITERATOR];

var CORRECT_ITER_NAME = !!nativeTypedArrayIterator
  && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);

var typedArrayValues = function values() {
  return arrayValues.call(aTypedArray(this));
};

// `%TypedArray%.prototype.entries` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
exportTypedArrayMethod('entries', function entries() {
  return arrayEntries.call(aTypedArray(this));
});
// `%TypedArray%.prototype.keys` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
exportTypedArrayMethod('keys', function keys() {
  return arrayKeys.call(aTypedArray(this));
});
// `%TypedArray%.prototype.values` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
exportTypedArrayMethod('values', typedArrayValues, !CORRECT_ITER_NAME);
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
exportTypedArrayMethod(ITERATOR, typedArrayValues, !CORRECT_ITER_NAME);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.join.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.join.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $join = [].join;

// `%TypedArray%.prototype.join` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
// eslint-disable-next-line no-unused-vars -- required for `.length`
exportTypedArrayMethod('join', function join(separator) {
  return $join.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.last-index-of.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.last-index-of.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $lastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
// eslint-disable-next-line no-unused-vars -- required for `.length`
exportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
  return $lastIndexOf.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.map.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.map.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $map = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").map;
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.map` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
exportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {
  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
    return new (typedArraySpeciesConstructor(O))(length);
  });
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.of.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.of.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-array-constructors-require-wrappers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js");

var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var exportTypedArrayStaticMethod = ArrayBufferViewCore.exportTypedArrayStaticMethod;

// `%TypedArray%.of` method
// https://tc39.es/ecma262/#sec-%typedarray%.of
exportTypedArrayStaticMethod('of', function of(/* ...items */) {
  var index = 0;
  var length = arguments.length;
  var result = new (aTypedArrayConstructor(this))(length);
  while (length > index) result[index] = arguments[index++];
  return result;
}, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce-right.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce-right.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $reduceRight = __webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").right;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduceRicht` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
exportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
  return $reduceRight(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $reduce = __webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").left;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduce` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
exportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {
  return $reduce(aTypedArray(this), callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reverse.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reverse.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var floor = Math.floor;

// `%TypedArray%.prototype.reverse` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
exportTypedArrayMethod('reverse', function reverse() {
  var that = this;
  var length = aTypedArray(that).length;
  var middle = floor(length / 2);
  var index = 0;
  var value;
  while (index < middle) {
    value = that[index];
    that[index++] = that[--length];
    that[length] = value;
  } return that;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.set.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.set.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toOffset = __webpack_require__(/*! ../internals/to-offset */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

var FORCED = fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  new Int8Array(1).set({});
});

// `%TypedArray%.prototype.set` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
exportTypedArrayMethod('set', function set(arrayLike /* , offset */) {
  aTypedArray(this);
  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
  var length = this.length;
  var src = toObject(arrayLike);
  var len = toLength(src.length);
  var index = 0;
  if (len + offset > length) throw RangeError('Wrong length');
  while (index < len) this[offset + index] = src[index++];
}, FORCED);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.slice.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.slice.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $slice = [].slice;

var FORCED = fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  new Int8Array(1).slice();
});

// `%TypedArray%.prototype.slice` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
exportTypedArrayMethod('slice', function slice(start, end) {
  var list = $slice.call(aTypedArray(this), start, end);
  var C = typedArraySpeciesConstructor(this);
  var index = 0;
  var length = list.length;
  var result = new C(length);
  while (length > index) result[index] = list[index++];
  return result;
}, FORCED);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.some.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.some.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $some = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").some;

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.some` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
exportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {
  return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.sort.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.sort.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-function.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var internalSort = __webpack_require__(/*! ../internals/array-sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js");
var FF = __webpack_require__(/*! ../internals/engine-ff-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js");
var IE_OR_EDGE = __webpack_require__(/*! ../internals/engine-is-ie-or-edge */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js");
var V8 = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var Uint16Array = global.Uint16Array;
var nativeSort = Uint16Array && Uint16Array.prototype.sort;

// WebKit
var ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !fails(function () {
  var array = new Uint16Array(2);
  array.sort(null);
  array.sort({});
});

var STABLE_SORT = !!nativeSort && !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 74;
  if (FF) return FF < 67;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 602;

  var array = new Uint16Array(516);
  var expected = Array(516);
  var index, mod;

  for (index = 0; index < 516; index++) {
    mod = index % 4;
    array[index] = 515 - index;
    expected[index] = index - 2 * mod + 3;
  }

  array.sort(function (a, b) {
    return (a / 4 | 0) - (b / 4 | 0);
  });

  for (index = 0; index < 516; index++) {
    if (array[index] !== expected[index]) return true;
  }
});

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (y !== y) return -1;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (x !== x) return 1;
    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
    return x > y;
  };
};

// `%TypedArray%.prototype.sort` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
exportTypedArrayMethod('sort', function sort(comparefn) {
  var array = this;
  if (comparefn !== undefined) aFunction(comparefn);
  if (STABLE_SORT) return nativeSort.call(array, comparefn);

  aTypedArray(array);
  var arrayLength = toLength(array.length);
  var items = Array(arrayLength);
  var index;

  for (index = 0; index < arrayLength; index++) {
    items[index] = array[index];
  }

  items = internalSort(array, getSortCompare(comparefn));

  for (index = 0; index < arrayLength; index++) {
    array[index] = items[index];
  }

  return array;
}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.subarray.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.subarray.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.subarray` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
exportTypedArrayMethod('subarray', function subarray(begin, end) {
  var O = aTypedArray(this);
  var length = O.length;
  var beginIndex = toAbsoluteIndex(begin, length);
  var C = typedArraySpeciesConstructor(O);
  return new C(
    O.buffer,
    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,
    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)
  );
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-locale-string.js":
/*!************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-locale-string.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var Int8Array = global.Int8Array;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $toLocaleString = [].toLocaleString;
var $slice = [].slice;

// iOS Safari 6.x fails here
var TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {
  $toLocaleString.call(new Int8Array(1));
});

var FORCED = fails(function () {
  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();
}) || !fails(function () {
  Int8Array.prototype.toLocaleString.call([1, 2]);
});

// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
exportTypedArrayMethod('toLocaleString', function toLocaleString() {
  return $toLocaleString.apply(TO_LOCALE_STRING_BUG ? $slice.call(aTypedArray(this)) : aTypedArray(this), arguments);
}, FORCED);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-string.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-string.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var exportTypedArrayMethod = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").exportTypedArrayMethod;
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var Uint8Array = global.Uint8Array;
var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};
var arrayToString = [].toString;
var arrayJoin = [].join;

if (fails(function () { arrayToString.call({}); })) {
  arrayToString = function toString() {
    return arrayJoin.call(this);
  };
}

var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;

// `%TypedArray%.prototype.toString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
exportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint16-array.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint16-array.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint16', function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint32-array.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint32-array.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint32', function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-array.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-array.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint8', function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js ***!
  \***************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint8ClampedArray` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint8', function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.unescape.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.unescape.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var fromCharCode = String.fromCharCode;
var hex2 = /^[\da-f]{2}$/i;
var hex4 = /^[\da-f]{4}$/i;

// `unescape` method
// https://tc39.es/ecma262/#sec-unescape-string
$({ global: true }, {
  unescape: function unescape(string) {
    var str = toString(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, slice;
    while (index < length) {
      chr = str.charAt(index++);
      if (chr === '%') {
        if (str.charAt(index) === 'u') {
          slice = str.slice(index + 1, index + 5);
          if (hex4.test(slice)) {
            result += fromCharCode(parseInt(slice, 16));
            index += 5;
            continue;
          }
        } else {
          slice = str.slice(index, index + 2);
          if (hex2.test(slice)) {
            result += fromCharCode(parseInt(slice, 16));
            index += 2;
            continue;
          }
        }
      }
      result += chr;
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-map.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-map.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js");
var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionWeak = __webpack_require__(/*! ../internals/collection-weak */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var enforceIternalState = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").enforce;
var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js");

var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = Object.isExtensible;
var InternalWeakMap;

var wrapper = function (init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
var $WeakMap = module.exports = collection('WeakMap', wrapper, collectionWeak);

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.enable();
  var WeakMapPrototype = $WeakMap.prototype;
  var nativeDelete = WeakMapPrototype['delete'];
  var nativeHas = WeakMapPrototype.has;
  var nativeGet = WeakMapPrototype.get;
  var nativeSet = WeakMapPrototype.set;
  redefineAll(WeakMapPrototype, {
    'delete': function (key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete.call(this, key) || state.frozen['delete'](key);
      } return nativeDelete.call(this, key);
    },
    has: function has(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas.call(this, key) || state.frozen.has(key);
      } return nativeHas.call(this, key);
    },
    get: function get(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);
      } return nativeGet.call(this, key);
    },
    set: function set(key, value) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);
      } else nativeSet.call(this, key, value);
      return this;
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-set.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-set.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionWeak = __webpack_require__(/*! ../internals/collection-weak */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js");

// `WeakSet` constructor
// https://tc39.es/ecma262/#sec-weakset-constructor
collection('WeakSet', function (init) {
  return function WeakSet() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionWeak);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.for-each.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.for-each.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.immediate.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.immediate.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var task = __webpack_require__(/*! ../internals/task */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js");

var FORCED = !global.setImmediate || !global.clearImmediate;

// http://w3c.github.io/setImmediate/
$({ global: true, bind: true, enumerable: true, forced: FORCED }, {
  // `setImmediate` method
  // http://w3c.github.io/setImmediate/#si-setImmediate
  setImmediate: task.set,
  // `clearImmediate` method
  // http://w3c.github.io/setImmediate/#si-clearImmediate
  clearImmediate: task.clear
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.queue-microtask.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.queue-microtask.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var microtask = __webpack_require__(/*! ../internals/microtask */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var process = global.process;

// `queueMicrotask` method
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask
$({ global: true, enumerable: true, noTargetGet: true }, {
  queueMicrotask: function queueMicrotask(fn) {
    var domain = IS_NODE && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.timers.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.timers.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check

var wrap = function (scheduler) {
  return function (handler, timeout /* , ...arguments */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : undefined;
    return scheduler(boundArgs ? function () {
      // eslint-disable-next-line no-new-func -- spec requirement
      (typeof handler == 'function' ? handler : Function(handler)).apply(this, args);
    } : handler, timeout);
  };
};

// ie9- setTimeout & setInterval additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers
$({ global: true, bind: true, forced: MSIE }, {
  // `setTimeout` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
  setTimeout: wrap(global.setTimeout),
  // `setInterval` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
  setInterval: wrap(global.setInterval)
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/native-url */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var hasOwn = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var nativeFetch = getBuiltIn('fetch');
var NativeRequest = getBuiltIn('Request');
var RequestPrototype = NativeRequest && NativeRequest.prototype;
var Headers = getBuiltIn('Headers');
var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState = InternalStateModule.set;
var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);

var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function (bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function (sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function (it) {
  var result = it.replace(plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = result.replace(percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};

var find = /[!'()~]|%20/g;

var replace = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function (match) {
  return replace[match];
};

var serialize = function (it) {
  return encodeURIComponent(it).replace(find, replacer);
};

var parseSearchParams = function (result, query) {
  if (query) {
    var attributes = query.split('&');
    var index = 0;
    var attribute, entry;
    while (index < attributes.length) {
      attribute = attributes[index++];
      if (attribute.length) {
        entry = attribute.split('=');
        result.push({
          key: deserialize(entry.shift()),
          value: deserialize(entry.join('='))
        });
      }
    }
  }
};

var updateSearchParams = function (query) {
  this.entries.length = 0;
  parseSearchParams(this.entries, query);
};

var validateArgumentsLength = function (passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
};

var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
});

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  var that = this;
  var entries = [];
  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;

  setInternalState(that, {
    type: URL_SEARCH_PARAMS,
    entries: entries,
    updateURL: function () { /* empty */ },
    updateSearchParams: updateSearchParams
  });

  if (init !== undefined) {
    if (isObject(init)) {
      iteratorMethod = getIteratorMethod(init);
      if (typeof iteratorMethod === 'function') {
        iterator = getIterator(init, iteratorMethod);
        next = iterator.next;
        while (!(step = next.call(iterator)).done) {
          entryIterator = getIterator(anObject(step.value));
          entryNext = entryIterator.next;
          if (
            (first = entryNext.call(entryIterator)).done ||
            (second = entryNext.call(entryIterator)).done ||
            !entryNext.call(entryIterator).done
          ) throw TypeError('Expected sequence with length 2');
          entries.push({ key: $toString(first.value), value: $toString(second.value) });
        }
      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: $toString(init[key]) });
    } else {
      parseSearchParams(
        entries,
        typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : $toString(init)
      );
    }
  }
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

redefineAll(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    state.entries.push({ key: $toString(name), value: $toString(value) });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = $toString(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) entries.splice(index, 1);
      else index++;
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) result.push(entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = $toString(name);
    var val = $toString(value);
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) entries.splice(index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) entries.push({ key: key, value: val });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    var entries = state.entries;
    // Array#sort is not stable in some engines
    var slice = entries.slice();
    var entry, entriesIndex, sliceIndex;
    entries.length = 0;
    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {
      entry = slice[sliceIndex];
      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {
        if (entries[entriesIndex].key > entry.key) {
          entries.splice(entriesIndex, 0, entry);
          break;
        }
      }
      if (entriesIndex === sliceIndex) entries.push(entry);
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
redefine(URLSearchParamsPrototype, 'toString', function toString() {
  var entries = getInternalParamsState(this).entries;
  var result = [];
  var index = 0;
  var entry;
  while (index < entries.length) {
    entry = entries[index++];
    result.push(serialize(entry.key) + '=' + serialize(entry.value));
  } return result.join('&');
}, { enumerable: true });

setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

$({ global: true, forced: !USE_NATIVE_URL }, {
  URLSearchParams: URLSearchParamsConstructor
});

// Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`
if (!USE_NATIVE_URL && typeof Headers == 'function') {
  var wrapRequestOptions = function (init) {
    if (isObject(init)) {
      var body = init.body;
      var headers;
      if (classof(body) === URL_SEARCH_PARAMS) {
        headers = init.headers ? new Headers(init.headers) : new Headers();
        if (!headers.has('content-type')) {
          headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
        return create(init, {
          body: createPropertyDescriptor(0, String(body)),
          headers: createPropertyDescriptor(0, headers)
        });
      }
    } return init;
  };

  if (typeof nativeFetch == 'function') {
    $({ global: true, enumerable: true, forced: true }, {
      fetch: function fetch(input /* , init */) {
        return nativeFetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
      }
    });
  }

  if (typeof NativeRequest == 'function') {
    var RequestConstructor = function Request(input /* , init */) {
      anInstance(this, RequestConstructor, 'Request');
      return new NativeRequest(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
    };

    RequestPrototype.constructor = RequestConstructor;
    RequestConstructor.prototype = RequestPrototype;

    $({ global: true, forced: true }, {
      Request: RequestConstructor
    });
  }
}

module.exports = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.js":
/*!************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.string.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/native-url */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var defineProperties = __webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js");
var arrayFrom = __webpack_require__(/*! ../internals/array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js");
var codeAt = __webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").codeAt;
var toASCII = __webpack_require__(/*! ../internals/string-punycode-to-ascii */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-punycode-to-ascii.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var URLSearchParamsModule = __webpack_require__(/*! ../modules/web.url-search-params */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var NativeURL = global.URL;
var URLSearchParams = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;
var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var floor = Math.floor;
var pow = Math.pow;

var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';

var ALPHA = /[A-Za-z]/;
// eslint-disable-next-line regexp/no-obscure-range -- safe
var ALPHANUMERIC = /[\d+-.A-Za-z]/;
var DIGIT = /\d/;
var HEX_START = /^0x/i;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\dA-Fa-f]+$/;
/* eslint-disable no-control-regex -- safe */
var FORBIDDEN_HOST_CODE_POINT = /[\0\t\n\r #%/:<>?@[\\\]^|]/;
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\0\t\n\r #/:<>?@[\\\]^|]/;
var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u0020]+|[\u0000-\u0020]+$/g;
var TAB_AND_NEW_LINE = /[\t\n\r]/g;
/* eslint-enable no-control-regex -- safe */
var EOF;

var parseHost = function (url, input) {
  var result, codePoints, index;
  if (input.charAt(0) == '[') {
    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;
    result = parseIPv6(input.slice(1, -1));
    if (!result) return INVALID_HOST;
    url.host = result;
  // opaque host
  } else if (!isSpecial(url)) {
    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;
    result = '';
    codePoints = arrayFrom(input);
    for (index = 0; index < codePoints.length; index++) {
      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
    }
    url.host = result;
  } else {
    input = toASCII(input);
    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;
    result = parseIPv4(input);
    if (result === null) return INVALID_HOST;
    url.host = result;
  }
};

var parseIPv4 = function (input) {
  var parts = input.split('.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] == '') {
    parts.pop();
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;
    if (part.length > 1 && part.charAt(0) == '0') {
      radix = HEX_START.test(part) ? 16 : 8;
      part = part.slice(radix == 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;
      number = parseInt(part, radix);
    }
    numbers.push(number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = numbers.pop();
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// eslint-disable-next-line max-statements -- TODO
var parseIPv6 = function (input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var chr = function () {
    return input.charAt(pointer);
  };

  if (chr() == ':') {
    if (input.charAt(1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (chr()) {
    if (pieceIndex == 8) return;
    if (chr() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && HEX.test(chr())) {
      value = value * 16 + parseInt(chr(), 16);
      pointer++;
      length++;
    }
    if (chr() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (chr()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (chr() == '.' && numbersSeen < 4) pointer++;
          else return;
        }
        if (!DIGIT.test(chr())) return;
        while (DIGIT.test(chr())) {
          number = parseInt(chr(), 10);
          if (ipv4Piece === null) ipv4Piece = number;
          else if (ipv4Piece == 0) return;
          else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }
      if (numbersSeen != 4) return;
      break;
    } else if (chr() == ':') {
      pointer++;
      if (!chr()) return;
    } else if (chr()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;
  return address;
};

var findLongestZeroSequence = function (ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

var serializeHost = function (host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      result.unshift(host % 256);
      host = floor(host / 256);
    } return result.join('.');
  // ipv6
  } else if (typeof host == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += host[index].toString(16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  } return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
  ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
});
var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
  '#': 1, '?': 1, '{': 1, '}': 1
});
var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
});

var percentEncode = function (chr, set) {
  var code = codeAt(chr, 0);
  return code > 0x20 && code < 0x7F && !has(set, chr) ? chr : encodeURIComponent(chr);
};

var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

var isSpecial = function (url) {
  return has(specialSchemes, url.scheme);
};

var includesCredentials = function (url) {
  return url.username != '' || url.password != '';
};

var cannotHaveUsernamePasswordPort = function (url) {
  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';
};

var isWindowsDriveLetter = function (string, normalized) {
  var second;
  return string.length == 2 && ALPHA.test(string.charAt(0))
    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));
};

var startsWithWindowsDriveLetter = function (string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (
    string.length == 2 ||
    ((third = string.charAt(2)) === '/' || third === '\\' || third === '?' || third === '#')
  );
};

var shortenURLsPath = function (url) {
  var path = url.path;
  var pathSize = path.length;
  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
    path.pop();
  }
};

var isSingleDot = function (segment) {
  return segment === '.' || segment.toLowerCase() === '%2e';
};

var isDoubleDot = function (segment) {
  segment = segment.toLowerCase();
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

// eslint-disable-next-line max-statements -- TODO
var parseURL = function (url, input, stateOverride, base) {
  var state = stateOverride || SCHEME_START;
  var pointer = 0;
  var buffer = '';
  var seenAt = false;
  var seenBracket = false;
  var seenPasswordToken = false;
  var codePoints, chr, bufferCodePoints, failure;

  if (!stateOverride) {
    url.scheme = '';
    url.username = '';
    url.password = '';
    url.host = null;
    url.port = null;
    url.path = [];
    url.query = null;
    url.fragment = null;
    url.cannotBeABaseURL = false;
    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
  }

  input = input.replace(TAB_AND_NEW_LINE, '');

  codePoints = arrayFrom(input);

  while (pointer <= codePoints.length) {
    chr = codePoints[pointer];
    switch (state) {
      case SCHEME_START:
        if (chr && ALPHA.test(chr)) {
          buffer += chr.toLowerCase();
          state = SCHEME;
        } else if (!stateOverride) {
          state = NO_SCHEME;
          continue;
        } else return INVALID_SCHEME;
        break;

      case SCHEME:
        if (chr && (ALPHANUMERIC.test(chr) || chr == '+' || chr == '-' || chr == '.')) {
          buffer += chr.toLowerCase();
        } else if (chr == ':') {
          if (stateOverride && (
            (isSpecial(url) != has(specialSchemes, buffer)) ||
            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||
            (url.scheme == 'file' && !url.host)
          )) return;
          url.scheme = buffer;
          if (stateOverride) {
            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;
            return;
          }
          buffer = '';
          if (url.scheme == 'file') {
            state = FILE;
          } else if (isSpecial(url) && base && base.scheme == url.scheme) {
            state = SPECIAL_RELATIVE_OR_AUTHORITY;
          } else if (isSpecial(url)) {
            state = SPECIAL_AUTHORITY_SLASHES;
          } else if (codePoints[pointer + 1] == '/') {
            state = PATH_OR_AUTHORITY;
            pointer++;
          } else {
            url.cannotBeABaseURL = true;
            url.path.push('');
            state = CANNOT_BE_A_BASE_URL_PATH;
          }
        } else if (!stateOverride) {
          buffer = '';
          state = NO_SCHEME;
          pointer = 0;
          continue;
        } else return INVALID_SCHEME;
        break;

      case NO_SCHEME:
        if (!base || (base.cannotBeABaseURL && chr != '#')) return INVALID_SCHEME;
        if (base.cannotBeABaseURL && chr == '#') {
          url.scheme = base.scheme;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          url.cannotBeABaseURL = true;
          state = FRAGMENT;
          break;
        }
        state = base.scheme == 'file' ? FILE : RELATIVE;
        continue;

      case SPECIAL_RELATIVE_OR_AUTHORITY:
        if (chr == '/' && codePoints[pointer + 1] == '/') {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          pointer++;
        } else {
          state = RELATIVE;
          continue;
        } break;

      case PATH_OR_AUTHORITY:
        if (chr == '/') {
          state = AUTHORITY;
          break;
        } else {
          state = PATH;
          continue;
        }

      case RELATIVE:
        url.scheme = base.scheme;
        if (chr == EOF) {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
        } else if (chr == '/' || (chr == '\\' && isSpecial(url))) {
          state = RELATIVE_SLASH;
        } else if (chr == '?') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = '';
          state = QUERY;
        } else if (chr == '#') {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.query = base.query;
          url.fragment = '';
          state = FRAGMENT;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          url.path = base.path.slice();
          url.path.pop();
          state = PATH;
          continue;
        } break;

      case RELATIVE_SLASH:
        if (isSpecial(url) && (chr == '/' || chr == '\\')) {
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        } else if (chr == '/') {
          state = AUTHORITY;
        } else {
          url.username = base.username;
          url.password = base.password;
          url.host = base.host;
          url.port = base.port;
          state = PATH;
          continue;
        } break;

      case SPECIAL_AUTHORITY_SLASHES:
        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
        if (chr != '/' || buffer.charAt(pointer + 1) != '/') continue;
        pointer++;
        break;

      case SPECIAL_AUTHORITY_IGNORE_SLASHES:
        if (chr != '/' && chr != '\\') {
          state = AUTHORITY;
          continue;
        } break;

      case AUTHORITY:
        if (chr == '@') {
          if (seenAt) buffer = '%40' + buffer;
          seenAt = true;
          bufferCodePoints = arrayFrom(buffer);
          for (var i = 0; i < bufferCodePoints.length; i++) {
            var codePoint = bufferCodePoints[i];
            if (codePoint == ':' && !seenPasswordToken) {
              seenPasswordToken = true;
              continue;
            }
            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
            if (seenPasswordToken) url.password += encodedCodePoints;
            else url.username += encodedCodePoints;
          }
          buffer = '';
        } else if (
          chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
          (chr == '\\' && isSpecial(url))
        ) {
          if (seenAt && buffer == '') return INVALID_AUTHORITY;
          pointer -= arrayFrom(buffer).length + 1;
          buffer = '';
          state = HOST;
        } else buffer += chr;
        break;

      case HOST:
      case HOSTNAME:
        if (stateOverride && url.scheme == 'file') {
          state = FILE_HOST;
          continue;
        } else if (chr == ':' && !seenBracket) {
          if (buffer == '') return INVALID_HOST;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PORT;
          if (stateOverride == HOSTNAME) return;
        } else if (
          chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
          (chr == '\\' && isSpecial(url))
        ) {
          if (isSpecial(url) && buffer == '') return INVALID_HOST;
          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;
          failure = parseHost(url, buffer);
          if (failure) return failure;
          buffer = '';
          state = PATH_START;
          if (stateOverride) return;
          continue;
        } else {
          if (chr == '[') seenBracket = true;
          else if (chr == ']') seenBracket = false;
          buffer += chr;
        } break;

      case PORT:
        if (DIGIT.test(chr)) {
          buffer += chr;
        } else if (
          chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
          (chr == '\\' && isSpecial(url)) ||
          stateOverride
        ) {
          if (buffer != '') {
            var port = parseInt(buffer, 10);
            if (port > 0xFFFF) return INVALID_PORT;
            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;
            buffer = '';
          }
          if (stateOverride) return;
          state = PATH_START;
          continue;
        } else return INVALID_PORT;
        break;

      case FILE:
        url.scheme = 'file';
        if (chr == '/' || chr == '\\') state = FILE_SLASH;
        else if (base && base.scheme == 'file') {
          if (chr == EOF) {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
          } else if (chr == '?') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.host = base.host;
            url.path = base.path.slice();
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
              url.host = base.host;
              url.path = base.path.slice();
              shortenURLsPath(url);
            }
            state = PATH;
            continue;
          }
        } else {
          state = PATH;
          continue;
        } break;

      case FILE_SLASH:
        if (chr == '/' || chr == '\\') {
          state = FILE_HOST;
          break;
        }
        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {
          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);
          else url.host = base.host;
        }
        state = PATH;
        continue;

      case FILE_HOST:
        if (chr == EOF || chr == '/' || chr == '\\' || chr == '?' || chr == '#') {
          if (!stateOverride && isWindowsDriveLetter(buffer)) {
            state = PATH;
          } else if (buffer == '') {
            url.host = '';
            if (stateOverride) return;
            state = PATH_START;
          } else {
            failure = parseHost(url, buffer);
            if (failure) return failure;
            if (url.host == 'localhost') url.host = '';
            if (stateOverride) return;
            buffer = '';
            state = PATH_START;
          } continue;
        } else buffer += chr;
        break;

      case PATH_START:
        if (isSpecial(url)) {
          state = PATH;
          if (chr != '/' && chr != '\\') continue;
        } else if (!stateOverride && chr == '?') {
          url.query = '';
          state = QUERY;
        } else if (!stateOverride && chr == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (chr != EOF) {
          state = PATH;
          if (chr != '/') continue;
        } break;

      case PATH:
        if (
          chr == EOF || chr == '/' ||
          (chr == '\\' && isSpecial(url)) ||
          (!stateOverride && (chr == '?' || chr == '#'))
        ) {
          if (isDoubleDot(buffer)) {
            shortenURLsPath(url);
            if (chr != '/' && !(chr == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else if (isSingleDot(buffer)) {
            if (chr != '/' && !(chr == '\\' && isSpecial(url))) {
              url.path.push('');
            }
          } else {
            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
              if (url.host) url.host = '';
              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter
            }
            url.path.push(buffer);
          }
          buffer = '';
          if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {
            while (url.path.length > 1 && url.path[0] === '') {
              url.path.shift();
            }
          }
          if (chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          }
        } else {
          buffer += percentEncode(chr, pathPercentEncodeSet);
        } break;

      case CANNOT_BE_A_BASE_URL_PATH:
        if (chr == '?') {
          url.query = '';
          state = QUERY;
        } else if (chr == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (chr != EOF) {
          url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);
        } break;

      case QUERY:
        if (!stateOverride && chr == '#') {
          url.fragment = '';
          state = FRAGMENT;
        } else if (chr != EOF) {
          if (chr == "'" && isSpecial(url)) url.query += '%27';
          else if (chr == '#') url.query += '%23';
          else url.query += percentEncode(chr, C0ControlPercentEncodeSet);
        } break;

      case FRAGMENT:
        if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);
        break;
    }

    pointer++;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance(this, URLConstructor, 'URL');
  var base = arguments.length > 1 ? arguments[1] : undefined;
  var urlString = $toString(url);
  var state = setInternalState(that, { type: 'URL' });
  var baseState, failure;
  if (base !== undefined) {
    if (base instanceof URLConstructor) baseState = getInternalURLState(base);
    else {
      failure = parseURL(baseState = {}, $toString(base));
      if (failure) throw TypeError(failure);
    }
  }
  failure = parseURL(state, urlString, null, baseState);
  if (failure) throw TypeError(failure);
  var searchParams = state.searchParams = new URLSearchParams();
  var searchParamsState = getInternalSearchParamsState(searchParams);
  searchParamsState.updateSearchParams(state.query);
  searchParamsState.updateURL = function () {
    state.query = String(searchParams) || null;
  };
  if (!DESCRIPTORS) {
    that.href = serializeURL.call(that);
    that.origin = getOrigin.call(that);
    that.protocol = getProtocol.call(that);
    that.username = getUsername.call(that);
    that.password = getPassword.call(that);
    that.host = getHost.call(that);
    that.hostname = getHostname.call(that);
    that.port = getPort.call(that);
    that.pathname = getPathname.call(that);
    that.search = getSearch.call(that);
    that.searchParams = getSearchParams.call(that);
    that.hash = getHash.call(that);
  }
};

var URLPrototype = URLConstructor.prototype;

var serializeURL = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var username = url.username;
  var password = url.password;
  var host = url.host;
  var port = url.port;
  var path = url.path;
  var query = url.query;
  var fragment = url.fragment;
  var output = scheme + ':';
  if (host !== null) {
    output += '//';
    if (includesCredentials(url)) {
      output += username + (password ? ':' + password : '') + '@';
    }
    output += serializeHost(host);
    if (port !== null) output += ':' + port;
  } else if (scheme == 'file') output += '//';
  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
  if (query !== null) output += '?' + query;
  if (fragment !== null) output += '#' + fragment;
  return output;
};

var getOrigin = function () {
  var url = getInternalURLState(this);
  var scheme = url.scheme;
  var port = url.port;
  if (scheme == 'blob') try {
    return new URLConstructor(scheme.path[0]).origin;
  } catch (error) {
    return 'null';
  }
  if (scheme == 'file' || !isSpecial(url)) return 'null';
  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');
};

var getProtocol = function () {
  return getInternalURLState(this).scheme + ':';
};

var getUsername = function () {
  return getInternalURLState(this).username;
};

var getPassword = function () {
  return getInternalURLState(this).password;
};

var getHost = function () {
  var url = getInternalURLState(this);
  var host = url.host;
  var port = url.port;
  return host === null ? ''
    : port === null ? serializeHost(host)
    : serializeHost(host) + ':' + port;
};

var getHostname = function () {
  var host = getInternalURLState(this).host;
  return host === null ? '' : serializeHost(host);
};

var getPort = function () {
  var port = getInternalURLState(this).port;
  return port === null ? '' : String(port);
};

var getPathname = function () {
  var url = getInternalURLState(this);
  var path = url.path;
  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';
};

var getSearch = function () {
  var query = getInternalURLState(this).query;
  return query ? '?' + query : '';
};

var getSearchParams = function () {
  return getInternalURLState(this).searchParams;
};

var getHash = function () {
  var fragment = getInternalURLState(this).fragment;
  return fragment ? '#' + fragment : '';
};

var accessorDescriptor = function (getter, setter) {
  return { get: getter, set: setter, configurable: true, enumerable: true };
};

if (DESCRIPTORS) {
  defineProperties(URLPrototype, {
    // `URL.prototype.href` accessors pair
    // https://url.spec.whatwg.org/#dom-url-href
    href: accessorDescriptor(serializeURL, function (href) {
      var url = getInternalURLState(this);
      var urlString = $toString(href);
      var failure = parseURL(url, urlString);
      if (failure) throw TypeError(failure);
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.origin` getter
    // https://url.spec.whatwg.org/#dom-url-origin
    origin: accessorDescriptor(getOrigin),
    // `URL.prototype.protocol` accessors pair
    // https://url.spec.whatwg.org/#dom-url-protocol
    protocol: accessorDescriptor(getProtocol, function (protocol) {
      var url = getInternalURLState(this);
      parseURL(url, $toString(protocol) + ':', SCHEME_START);
    }),
    // `URL.prototype.username` accessors pair
    // https://url.spec.whatwg.org/#dom-url-username
    username: accessorDescriptor(getUsername, function (username) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom($toString(username));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.username = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.password` accessors pair
    // https://url.spec.whatwg.org/#dom-url-password
    password: accessorDescriptor(getPassword, function (password) {
      var url = getInternalURLState(this);
      var codePoints = arrayFrom($toString(password));
      if (cannotHaveUsernamePasswordPort(url)) return;
      url.password = '';
      for (var i = 0; i < codePoints.length; i++) {
        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
      }
    }),
    // `URL.prototype.host` accessors pair
    // https://url.spec.whatwg.org/#dom-url-host
    host: accessorDescriptor(getHost, function (host) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, $toString(host), HOST);
    }),
    // `URL.prototype.hostname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hostname
    hostname: accessorDescriptor(getHostname, function (hostname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      parseURL(url, $toString(hostname), HOSTNAME);
    }),
    // `URL.prototype.port` accessors pair
    // https://url.spec.whatwg.org/#dom-url-port
    port: accessorDescriptor(getPort, function (port) {
      var url = getInternalURLState(this);
      if (cannotHaveUsernamePasswordPort(url)) return;
      port = $toString(port);
      if (port == '') url.port = null;
      else parseURL(url, port, PORT);
    }),
    // `URL.prototype.pathname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-pathname
    pathname: accessorDescriptor(getPathname, function (pathname) {
      var url = getInternalURLState(this);
      if (url.cannotBeABaseURL) return;
      url.path = [];
      parseURL(url, $toString(pathname), PATH_START);
    }),
    // `URL.prototype.search` accessors pair
    // https://url.spec.whatwg.org/#dom-url-search
    search: accessorDescriptor(getSearch, function (search) {
      var url = getInternalURLState(this);
      search = $toString(search);
      if (search == '') {
        url.query = null;
      } else {
        if ('?' == search.charAt(0)) search = search.slice(1);
        url.query = '';
        parseURL(url, search, QUERY);
      }
      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);
    }),
    // `URL.prototype.searchParams` getter
    // https://url.spec.whatwg.org/#dom-url-searchparams
    searchParams: accessorDescriptor(getSearchParams),
    // `URL.prototype.hash` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hash
    hash: accessorDescriptor(getHash, function (hash) {
      var url = getInternalURLState(this);
      hash = $toString(hash);
      if (hash == '') {
        url.fragment = null;
        return;
      }
      if ('#' == hash.charAt(0)) hash = hash.slice(1);
      url.fragment = '';
      parseURL(url, hash, FRAGMENT);
    })
  });
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
redefine(URLPrototype, 'toJSON', function toJSON() {
  return serializeURL.call(this);
}, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
redefine(URLPrototype, 'toString', function toString() {
  return serializeURL.call(this);
}, { enumerable: true });

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {
    return nativeCreateObjectURL.apply(NativeURL, arguments);
  });
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {
    return nativeRevokeObjectURL.apply(NativeURL, arguments);
  });
}

setToStringTag(URLConstructor, 'URL');

$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
  URL: URLConstructor
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.to-json.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.to-json.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
$({ target: 'URL', proto: true, enumerable: true }, {
  toJSON: function toJSON() {
    return URL.prototype.toString.call(this);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/stable/index.js":
/*!*********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/stable/index.js ***!
  \*********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es.symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! ../modules/es.symbol.description */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! ../modules/es.symbol.async-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.async-iterator.js");
__webpack_require__(/*! ../modules/es.symbol.has-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.has-instance.js");
__webpack_require__(/*! ../modules/es.symbol.is-concat-spreadable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js");
__webpack_require__(/*! ../modules/es.symbol.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! ../modules/es.symbol.match */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match.js");
__webpack_require__(/*! ../modules/es.symbol.match-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match-all.js");
__webpack_require__(/*! ../modules/es.symbol.replace */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.replace.js");
__webpack_require__(/*! ../modules/es.symbol.search */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.search.js");
__webpack_require__(/*! ../modules/es.symbol.species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.species.js");
__webpack_require__(/*! ../modules/es.symbol.split */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.split.js");
__webpack_require__(/*! ../modules/es.symbol.to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-primitive.js");
__webpack_require__(/*! ../modules/es.symbol.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! ../modules/es.symbol.unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.unscopables.js");
__webpack_require__(/*! ../modules/es.aggregate-error */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.js");
__webpack_require__(/*! ../modules/es.array.at */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.at.js");
__webpack_require__(/*! ../modules/es.array.concat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.concat.js");
__webpack_require__(/*! ../modules/es.array.copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.copy-within.js");
__webpack_require__(/*! ../modules/es.array.every */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.every.js");
__webpack_require__(/*! ../modules/es.array.fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.fill.js");
__webpack_require__(/*! ../modules/es.array.filter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.filter.js");
__webpack_require__(/*! ../modules/es.array.find */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find.js");
__webpack_require__(/*! ../modules/es.array.find-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find-index.js");
__webpack_require__(/*! ../modules/es.array.flat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat.js");
__webpack_require__(/*! ../modules/es.array.flat-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat-map.js");
__webpack_require__(/*! ../modules/es.array.for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.for-each.js");
__webpack_require__(/*! ../modules/es.array.from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.from.js");
__webpack_require__(/*! ../modules/es.array.includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.includes.js");
__webpack_require__(/*! ../modules/es.array.index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.index-of.js");
__webpack_require__(/*! ../modules/es.array.is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.is-array.js");
__webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! ../modules/es.array.join */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.join.js");
__webpack_require__(/*! ../modules/es.array.last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.last-index-of.js");
__webpack_require__(/*! ../modules/es.array.map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.map.js");
__webpack_require__(/*! ../modules/es.array.of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.of.js");
__webpack_require__(/*! ../modules/es.array.reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce.js");
__webpack_require__(/*! ../modules/es.array.reduce-right */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce-right.js");
__webpack_require__(/*! ../modules/es.array.reverse */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reverse.js");
__webpack_require__(/*! ../modules/es.array.slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.slice.js");
__webpack_require__(/*! ../modules/es.array.some */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.some.js");
__webpack_require__(/*! ../modules/es.array.sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.sort.js");
__webpack_require__(/*! ../modules/es.array.species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.species.js");
__webpack_require__(/*! ../modules/es.array.splice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.splice.js");
__webpack_require__(/*! ../modules/es.array.unscopables.flat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat.js");
__webpack_require__(/*! ../modules/es.array.unscopables.flat-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat-map.js");
__webpack_require__(/*! ../modules/es.array-buffer.constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.constructor.js");
__webpack_require__(/*! ../modules/es.array-buffer.is-view */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.is-view.js");
__webpack_require__(/*! ../modules/es.array-buffer.slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.slice.js");
__webpack_require__(/*! ../modules/es.data-view */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.data-view.js");
__webpack_require__(/*! ../modules/es.date.get-year */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.get-year.js");
__webpack_require__(/*! ../modules/es.date.now */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.now.js");
__webpack_require__(/*! ../modules/es.date.set-year */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.set-year.js");
__webpack_require__(/*! ../modules/es.date.to-gmt-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-gmt-string.js");
__webpack_require__(/*! ../modules/es.date.to-iso-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-iso-string.js");
__webpack_require__(/*! ../modules/es.date.to-json */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-json.js");
__webpack_require__(/*! ../modules/es.date.to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-primitive.js");
__webpack_require__(/*! ../modules/es.date.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-string.js");
__webpack_require__(/*! ../modules/es.escape */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.escape.js");
__webpack_require__(/*! ../modules/es.function.bind */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! ../modules/es.function.has-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.has-instance.js");
__webpack_require__(/*! ../modules/es.function.name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.name.js");
__webpack_require__(/*! ../modules/es.global-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.global-this.js");
__webpack_require__(/*! ../modules/es.json.stringify */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.stringify.js");
__webpack_require__(/*! ../modules/es.json.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! ../modules/es.map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.map.js");
__webpack_require__(/*! ../modules/es.math.acosh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.acosh.js");
__webpack_require__(/*! ../modules/es.math.asinh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.asinh.js");
__webpack_require__(/*! ../modules/es.math.atanh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.atanh.js");
__webpack_require__(/*! ../modules/es.math.cbrt */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cbrt.js");
__webpack_require__(/*! ../modules/es.math.clz32 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.clz32.js");
__webpack_require__(/*! ../modules/es.math.cosh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cosh.js");
__webpack_require__(/*! ../modules/es.math.expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.expm1.js");
__webpack_require__(/*! ../modules/es.math.fround */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.fround.js");
__webpack_require__(/*! ../modules/es.math.hypot */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.hypot.js");
__webpack_require__(/*! ../modules/es.math.imul */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.imul.js");
__webpack_require__(/*! ../modules/es.math.log10 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log10.js");
__webpack_require__(/*! ../modules/es.math.log1p */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log1p.js");
__webpack_require__(/*! ../modules/es.math.log2 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log2.js");
__webpack_require__(/*! ../modules/es.math.sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sign.js");
__webpack_require__(/*! ../modules/es.math.sinh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sinh.js");
__webpack_require__(/*! ../modules/es.math.tanh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.tanh.js");
__webpack_require__(/*! ../modules/es.math.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! ../modules/es.math.trunc */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.trunc.js");
__webpack_require__(/*! ../modules/es.number.constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.constructor.js");
__webpack_require__(/*! ../modules/es.number.epsilon */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.epsilon.js");
__webpack_require__(/*! ../modules/es.number.is-finite */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-finite.js");
__webpack_require__(/*! ../modules/es.number.is-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-integer.js");
__webpack_require__(/*! ../modules/es.number.is-nan */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-nan.js");
__webpack_require__(/*! ../modules/es.number.is-safe-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-safe-integer.js");
__webpack_require__(/*! ../modules/es.number.max-safe-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.max-safe-integer.js");
__webpack_require__(/*! ../modules/es.number.min-safe-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.min-safe-integer.js");
__webpack_require__(/*! ../modules/es.number.parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-float.js");
__webpack_require__(/*! ../modules/es.number.parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-int.js");
__webpack_require__(/*! ../modules/es.number.to-fixed */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-fixed.js");
__webpack_require__(/*! ../modules/es.number.to-precision */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-precision.js");
__webpack_require__(/*! ../modules/es.object.assign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.assign.js");
__webpack_require__(/*! ../modules/es.object.create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! ../modules/es.object.define-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-getter.js");
__webpack_require__(/*! ../modules/es.object.define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-properties.js");
__webpack_require__(/*! ../modules/es.object.define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! ../modules/es.object.define-setter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-setter.js");
__webpack_require__(/*! ../modules/es.object.entries */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.entries.js");
__webpack_require__(/*! ../modules/es.object.freeze */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.freeze.js");
__webpack_require__(/*! ../modules/es.object.from-entries */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.from-entries.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-names.js");
__webpack_require__(/*! ../modules/es.object.get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-prototype-of.js");
__webpack_require__(/*! ../modules/es.object.has-own */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.has-own.js");
__webpack_require__(/*! ../modules/es.object.is */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is.js");
__webpack_require__(/*! ../modules/es.object.is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-extensible.js");
__webpack_require__(/*! ../modules/es.object.is-frozen */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-frozen.js");
__webpack_require__(/*! ../modules/es.object.is-sealed */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-sealed.js");
__webpack_require__(/*! ../modules/es.object.keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.keys.js");
__webpack_require__(/*! ../modules/es.object.lookup-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-getter.js");
__webpack_require__(/*! ../modules/es.object.lookup-setter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-setter.js");
__webpack_require__(/*! ../modules/es.object.prevent-extensions */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.prevent-extensions.js");
__webpack_require__(/*! ../modules/es.object.seal */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.seal.js");
__webpack_require__(/*! ../modules/es.object.set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.set-prototype-of.js");
__webpack_require__(/*! ../modules/es.object.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../modules/es.object.values */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.values.js");
__webpack_require__(/*! ../modules/es.parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-float.js");
__webpack_require__(/*! ../modules/es.parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-int.js");
__webpack_require__(/*! ../modules/es.promise */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.js");
__webpack_require__(/*! ../modules/es.promise.all-settled */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.all-settled.js");
__webpack_require__(/*! ../modules/es.promise.any */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.any.js");
__webpack_require__(/*! ../modules/es.promise.finally */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.finally.js");
__webpack_require__(/*! ../modules/es.reflect.apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.apply.js");
__webpack_require__(/*! ../modules/es.reflect.construct */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.construct.js");
__webpack_require__(/*! ../modules/es.reflect.define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.define-property.js");
__webpack_require__(/*! ../modules/es.reflect.delete-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.delete-property.js");
__webpack_require__(/*! ../modules/es.reflect.get */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get.js");
__webpack_require__(/*! ../modules/es.reflect.get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es.reflect.get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-prototype-of.js");
__webpack_require__(/*! ../modules/es.reflect.has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.has.js");
__webpack_require__(/*! ../modules/es.reflect.is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.is-extensible.js");
__webpack_require__(/*! ../modules/es.reflect.own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.own-keys.js");
__webpack_require__(/*! ../modules/es.reflect.prevent-extensions */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.prevent-extensions.js");
__webpack_require__(/*! ../modules/es.reflect.set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set.js");
__webpack_require__(/*! ../modules/es.reflect.set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set-prototype-of.js");
__webpack_require__(/*! ../modules/es.reflect.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.to-string-tag.js");
__webpack_require__(/*! ../modules/es.regexp.constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.constructor.js");
__webpack_require__(/*! ../modules/es.regexp.dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.dot-all.js");
__webpack_require__(/*! ../modules/es.regexp.exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js");
__webpack_require__(/*! ../modules/es.regexp.flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.flags.js");
__webpack_require__(/*! ../modules/es.regexp.sticky */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.sticky.js");
__webpack_require__(/*! ../modules/es.regexp.test */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.test.js");
__webpack_require__(/*! ../modules/es.regexp.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.to-string.js");
__webpack_require__(/*! ../modules/es.set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.set.js");
__webpack_require__(/*! ../modules/es.string.at-alternative */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.at-alternative.js");
__webpack_require__(/*! ../modules/es.string.code-point-at */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.code-point-at.js");
__webpack_require__(/*! ../modules/es.string.ends-with */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.ends-with.js");
__webpack_require__(/*! ../modules/es.string.from-code-point */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.from-code-point.js");
__webpack_require__(/*! ../modules/es.string.includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.includes.js");
__webpack_require__(/*! ../modules/es.string.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! ../modules/es.string.match */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match.js");
__webpack_require__(/*! ../modules/es.string.match-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match-all.js");
__webpack_require__(/*! ../modules/es.string.pad-end */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-end.js");
__webpack_require__(/*! ../modules/es.string.pad-start */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-start.js");
__webpack_require__(/*! ../modules/es.string.raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.raw.js");
__webpack_require__(/*! ../modules/es.string.repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.repeat.js");
__webpack_require__(/*! ../modules/es.string.replace */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace.js");
__webpack_require__(/*! ../modules/es.string.replace-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace-all.js");
__webpack_require__(/*! ../modules/es.string.search */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.search.js");
__webpack_require__(/*! ../modules/es.string.split */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.split.js");
__webpack_require__(/*! ../modules/es.string.starts-with */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.starts-with.js");
__webpack_require__(/*! ../modules/es.string.substr */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.substr.js");
__webpack_require__(/*! ../modules/es.string.trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim.js");
__webpack_require__(/*! ../modules/es.string.trim-end */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-end.js");
__webpack_require__(/*! ../modules/es.string.trim-start */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-start.js");
__webpack_require__(/*! ../modules/es.string.anchor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.anchor.js");
__webpack_require__(/*! ../modules/es.string.big */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.big.js");
__webpack_require__(/*! ../modules/es.string.blink */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.blink.js");
__webpack_require__(/*! ../modules/es.string.bold */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.bold.js");
__webpack_require__(/*! ../modules/es.string.fixed */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fixed.js");
__webpack_require__(/*! ../modules/es.string.fontcolor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontcolor.js");
__webpack_require__(/*! ../modules/es.string.fontsize */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontsize.js");
__webpack_require__(/*! ../modules/es.string.italics */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.italics.js");
__webpack_require__(/*! ../modules/es.string.link */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.link.js");
__webpack_require__(/*! ../modules/es.string.small */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.small.js");
__webpack_require__(/*! ../modules/es.string.strike */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.strike.js");
__webpack_require__(/*! ../modules/es.string.sub */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sub.js");
__webpack_require__(/*! ../modules/es.string.sup */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sup.js");
__webpack_require__(/*! ../modules/es.typed-array.float32-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float32-array.js");
__webpack_require__(/*! ../modules/es.typed-array.float64-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float64-array.js");
__webpack_require__(/*! ../modules/es.typed-array.int8-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int8-array.js");
__webpack_require__(/*! ../modules/es.typed-array.int16-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int16-array.js");
__webpack_require__(/*! ../modules/es.typed-array.int32-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int32-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint8-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint8-clamped-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint16-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint16-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint32-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint32-array.js");
__webpack_require__(/*! ../modules/es.typed-array.at */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.at.js");
__webpack_require__(/*! ../modules/es.typed-array.copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.copy-within.js");
__webpack_require__(/*! ../modules/es.typed-array.every */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.every.js");
__webpack_require__(/*! ../modules/es.typed-array.fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.fill.js");
__webpack_require__(/*! ../modules/es.typed-array.filter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.filter.js");
__webpack_require__(/*! ../modules/es.typed-array.find */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find.js");
__webpack_require__(/*! ../modules/es.typed-array.find-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find-index.js");
__webpack_require__(/*! ../modules/es.typed-array.for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.for-each.js");
__webpack_require__(/*! ../modules/es.typed-array.from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.from.js");
__webpack_require__(/*! ../modules/es.typed-array.includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.includes.js");
__webpack_require__(/*! ../modules/es.typed-array.index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.index-of.js");
__webpack_require__(/*! ../modules/es.typed-array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.iterator.js");
__webpack_require__(/*! ../modules/es.typed-array.join */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.join.js");
__webpack_require__(/*! ../modules/es.typed-array.last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.last-index-of.js");
__webpack_require__(/*! ../modules/es.typed-array.map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.map.js");
__webpack_require__(/*! ../modules/es.typed-array.of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.of.js");
__webpack_require__(/*! ../modules/es.typed-array.reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce.js");
__webpack_require__(/*! ../modules/es.typed-array.reduce-right */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce-right.js");
__webpack_require__(/*! ../modules/es.typed-array.reverse */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reverse.js");
__webpack_require__(/*! ../modules/es.typed-array.set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.set.js");
__webpack_require__(/*! ../modules/es.typed-array.slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.slice.js");
__webpack_require__(/*! ../modules/es.typed-array.some */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.some.js");
__webpack_require__(/*! ../modules/es.typed-array.sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.sort.js");
__webpack_require__(/*! ../modules/es.typed-array.subarray */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.subarray.js");
__webpack_require__(/*! ../modules/es.typed-array.to-locale-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-locale-string.js");
__webpack_require__(/*! ../modules/es.typed-array.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-string.js");
__webpack_require__(/*! ../modules/es.unescape */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.unescape.js");
__webpack_require__(/*! ../modules/es.weak-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-map.js");
__webpack_require__(/*! ../modules/es.weak-set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-set.js");
__webpack_require__(/*! ../modules/web.dom-collections.for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.for-each.js");
__webpack_require__(/*! ../modules/web.dom-collections.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.iterator.js");
__webpack_require__(/*! ../modules/web.immediate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.immediate.js");
__webpack_require__(/*! ../modules/web.queue-microtask */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.queue-microtask.js");
__webpack_require__(/*! ../modules/web.timers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.timers.js");
__webpack_require__(/*! ../modules/web.url */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.js");
__webpack_require__(/*! ../modules/web.url.to-json */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.to-json.js");
__webpack_require__(/*! ../modules/web.url-search-params */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js");

module.exports = __webpack_require__(/*! ../internals/path */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js");


/***/ }),

/***/ "./node_modules/jspsych/css/jspsych.css":
/*!**********************************************!*\
  !*** ./node_modules/jspsych/css/jspsych.css ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./styles/main.scss":
/*!**************************!*\
  !*** ./styles/main.scss ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/regenerator-runtime/runtime.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/regenerator-runtime/runtime.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : 0
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),

/***/ "./node_modules/jspsych/jspsych.js":
/*!*****************************************!*\
  !*** ./node_modules/jspsych/jspsych.js ***!
  \*****************************************/
/***/ (function() {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

window.jsPsych = function () {
  var core = {};

  core.version = function () {
    return "6.3.0";
  }; //
  // private variables
  //
  // options


  var opts = {}; // experiment timeline

  var timeline; // flow control

  var global_trial_index = 0;
  var current_trial = {};
  var current_trial_finished = false; // target DOM element

  var DOM_container;
  var DOM_target; // time that the experiment began

  var exp_start_time; // is the experiment paused?

  var paused = false;
  var waiting = false; // done loading?

  var loaded = false;
  var loadfail = false; // is the page retrieved directly via file:// protocol (true) or hosted on a server (false)?

  var file_protocol = false; // storing a single webaudio context to prevent problems with multiple inits
  // of jsPsych

  core.webaudio_context = null; // temporary patch for Safari

  if (typeof window !== 'undefined' && window.hasOwnProperty('webkitAudioContext') && !window.hasOwnProperty('AudioContext')) {
    window.AudioContext = webkitAudioContext;
  } // end patch


  core.webaudio_context = typeof window !== 'undefined' && typeof window.AudioContext !== 'undefined' ? new AudioContext() : null; // enumerated variables for special parameter types

  core.ALL_KEYS = 'allkeys';
  core.NO_KEYS = 'none'; //
  // public methods
  //

  core.init = function (options) {
    function init() {
      if (typeof options.timeline === 'undefined') {
        console.error('No timeline declared in jsPsych.init. Cannot start experiment.');
      }

      if (options.timeline.length == 0) {
        console.error('No trials have been added to the timeline (the timeline is an empty array). Cannot start experiment.');
      } // reset variables


      timeline = null;
      global_trial_index = 0;
      current_trial = {};
      current_trial_finished = false;
      paused = false;
      waiting = false;
      loaded = false;
      loadfail = false;
      file_protocol = false;
      jsPsych.data.reset();
      var defaults = {
        'display_element': undefined,
        'on_finish': function on_finish(data) {
          return undefined;
        },
        'on_trial_start': function on_trial_start(trial) {
          return undefined;
        },
        'on_trial_finish': function on_trial_finish() {
          return undefined;
        },
        'on_data_update': function on_data_update(data) {
          return undefined;
        },
        'on_interaction_data_update': function on_interaction_data_update(data) {
          return undefined;
        },
        'on_close': function on_close() {
          return undefined;
        },
        'use_webaudio': true,
        'exclusions': {},
        'show_progress_bar': false,
        'message_progress_bar': 'Completion Progress',
        'auto_update_progress_bar': true,
        'default_iti': 0,
        'minimum_valid_rt': 0,
        'experiment_width': null,
        'override_safe_mode': false,
        'case_sensitive_responses': false,
        'extensions': []
      }; // detect whether page is running in browser as a local file, and if so, disable web audio and video preloading to prevent CORS issues

      if (window.location.protocol == 'file:' && (options.override_safe_mode === false || typeof options.override_safe_mode == 'undefined')) {
        options.use_webaudio = false;
        file_protocol = true;
        console.warn("jsPsych detected that it is running via the file:// protocol and not on a web server. " + "To prevent issues with cross-origin requests, Web Audio and video preloading have been disabled. " + "If you would like to override this setting, you can set 'override_safe_mode' to 'true' in jsPsych.init. " + "For more information, see: https://www.jspsych.org/overview/running-experiments");
      } // override default options if user specifies an option


      opts = Object.assign({}, defaults, options); // set DOM element where jsPsych will render content
      // if undefined, then jsPsych will use the <body> tag and the entire page

      if (typeof opts.display_element == 'undefined') {
        // check if there is a body element on the page
        var body = document.querySelector('body');

        if (body === null) {
          document.documentElement.appendChild(document.createElement('body'));
        } // using the full page, so we need the HTML element to
        // have 100% height, and body to be full width and height with
        // no margin


        document.querySelector('html').style.height = '100%';
        document.querySelector('body').style.margin = '0px';
        document.querySelector('body').style.height = '100%';
        document.querySelector('body').style.width = '100%';
        opts.display_element = document.querySelector('body');
      } else {
        // make sure that the display element exists on the page
        var display;

        if (opts.display_element instanceof Element) {
          var display = opts.display_element;
        } else {
          var display = document.querySelector('#' + opts.display_element);
        }

        if (display === null) {
          console.error('The display_element specified in jsPsych.init() does not exist in the DOM.');
        } else {
          opts.display_element = display;
        }
      }

      opts.display_element.innerHTML = '<div class="jspsych-content-wrapper"><div id="jspsych-content"></div></div>';
      DOM_container = opts.display_element;
      DOM_target = document.querySelector('#jspsych-content'); // add tabIndex attribute to scope event listeners

      opts.display_element.tabIndex = 0; // add CSS class to DOM_target

      if (opts.display_element.className.indexOf('jspsych-display-element') == -1) {
        opts.display_element.className += ' jspsych-display-element';
      }

      DOM_target.className += 'jspsych-content'; // set experiment_width if not null

      if (opts.experiment_width !== null) {
        DOM_target.style.width = opts.experiment_width + "px";
      } // create experiment timeline


      timeline = new TimelineNode({
        timeline: opts.timeline
      }); // initialize audio context based on options and browser capabilities

      jsPsych.pluginAPI.initAudio(); // below code resets event listeners that may have lingered from
      // a previous incomplete experiment loaded in same DOM.

      jsPsych.pluginAPI.reset(opts.display_element); // create keyboard event listeners

      jsPsych.pluginAPI.createKeyboardEventListeners(opts.display_element); // create listeners for user browser interaction

      jsPsych.data.createInteractionListeners(); // add event for closing window

      window.addEventListener('beforeunload', opts.on_close); // check exclusions before continuing

      checkExclusions(opts.exclusions, function () {
        // success! user can continue...
        // start experiment
        loadExtensions();
      }, function () {// fail. incompatible user.
      });

      function loadExtensions() {
        // run the .initialize method of any extensions that are in use
        // these should return a Promise to indicate when loading is complete
        if (opts.extensions.length == 0) {
          startExperiment();
        } else {
          var loaded_extensions = 0;

          for (var i = 0; i < opts.extensions.length; i++) {
            var ext_params = opts.extensions[i].params;

            if (!ext_params) {
              ext_params = {};
            }

            jsPsych.extensions[opts.extensions[i].type].initialize(ext_params).then(function () {
              loaded_extensions++;

              if (loaded_extensions == opts.extensions.length) {
                startExperiment();
              }
            }).catch(function (error_message) {
              console.error(error_message);
            });
          }
        }
      }
    }

    ; // execute init() when the document is ready

    if (document.readyState === "complete") {
      init();
    } else {
      window.addEventListener("load", init);
    }
  };

  core.progress = function () {
    var percent_complete = typeof timeline == 'undefined' ? 0 : timeline.percentComplete();
    var obj = {
      "total_trials": typeof timeline == 'undefined' ? undefined : timeline.length(),
      "current_trial_global": global_trial_index,
      "percent_complete": percent_complete
    };
    return obj;
  };

  core.startTime = function () {
    return exp_start_time;
  };

  core.totalTime = function () {
    if (typeof exp_start_time == 'undefined') {
      return 0;
    }

    return new Date().getTime() - exp_start_time.getTime();
  };

  core.getDisplayElement = function () {
    return DOM_target;
  };

  core.getDisplayContainerElement = function () {
    return DOM_container;
  };

  core.finishTrial = function (data) {
    if (current_trial_finished) {
      return;
    }

    current_trial_finished = true; // remove any CSS classes that were added to the DOM via css_classes parameter

    if (typeof current_trial.css_classes !== 'undefined' && Array.isArray(current_trial.css_classes)) {
      var _DOM_target$classList;

      (_DOM_target$classList = DOM_target.classList).remove.apply(_DOM_target$classList, _toConsumableArray(current_trial.css_classes));
    } // write the data from the trial


    data = typeof data == 'undefined' ? {} : data;
    jsPsych.data.write(data); // get back the data with all of the defaults in

    var trial_data = jsPsych.data.get().filter({
      trial_index: global_trial_index
    }); // for trial-level callbacks, we just want to pass in a reference to the values
    // of the DataCollection, for easy access and editing.

    var trial_data_values = trial_data.values()[0];

    if (_typeof(current_trial.save_trial_parameters) == 'object') {
      var keys = Object.keys(current_trial.save_trial_parameters);

      for (var i = 0; i < keys.length; i++) {
        var key_val = current_trial.save_trial_parameters[keys[i]];

        if (key_val === true) {
          if (typeof current_trial[keys[i]] == 'undefined') {
            console.warn("Invalid parameter specified in save_trial_parameters. Trial has no property called \"".concat(keys[i], "\"."));
          } else if (typeof current_trial[keys[i]] == 'function') {
            trial_data_values[keys[i]] = current_trial[keys[i]].toString();
          } else {
            trial_data_values[keys[i]] = current_trial[keys[i]];
          }
        }

        if (key_val === false) {
          // we don't allow internal_node_id or trial_index to be deleted because it would break other things
          if (keys[i] !== 'internal_node_id' && keys[i] !== 'trial_index') {
            delete trial_data_values[keys[i]];
          }
        }
      }
    } // handle extension callbacks


    if (Array.isArray(current_trial.extensions)) {
      for (var i = 0; i < current_trial.extensions.length; i++) {
        var ext_data_values = jsPsych.extensions[current_trial.extensions[i].type].on_finish(current_trial.extensions[i].params);
        Object.assign(trial_data_values, ext_data_values);
      }
    } // about to execute lots of callbacks, so switch context.


    jsPsych.internal.call_immediate = true; // handle callback at plugin level

    if (typeof current_trial.on_finish === 'function') {
      current_trial.on_finish(trial_data_values);
    } // handle callback at whole-experiment level


    opts.on_trial_finish(trial_data_values); // after the above callbacks are complete, then the data should be finalized
    // for this trial. call the on_data_update handler, passing in the same
    // data object that just went through the trial's finish handlers.

    opts.on_data_update(trial_data_values); // done with callbacks

    jsPsych.internal.call_immediate = false; // wait for iti

    if (typeof current_trial.post_trial_gap === null || typeof current_trial.post_trial_gap === 'undefined') {
      if (opts.default_iti > 0) {
        setTimeout(nextTrial, opts.default_iti);
      } else {
        nextTrial();
      }
    } else {
      if (current_trial.post_trial_gap > 0) {
        setTimeout(nextTrial, current_trial.post_trial_gap);
      } else {
        nextTrial();
      }
    }
  };

  core.endExperiment = function (end_message) {
    timeline.end_message = end_message;
    timeline.end();
    jsPsych.pluginAPI.cancelAllKeyboardResponses();
    jsPsych.pluginAPI.clearAllTimeouts();
    core.finishTrial();
  };

  core.endCurrentTimeline = function () {
    timeline.endActiveNode();
  };

  core.currentTrial = function () {
    return current_trial;
  };

  core.initSettings = function () {
    return opts;
  };

  core.currentTimelineNodeID = function () {
    return timeline.activeID();
  };

  core.timelineVariable = function (varname, immediate) {
    if (typeof immediate == 'undefined') {
      immediate = false;
    }

    if (jsPsych.internal.call_immediate || immediate === true) {
      return timeline.timelineVariable(varname);
    } else {
      return function () {
        return timeline.timelineVariable(varname);
      };
    }
  };

  core.allTimelineVariables = function () {
    return timeline.allTimelineVariables();
  };

  core.addNodeToEndOfTimeline = function (new_timeline, preload_callback) {
    timeline.insert(new_timeline);
  };

  core.pauseExperiment = function () {
    paused = true;
  };

  core.resumeExperiment = function () {
    paused = false;

    if (waiting) {
      waiting = false;
      nextTrial();
    }
  };

  core.loadFail = function (message) {
    message = message || '<p>The experiment failed to load.</p>';
    loadfail = true;
    DOM_target.innerHTML = message;
  };

  core.getSafeModeStatus = function () {
    return file_protocol;
  };

  function TimelineNode(parameters, parent, relativeID) {
    // a unique ID for this node, relative to the parent
    var relative_id; // store the parent for this node

    var parent_node; // parameters for the trial if the node contains a trial

    var trial_parameters; // parameters for nodes that contain timelines

    var timeline_parameters; // stores trial information on a node that contains a timeline
    // used for adding new trials

    var node_trial_data; // track progress through the node

    var progress = {
      current_location: -1,
      // where on the timeline (which timelinenode)
      current_variable_set: 0,
      // which set of variables to use from timeline_variables
      current_repetition: 0,
      // how many times through the variable set on this run of the node
      current_iteration: 0,
      // how many times this node has been revisited
      done: false
    }; // reference to self

    var self = this; // recursively get the next trial to run.
    // if this node is a leaf (trial), then return the trial.
    // otherwise, recursively find the next trial in the child timeline.

    this.trial = function () {
      if (typeof timeline_parameters == 'undefined') {
        // returns a clone of the trial_parameters to
        // protect functions.
        return jsPsych.utils.deepCopy(trial_parameters);
      } else {
        if (progress.current_location >= timeline_parameters.timeline.length) {
          return null;
        } else {
          return timeline_parameters.timeline[progress.current_location].trial();
        }
      }
    };

    this.markCurrentTrialComplete = function () {
      if (typeof timeline_parameters == 'undefined') {
        progress.done = true;
      } else {
        timeline_parameters.timeline[progress.current_location].markCurrentTrialComplete();
      }
    };

    this.nextRepetiton = function () {
      this.setTimelineVariablesOrder();
      progress.current_location = -1;
      progress.current_variable_set = 0;
      progress.current_repetition++;

      for (var i = 0; i < timeline_parameters.timeline.length; i++) {
        timeline_parameters.timeline[i].reset();
      }
    }; // set the order for going through the timeline variables array


    this.setTimelineVariablesOrder = function () {
      // check to make sure this node has variables
      if (typeof timeline_parameters === 'undefined' || typeof timeline_parameters.timeline_variables === 'undefined') {
        return;
      }

      var order = [];

      for (var i = 0; i < timeline_parameters.timeline_variables.length; i++) {
        order.push(i);
      }

      if (typeof timeline_parameters.sample !== 'undefined') {
        if (timeline_parameters.sample.type == 'custom') {
          order = timeline_parameters.sample.fn(order);
        } else if (timeline_parameters.sample.type == 'with-replacement') {
          order = jsPsych.randomization.sampleWithReplacement(order, timeline_parameters.sample.size, timeline_parameters.sample.weights);
        } else if (timeline_parameters.sample.type == 'without-replacement') {
          order = jsPsych.randomization.sampleWithoutReplacement(order, timeline_parameters.sample.size);
        } else if (timeline_parameters.sample.type == 'fixed-repetitions') {
          order = jsPsych.randomization.repeat(order, timeline_parameters.sample.size, false);
        } else if (timeline_parameters.sample.type == 'alternate-groups') {
          order = jsPsych.randomization.shuffleAlternateGroups(timeline_parameters.sample.groups, timeline_parameters.sample.randomize_group_order);
        } else {
          console.error('Invalid type in timeline sample parameters. Valid options for type are "custom", "with-replacement", "without-replacement", "fixed-repetitions", and "alternate-groups"');
        }
      }

      if (timeline_parameters.randomize_order) {
        order = jsPsych.randomization.shuffle(order);
      }

      progress.order = order;
    }; // next variable set


    this.nextSet = function () {
      progress.current_location = -1;
      progress.current_variable_set++;

      for (var i = 0; i < timeline_parameters.timeline.length; i++) {
        timeline_parameters.timeline[i].reset();
      }
    }; // update the current trial node to be completed
    // returns true if the node is complete after advance (all subnodes are also complete)
    // returns false otherwise


    this.advance = function () {
      // first check to see if done
      if (progress.done) {
        return true;
      } // if node has not started yet (progress.current_location == -1),
      // then try to start the node.


      if (progress.current_location == -1) {
        // check for on_timeline_start and conditonal function on nodes with timelines
        if (typeof timeline_parameters !== 'undefined') {
          // only run the conditional function if this is the first repetition of the timeline when
          // repetitions > 1, and only when on the first variable set
          if (typeof timeline_parameters.conditional_function !== 'undefined' && progress.current_repetition == 0 && progress.current_variable_set == 0) {
            jsPsych.internal.call_immediate = true;
            var conditional_result = timeline_parameters.conditional_function();
            jsPsych.internal.call_immediate = false; // if the conditional_function() returns false, then the timeline
            // doesn't run and is marked as complete.

            if (conditional_result == false) {
              progress.done = true;
              return true;
            }
          } // if we reach this point then the node has its own timeline and will start
          // so we need to check if there is an on_timeline_start function if we are on the first variable set


          if (typeof timeline_parameters.on_timeline_start !== 'undefined' && progress.current_variable_set == 0) {
            timeline_parameters.on_timeline_start();
          }
        } // if we reach this point, then either the node doesn't have a timeline of the 
        // conditional function returned true and it can start


        progress.current_location = 0; // call advance again on this node now that it is pointing to a new location

        return this.advance();
      } // if this node has a timeline, propogate down to the current trial.


      if (typeof timeline_parameters !== 'undefined') {
        var have_node_to_run = false; // keep incrementing the location in the timeline until one of the nodes reached is incomplete

        while (progress.current_location < timeline_parameters.timeline.length && have_node_to_run == false) {
          // check to see if the node currently pointed at is done
          var target_complete = timeline_parameters.timeline[progress.current_location].advance();

          if (!target_complete) {
            have_node_to_run = true;
            return false;
          } else {
            progress.current_location++;
          }
        } // if we've reached the end of the timeline (which, if the code is here, we have)
        // there are a few steps to see what to do next...
        // first, check the timeline_variables to see if we need to loop through again
        // with a new set of variables


        if (progress.current_variable_set < progress.order.length - 1) {
          // reset the progress of the node to be with the new set
          this.nextSet(); // then try to advance this node again.

          return this.advance();
        } // if we're all done with the timeline_variables, then check to see if there are more repetitions
        else if (progress.current_repetition < timeline_parameters.repetitions - 1) {
          this.nextRepetiton(); // check to see if there is an on_timeline_finish function

          if (typeof timeline_parameters.on_timeline_finish !== 'undefined') {
            timeline_parameters.on_timeline_finish();
          }

          return this.advance();
        } // if we're all done with the repetitions...
        else {
          // check to see if there is an on_timeline_finish function
          if (typeof timeline_parameters.on_timeline_finish !== 'undefined') {
            timeline_parameters.on_timeline_finish();
          } // if we're all done with the repetitions, check if there is a loop function.


          if (typeof timeline_parameters.loop_function !== 'undefined') {
            jsPsych.internal.call_immediate = true;

            if (timeline_parameters.loop_function(this.generatedData())) {
              this.reset();
              jsPsych.internal.call_immediate = false;
              return parent_node.advance();
            } else {
              progress.done = true;
              jsPsych.internal.call_immediate = false;
              return true;
            }
          }
        } // no more loops on this timeline, we're done!


        progress.done = true;
        return true;
      }
    }; // check the status of the done flag


    this.isComplete = function () {
      return progress.done;
    }; // getter method for timeline variables


    this.getTimelineVariableValue = function (variable_name) {
      if (typeof timeline_parameters == 'undefined') {
        return undefined;
      }

      var v = timeline_parameters.timeline_variables[progress.order[progress.current_variable_set]][variable_name];
      return v;
    }; // recursive upward search for timeline variables


    this.findTimelineVariable = function (variable_name) {
      var v = this.getTimelineVariableValue(variable_name);

      if (typeof v == 'undefined') {
        if (typeof parent_node !== 'undefined') {
          return parent_node.findTimelineVariable(variable_name);
        } else {
          return undefined;
        }
      } else {
        return v;
      }
    }; // recursive downward search for active trial to extract timeline variable


    this.timelineVariable = function (variable_name) {
      if (typeof timeline_parameters == 'undefined') {
        return this.findTimelineVariable(variable_name);
      } else {
        // if progress.current_location is -1, then the timeline variable is being evaluated
        // in a function that runs prior to the trial starting, so we should treat that trial
        // as being the active trial for purposes of finding the value of the timeline variable
        var loc = Math.max(0, progress.current_location); // if loc is greater than the number of elements on this timeline, then the timeline
        // variable is being evaluated in a function that runs after the trial on the timeline
        // are complete but before advancing to the next (like a loop_function).
        // treat the last active trial as the active trial for this purpose.

        if (loc == timeline_parameters.timeline.length) {
          loc = loc - 1;
        } // now find the variable


        return timeline_parameters.timeline[loc].timelineVariable(variable_name);
      }
    }; // recursively get all the timeline variables for this trial


    this.allTimelineVariables = function () {
      var all_tvs = this.allTimelineVariablesNames();
      var all_tvs_vals = {};

      for (var i = 0; i < all_tvs.length; i++) {
        all_tvs_vals[all_tvs[i]] = this.timelineVariable(all_tvs[i]);
      }

      return all_tvs_vals;
    }; // helper to get all the names at this stage.


    this.allTimelineVariablesNames = function (so_far) {
      if (typeof so_far == 'undefined') {
        so_far = [];
      }

      if (typeof timeline_parameters !== 'undefined') {
        so_far = so_far.concat(Object.keys(timeline_parameters.timeline_variables[progress.order[progress.current_variable_set]])); // if progress.current_location is -1, then the timeline variable is being evaluated
        // in a function that runs prior to the trial starting, so we should treat that trial
        // as being the active trial for purposes of finding the value of the timeline variable

        var loc = Math.max(0, progress.current_location); // if loc is greater than the number of elements on this timeline, then the timeline
        // variable is being evaluated in a function that runs after the trial on the timeline
        // are complete but before advancing to the next (like a loop_function).
        // treat the last active trial as the active trial for this purpose.

        if (loc == timeline_parameters.timeline.length) {
          loc = loc - 1;
        } // now find the variable


        return timeline_parameters.timeline[loc].allTimelineVariablesNames(so_far);
      }

      if (typeof timeline_parameters == 'undefined') {
        return so_far;
      }
    }; // recursively get the number of **trials** contained in the timeline
    // assuming that while loops execute exactly once and if conditionals
    // always run


    this.length = function () {
      var length = 0;

      if (typeof timeline_parameters !== 'undefined') {
        for (var i = 0; i < timeline_parameters.timeline.length; i++) {
          length += timeline_parameters.timeline[i].length();
        }
      } else {
        return 1;
      }

      return length;
    }; // return the percentage of trials completed, grouped at the first child level
    // counts a set of trials as complete when the child node is done


    this.percentComplete = function () {
      var total_trials = this.length();
      var completed_trials = 0;

      for (var i = 0; i < timeline_parameters.timeline.length; i++) {
        if (timeline_parameters.timeline[i].isComplete()) {
          completed_trials += timeline_parameters.timeline[i].length();
        }
      }

      return completed_trials / total_trials * 100;
    }; // resets the node and all subnodes to original state
    // but increments the current_iteration counter


    this.reset = function () {
      progress.current_location = -1;
      progress.current_repetition = 0;
      progress.current_variable_set = 0;
      progress.current_iteration++;
      progress.done = false;
      this.setTimelineVariablesOrder();

      if (typeof timeline_parameters != 'undefined') {
        for (var i = 0; i < timeline_parameters.timeline.length; i++) {
          timeline_parameters.timeline[i].reset();
        }
      }
    }; // mark this node as finished


    this.end = function () {
      progress.done = true;
    }; // recursively end whatever sub-node is running the current trial


    this.endActiveNode = function () {
      if (typeof timeline_parameters == 'undefined') {
        this.end();
        parent_node.end();
      } else {
        timeline_parameters.timeline[progress.current_location].endActiveNode();
      }
    }; // get a unique ID associated with this node
    // the ID reflects the current iteration through this node.


    this.ID = function () {
      var id = "";

      if (typeof parent_node == 'undefined') {
        return "0." + progress.current_iteration;
      } else {
        id += parent_node.ID() + "-";
        id += relative_id + "." + progress.current_iteration;
        return id;
      }
    }; // get the ID of the active trial


    this.activeID = function () {
      if (typeof timeline_parameters == 'undefined') {
        return this.ID();
      } else {
        return timeline_parameters.timeline[progress.current_location].activeID();
      }
    }; // get all the data generated within this node


    this.generatedData = function () {
      return jsPsych.data.getDataByTimelineNode(this.ID());
    }; // get all the trials of a particular type


    this.trialsOfType = function (type) {
      if (typeof timeline_parameters == 'undefined') {
        if (trial_parameters.type == type) {
          return trial_parameters;
        } else {
          return [];
        }
      } else {
        var trials = [];

        for (var i = 0; i < timeline_parameters.timeline.length; i++) {
          var t = timeline_parameters.timeline[i].trialsOfType(type);
          trials = trials.concat(t);
        }

        return trials;
      }
    }; // add new trials to end of this timeline


    this.insert = function (parameters) {
      if (typeof timeline_parameters == 'undefined') {
        console.error('Cannot add new trials to a trial-level node.');
      } else {
        timeline_parameters.timeline.push(new TimelineNode(Object.assign({}, node_trial_data, parameters), self, timeline_parameters.timeline.length));
      }
    }; // constructor


    var _construct = function () {
      // store a link to the parent of this node
      parent_node = parent; // create the ID for this node

      if (typeof parent == 'undefined') {
        relative_id = 0;
      } else {
        relative_id = relativeID;
      } // check if there is a timeline parameter
      // if there is, then this node has its own timeline


      if (typeof parameters.timeline !== 'undefined' || typeof jsPsych.plugins[trial_type] == 'function') {
        // create timeline properties
        timeline_parameters = {
          timeline: [],
          loop_function: parameters.loop_function,
          conditional_function: parameters.conditional_function,
          sample: parameters.sample,
          randomize_order: typeof parameters.randomize_order == 'undefined' ? false : parameters.randomize_order,
          repetitions: typeof parameters.repetitions == 'undefined' ? 1 : parameters.repetitions,
          timeline_variables: typeof parameters.timeline_variables == 'undefined' ? [{}] : parameters.timeline_variables,
          on_timeline_finish: parameters.on_timeline_finish,
          on_timeline_start: parameters.on_timeline_start
        };
        self.setTimelineVariablesOrder(); // extract all of the node level data and parameters
        // but remove all of the timeline-level specific information
        // since this will be used to copy things down hierarchically

        var node_data = Object.assign({}, parameters);
        delete node_data.timeline;
        delete node_data.conditional_function;
        delete node_data.loop_function;
        delete node_data.randomize_order;
        delete node_data.repetitions;
        delete node_data.timeline_variables;
        delete node_data.sample;
        delete node_data.on_timeline_start;
        delete node_data.on_timeline_finish;
        node_trial_data = node_data; // store for later...
        // create a TimelineNode for each element in the timeline

        for (var i = 0; i < parameters.timeline.length; i++) {
          // merge parameters
          var merged_parameters = Object.assign({}, node_data, parameters.timeline[i]); // merge any data from the parent node into child nodes

          if (_typeof(node_data.data) == 'object' && _typeof(parameters.timeline[i].data) == 'object') {
            var merged_data = Object.assign({}, node_data.data, parameters.timeline[i].data);
            merged_parameters.data = merged_data;
          }

          timeline_parameters.timeline.push(new TimelineNode(merged_parameters, self, i));
        }
      } // if there is no timeline parameter, then this node is a trial node
      else {
        // check to see if a valid trial type is defined
        var trial_type = parameters.type;

        if (typeof trial_type == 'undefined') {
          console.error('Trial level node is missing the "type" parameter. The parameters for the node are: ' + JSON.stringify(parameters));
        } else if (typeof jsPsych.plugins[trial_type] == 'undefined' && trial_type.toString().replace(/\s/g, '') != "function(){returntimeline.timelineVariable(varname);}") {
          console.error('No plugin loaded for trials of type "' + trial_type + '"');
        } // create a deep copy of the parameters for the trial


        trial_parameters = Object.assign({}, parameters);
      }
    }();
  }

  function startExperiment() {
    loaded = true; // show progress bar if requested

    if (opts.show_progress_bar === true) {
      drawProgressBar(opts.message_progress_bar);
    } // record the start time


    exp_start_time = new Date(); // begin!

    timeline.advance();
    doTrial(timeline.trial());
  }

  function finishExperiment() {
    if (typeof timeline.end_message !== 'undefined') {
      DOM_target.innerHTML = timeline.end_message;
    }

    opts.on_finish(jsPsych.data.get());
  }

  function nextTrial() {
    // if experiment is paused, don't do anything.
    if (paused) {
      waiting = true;
      return;
    }

    global_trial_index++; // advance timeline

    timeline.markCurrentTrialComplete();
    var complete = timeline.advance(); // update progress bar if shown

    if (opts.show_progress_bar === true && opts.auto_update_progress_bar == true) {
      updateProgressBar();
    } // check if experiment is over


    if (complete) {
      finishExperiment();
      return;
    }

    doTrial(timeline.trial());
  }

  function doTrial(trial) {
    current_trial = trial;
    current_trial_finished = false; // process all timeline variables for this trial

    evaluateTimelineVariables(trial); // evaluate variables that are functions

    evaluateFunctionParameters(trial); // get default values for parameters

    setDefaultValues(trial); // about to execute callbacks

    jsPsych.internal.call_immediate = true; // call experiment wide callback

    opts.on_trial_start(trial); // call trial specific callback if it exists

    if (typeof trial.on_start == 'function') {
      trial.on_start(trial);
    } // call any on_start functions for extensions


    if (Array.isArray(trial.extensions)) {
      for (var i = 0; i < trial.extensions.length; i++) {
        jsPsych.extensions[trial.extensions[i].type].on_start(current_trial.extensions[i].params);
      }
    } // apply the focus to the element containing the experiment.


    DOM_container.focus(); // reset the scroll on the DOM target

    DOM_target.scrollTop = 0; // add CSS classes to the DOM_target if they exist in trial.css_classes

    if (typeof trial.css_classes !== 'undefined') {
      if (!Array.isArray(trial.css_classes) && typeof trial.css_classes == 'string') {
        trial.css_classes = [trial.css_classes];
      }

      if (Array.isArray(trial.css_classes)) {
        var _DOM_target$classList2;

        (_DOM_target$classList2 = DOM_target.classList).add.apply(_DOM_target$classList2, _toConsumableArray(trial.css_classes));
      }
    } // execute trial method


    jsPsych.plugins[trial.type].trial(DOM_target, trial); // call trial specific loaded callback if it exists

    if (typeof trial.on_load == 'function') {
      trial.on_load();
    } // call any on_load functions for extensions


    if (Array.isArray(trial.extensions)) {
      for (var i = 0; i < trial.extensions.length; i++) {
        jsPsych.extensions[trial.extensions[i].type].on_load(current_trial.extensions[i].params);
      }
    } // done with callbacks


    jsPsych.internal.call_immediate = false;
  }

  function evaluateTimelineVariables(trial) {
    var keys = Object.keys(trial);

    for (var i = 0; i < keys.length; i++) {
      // timeline variables on the root level
      if (typeof trial[keys[i]] == "function" && trial[keys[i]].toString().replace(/\s/g, '') == "function(){returntimeline.timelineVariable(varname);}") {
        trial[keys[i]] = trial[keys[i]].call();
      } // timeline variables that are nested in objects


      if (_typeof(trial[keys[i]]) == "object" && trial[keys[i]] !== null) {
        evaluateTimelineVariables(trial[keys[i]]);
      }
    }
  }

  function evaluateFunctionParameters(trial) {
    // set a flag so that jsPsych.timelineVariable() is immediately executed in this context
    jsPsych.internal.call_immediate = true; // first, eval the trial type if it is a function
    // this lets users set the plugin type with a function

    if (typeof trial.type === 'function') {
      trial.type = trial.type.call();
    } // now eval the whole trial
    // start by getting a list of the parameters


    var keys = Object.keys(trial); // iterate over each parameter

    for (var i = 0; i < keys.length; i++) {
      // check to make sure parameter is not "type", since that was eval'd above.
      if (keys[i] !== 'type') {
        // this if statement is checking to see if the parameter type is expected to be a function, in which case we should NOT evaluate it.
        // the first line checks if the parameter is defined in the universalPluginParameters set
        // the second line checks the plugin-specific parameters
        if (typeof jsPsych.plugins.universalPluginParameters[keys[i]] !== 'undefined' && jsPsych.plugins.universalPluginParameters[keys[i]].type !== jsPsych.plugins.parameterType.FUNCTION) {
          trial[keys[i]] = replaceFunctionsWithValues(trial[keys[i]], null);
        }

        if (typeof jsPsych.plugins[trial.type].info.parameters[keys[i]] !== 'undefined' && jsPsych.plugins[trial.type].info.parameters[keys[i]].type !== jsPsych.plugins.parameterType.FUNCTION) {
          trial[keys[i]] = replaceFunctionsWithValues(trial[keys[i]], jsPsych.plugins[trial.type].info.parameters[keys[i]]);
        }
      }
    } // reset so jsPsych.timelineVariable() is no longer immediately executed


    jsPsych.internal.call_immediate = false;
  }

  function replaceFunctionsWithValues(obj, info) {
    // null typeof is 'object' (?!?!), so need to run this first!
    if (obj === null) {
      return obj;
    } // arrays 
    else if (Array.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        obj[i] = replaceFunctionsWithValues(obj[i], info);
      }
    } // objects
    else if (_typeof(obj) === 'object') {
      var keys = Object.keys(obj);

      if (info == null || !info.nested) {
        for (var i = 0; i < keys.length; i++) {
          obj[keys[i]] = replaceFunctionsWithValues(obj[keys[i]], null);
        }
      } else {
        for (var i = 0; i < keys.length; i++) {
          if (_typeof(info.nested[keys[i]]) == 'object' && info.nested[keys[i]].type !== jsPsych.plugins.parameterType.FUNCTION) {
            obj[keys[i]] = replaceFunctionsWithValues(obj[keys[i]], info.nested[keys[i]]);
          }
        }
      }
    } else if (typeof obj === 'function') {
      return obj();
    }

    return obj;
  }

  function setDefaultValues(trial) {
    for (var param in jsPsych.plugins[trial.type].info.parameters) {
      // check if parameter is complex with nested defaults
      if (jsPsych.plugins[trial.type].info.parameters[param].type == jsPsych.plugins.parameterType.COMPLEX) {
        if (jsPsych.plugins[trial.type].info.parameters[param].array == true) {
          // iterate over each entry in the array
          trial[param].forEach(function (ip, i) {
            // check each parameter in the plugin description
            for (var p in jsPsych.plugins[trial.type].info.parameters[param].nested) {
              if (typeof trial[param][i][p] == 'undefined' || trial[param][i][p] === null) {
                if (typeof jsPsych.plugins[trial.type].info.parameters[param].nested[p].default == 'undefined') {
                  console.error('You must specify a value for the ' + p + ' parameter (nested in the ' + param + ' parameter) in the ' + trial.type + ' plugin.');
                } else {
                  trial[param][i][p] = jsPsych.plugins[trial.type].info.parameters[param].nested[p].default;
                }
              }
            }
          });
        }
      } // if it's not nested, checking is much easier and do that here:
      else if (typeof trial[param] == 'undefined' || trial[param] === null) {
        if (typeof jsPsych.plugins[trial.type].info.parameters[param].default == 'undefined') {
          console.error('You must specify a value for the ' + param + ' parameter in the ' + trial.type + ' plugin.');
        } else {
          trial[param] = jsPsych.plugins[trial.type].info.parameters[param].default;
        }
      }
    }
  }

  function checkExclusions(exclusions, success, fail) {
    var clear = true; // MINIMUM SIZE

    if (typeof exclusions.min_width !== 'undefined' || typeof exclusions.min_height !== 'undefined') {
      var mw = typeof exclusions.min_width !== 'undefined' ? exclusions.min_width : 0;
      var mh = typeof exclusions.min_height !== 'undefined' ? exclusions.min_height : 0;
      var w = window.innerWidth;
      var h = window.innerHeight;

      if (w < mw || h < mh) {
        clear = false;
        var interval = setInterval(function () {
          var w = window.innerWidth;
          var h = window.innerHeight;

          if (w < mw || h < mh) {
            var msg = '<p>Your browser window is too small to complete this experiment. ' + 'Please maximize the size of your browser window. If your browser window is already maximized, ' + 'you will not be able to complete this experiment.</p>' + '<p>The minimum width is ' + mw + 'px. Your current width is ' + w + 'px.</p>' + '<p>The minimum height is ' + mh + 'px. Your current height is ' + h + 'px.</p>';
            core.getDisplayElement().innerHTML = msg;
          } else {
            clearInterval(interval);
            core.getDisplayElement().innerHTML = '';
            checkExclusions(exclusions, success, fail);
          }
        }, 100);
        return; // prevents checking other exclusions while this is being fixed
      }
    } // WEB AUDIO API


    if (typeof exclusions.audio !== 'undefined' && exclusions.audio) {
      if (window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext')) {// clear
      } else {
        clear = false;
        var msg = '<p>Your browser does not support the WebAudio API, which means that you will not ' + 'be able to complete the experiment.</p><p>Browsers that support the WebAudio API include ' + 'Chrome, Firefox, Safari, and Edge.</p>';
        core.getDisplayElement().innerHTML = msg;
        fail();
        return;
      }
    } // GO?


    if (clear) {
      success();
    }
  }

  function drawProgressBar(msg) {
    document.querySelector('.jspsych-display-element').insertAdjacentHTML('afterbegin', '<div id="jspsych-progressbar-container">' + '<span>' + msg + '</span>' + '<div id="jspsych-progressbar-outer">' + '<div id="jspsych-progressbar-inner"></div>' + '</div></div>');
  }

  function updateProgressBar() {
    var progress = jsPsych.progress().percent_complete;
    core.setProgressBar(progress / 100);
  }

  var progress_bar_amount = 0;

  core.setProgressBar = function (proportion_complete) {
    proportion_complete = Math.max(Math.min(1, proportion_complete), 0);
    document.querySelector('#jspsych-progressbar-inner').style.width = proportion_complete * 100 + "%";
    progress_bar_amount = proportion_complete;
  };

  core.getProgressBarCompleted = function () {
    return progress_bar_amount;
  }; //Leave a trace in the DOM that jspsych was loaded


  document.documentElement.setAttribute('jspsych', 'present');
  return core;
}();

jsPsych.internal = function () {
  var module = {}; // this flag is used to determine whether we are in a scope where
  // jsPsych.timelineVariable() should be executed immediately or
  // whether it should return a function to access the variable later.

  module.call_immediate = false;
  return module;
}();

jsPsych.plugins = function () {
  var module = {}; // enumerate possible parameter types for plugins

  module.parameterType = {
    BOOL: 0,
    STRING: 1,
    INT: 2,
    FLOAT: 3,
    FUNCTION: 4,
    KEY: 5,
    SELECT: 6,
    HTML_STRING: 7,
    IMAGE: 8,
    AUDIO: 9,
    VIDEO: 10,
    OBJECT: 11,
    COMPLEX: 12,
    TIMELINE: 13
  };
  module.universalPluginParameters = {
    data: {
      type: module.parameterType.OBJECT,
      pretty_name: 'Data',
      default: {},
      description: 'Data to add to this trial (key-value pairs)'
    },
    on_start: {
      type: module.parameterType.FUNCTION,
      pretty_name: 'On start',
      default: function _default() {
        return;
      },
      description: 'Function to execute when trial begins'
    },
    on_finish: {
      type: module.parameterType.FUNCTION,
      pretty_name: 'On finish',
      default: function _default() {
        return;
      },
      description: 'Function to execute when trial is finished'
    },
    on_load: {
      type: module.parameterType.FUNCTION,
      pretty_name: 'On load',
      default: function _default() {
        return;
      },
      description: 'Function to execute after the trial has loaded'
    },
    post_trial_gap: {
      type: module.parameterType.INT,
      pretty_name: 'Post trial gap',
      default: null,
      description: 'Length of gap between the end of this trial and the start of the next trial'
    },
    css_classes: {
      type: module.parameterType.STRING,
      pretty_name: 'Custom CSS classes',
      default: null,
      description: 'A list of CSS classes to add to the jsPsych display element for the duration of this trial'
    }
  };
  return module;
}();

jsPsych.extensions = function () {
  return {};
}();

jsPsych.data = function () {
  var module = {}; // data storage object

  var allData = DataCollection(); // browser interaction event data

  var interactionData = DataCollection(); // data properties for all trials

  var dataProperties = {}; // cache the query_string

  var query_string; // DataCollection

  function DataCollection(data) {
    var data_collection = {};
    var trials = typeof data === 'undefined' ? [] : data;

    data_collection.push = function (new_data) {
      trials.push(new_data);
      return data_collection;
    };

    data_collection.join = function (other_data_collection) {
      trials = trials.concat(other_data_collection.values());
      return data_collection;
    };

    data_collection.top = function () {
      if (trials.length <= 1) {
        return data_collection;
      } else {
        return DataCollection([trials[trials.length - 1]]);
      }
    };
    /**
     * Queries the first n elements in a collection of trials.
     *
     * @param {number} n A positive integer of elements to return. A value of
     *                   n that is less than 1 will throw an error.
     *
     * @return {Array} First n objects of a collection of trials. If fewer than
     *                 n trials are available, the trials.length elements will
     *                 be returned.
     *
     */


    data_collection.first = function (n) {
      if (typeof n == 'undefined') {
        n = 1;
      }

      if (n < 1) {
        throw "You must query with a positive nonzero integer. Please use a \n               different value for n.";
      }

      if (trials.length == 0) return DataCollection([]);
      if (n > trials.length) n = trials.length;
      return DataCollection(trials.slice(0, n));
    };
    /**
     * Queries the last n elements in a collection of trials.
     *
     * @param {number} n A positive integer of elements to return. A value of
     *                   n that is less than 1 will throw an error.
     *
     * @return {Array} Last n objects of a collection of trials. If fewer than
     *                 n trials are available, the trials.length elements will
     *                 be returned.
     *
     */


    data_collection.last = function (n) {
      if (typeof n == 'undefined') {
        n = 1;
      }

      if (n < 1) {
        throw "You must query with a positive nonzero integer. Please use a \n               different value for n.";
      }

      if (trials.length == 0) return DataCollection([]);
      if (n > trials.length) n = trials.length;
      return DataCollection(trials.slice(trials.length - n, trials.length));
    };

    data_collection.values = function () {
      return trials;
    };

    data_collection.count = function () {
      return trials.length;
    };

    data_collection.readOnly = function () {
      return DataCollection(jsPsych.utils.deepCopy(trials));
    };

    data_collection.addToAll = function (properties) {
      for (var i = 0; i < trials.length; i++) {
        for (var key in properties) {
          trials[i][key] = properties[key];
        }
      }

      return data_collection;
    };

    data_collection.addToLast = function (properties) {
      if (trials.length != 0) {
        for (var key in properties) {
          trials[trials.length - 1][key] = properties[key];
        }
      }

      return data_collection;
    };

    data_collection.filter = function (filters) {
      // [{p1: v1, p2:v2}, {p1:v2}]
      // {p1: v1}
      if (!Array.isArray(filters)) {
        var f = jsPsych.utils.deepCopy([filters]);
      } else {
        var f = jsPsych.utils.deepCopy(filters);
      }

      var filtered_data = [];

      for (var x = 0; x < trials.length; x++) {
        var keep = false;

        for (var i = 0; i < f.length; i++) {
          var match = true;
          var keys = Object.keys(f[i]);

          for (var k = 0; k < keys.length; k++) {
            if (typeof trials[x][keys[k]] !== 'undefined' && trials[x][keys[k]] == f[i][keys[k]]) {// matches on this key!
            } else {
              match = false;
            }
          }

          if (match) {
            keep = true;
            break;
          } // can break because each filter is OR.

        }

        if (keep) {
          filtered_data.push(trials[x]);
        }
      }

      var out = DataCollection(filtered_data);
      return out;
    };

    data_collection.filterCustom = function (fn) {
      var included = [];

      for (var i = 0; i < trials.length; i++) {
        if (fn(trials[i])) {
          included.push(trials[i]);
        }
      }

      return DataCollection(included);
    };

    data_collection.select = function (column) {
      var values = [];

      for (var i = 0; i < trials.length; i++) {
        if (typeof trials[i][column] !== 'undefined') {
          values.push(trials[i][column]);
        }
      }

      var out = DataColumn();
      out.values = values;
      return out;
    };

    data_collection.ignore = function (columns) {
      if (!Array.isArray(columns)) {
        columns = [columns];
      }

      var o = jsPsych.utils.deepCopy(trials);

      for (var i = 0; i < o.length; i++) {
        for (var j in columns) {
          delete o[i][columns[j]];
        }
      }

      return DataCollection(o);
    };

    data_collection.uniqueNames = function () {
      var names = [];

      for (var i = 0; i < trials.length; i++) {
        var keys = Object.keys(trials[i]);

        for (var j = 0; j < keys.length; j++) {
          if (!names.includes(keys[j])) {
            names.push(keys[j]);
          }
        }
      }

      return names;
    };

    data_collection.csv = function () {
      return JSON2CSV(trials);
    };

    data_collection.json = function (pretty) {
      if (pretty) {
        return JSON.stringify(trials, null, '\t');
      }

      return JSON.stringify(trials);
    };

    data_collection.localSave = function (format, filename) {
      var data_string;

      if (format == 'JSON' || format == 'json') {
        data_string = data_collection.json();
      } else if (format == 'CSV' || format == 'csv') {
        data_string = data_collection.csv();
      } else {
        throw new Error('Invalid format specified for localSave. Must be "JSON" or "CSV".');
      }

      saveTextToFile(data_string, filename);
    };

    return data_collection;
  } // DataColumn class


  function DataColumn() {
    var data_column = {};
    data_column.values = [];

    data_column.sum = function () {
      var s = 0;

      for (var i = 0; i < data_column.values.length; i++) {
        s += data_column.values[i];
      }

      return s;
    };

    data_column.mean = function () {
      return data_column.sum() / data_column.count();
    };

    data_column.median = function () {
      if (data_column.values.length == 0) {
        return undefined;
      }

      ;
      var numbers = data_column.values.slice(0).sort(function (a, b) {
        return a - b;
      });
      var middle = Math.floor(numbers.length / 2);
      var isEven = numbers.length % 2 === 0;
      return isEven ? (numbers[middle] + numbers[middle - 1]) / 2 : numbers[middle];
    };

    data_column.min = function () {
      return Math.min.apply(null, data_column.values);
    };

    data_column.max = function () {
      return Math.max.apply(null, data_column.values);
    };

    data_column.count = function () {
      return data_column.values.length;
    };

    data_column.variance = function () {
      var mean = data_column.mean();
      var sum_square_error = 0;

      for (var i = 0; i < data_column.values.length; i++) {
        sum_square_error += Math.pow(data_column.values[i] - mean, 2);
      }

      var mse = sum_square_error / (data_column.values.length - 1);
      return mse;
    };

    data_column.sd = function () {
      var mse = data_column.variance();
      var rmse = Math.sqrt(mse);
      return rmse;
    };

    data_column.frequencies = function () {
      var unique = {};

      for (var i = 0; i < data_column.values.length; i++) {
        var v = data_column.values[i];

        if (typeof unique[v] == 'undefined') {
          unique[v] = 1;
        } else {
          unique[v]++;
        }
      }

      return unique;
    };

    data_column.all = function (eval_fn) {
      for (var i = 0; i < data_column.values.length; i++) {
        if (!eval_fn(data_column.values[i])) {
          return false;
        }
      }

      return true;
    };

    data_column.subset = function (eval_fn) {
      var out = [];

      for (var i = 0; i < data_column.values.length; i++) {
        if (eval_fn(data_column.values[i])) {
          out.push(data_column.values[i]);
        }
      }

      var o = DataColumn();
      o.values = out;
      return o;
    };

    return data_column;
  }

  module.reset = function () {
    allData = DataCollection();
    interactionData = DataCollection();
  };

  module.get = function () {
    return allData;
  };

  module.getInteractionData = function () {
    return interactionData;
  };

  module.write = function (data_object) {
    var progress = jsPsych.progress();
    var trial = jsPsych.currentTrial(); //var trial_opt_data = typeof trial.data == 'function' ? trial.data() : trial.data;

    var default_data = {
      'trial_type': trial.type,
      'trial_index': progress.current_trial_global,
      'time_elapsed': jsPsych.totalTime(),
      'internal_node_id': jsPsych.currentTimelineNodeID()
    };
    var ext_data_object = Object.assign({}, data_object, trial.data, default_data, dataProperties);
    allData.push(ext_data_object);
  };

  module.addProperties = function (properties) {
    // first, add the properties to all data that's already stored
    allData.addToAll(properties); // now add to list so that it gets appended to all future data

    dataProperties = Object.assign({}, dataProperties, properties);
  };

  module.addDataToLastTrial = function (data) {
    allData.addToLast(data);
  };

  module.getDataByTimelineNode = function (node_id) {
    var data = allData.filterCustom(function (x) {
      return x.internal_node_id.slice(0, node_id.length) === node_id;
    });
    return data;
  };

  module.getLastTrialData = function () {
    return allData.top();
  };

  module.getLastTimelineData = function () {
    var lasttrial = module.getLastTrialData();
    var node_id = lasttrial.select('internal_node_id').values[0];

    if (typeof node_id === 'undefined') {
      return DataCollection();
    } else {
      var parent_node_id = node_id.substr(0, node_id.lastIndexOf('-'));
      var lastnodedata = module.getDataByTimelineNode(parent_node_id);
      return lastnodedata;
    }
  };

  module.displayData = function (format) {
    format = typeof format === 'undefined' ? "json" : format.toLowerCase();

    if (format != "json" && format != "csv") {
      console.log('Invalid format declared for displayData function. Using json as default.');
      format = "json";
    }

    var data_string;

    if (format == 'json') {
      data_string = allData.json(true); // true = pretty print with tabs
    } else {
      data_string = allData.csv();
    }

    var display_element = jsPsych.getDisplayElement();
    display_element.innerHTML = '<pre id="jspsych-data-display"></pre>';
    document.getElementById('jspsych-data-display').textContent = data_string;
  };

  module.urlVariables = function () {
    if (typeof query_string == 'undefined') {
      query_string = getQueryString();
    }

    return query_string;
  };

  module.getURLVariable = function (whichvar) {
    if (typeof query_string == 'undefined') {
      query_string = getQueryString();
    }

    return query_string[whichvar];
  };

  module.createInteractionListeners = function () {
    // blur event capture
    window.addEventListener('blur', function () {
      var data = {
        event: 'blur',
        trial: jsPsych.progress().current_trial_global,
        time: jsPsych.totalTime()
      };
      interactionData.push(data);
      jsPsych.initSettings().on_interaction_data_update(data);
    }); // focus event capture

    window.addEventListener('focus', function () {
      var data = {
        event: 'focus',
        trial: jsPsych.progress().current_trial_global,
        time: jsPsych.totalTime()
      };
      interactionData.push(data);
      jsPsych.initSettings().on_interaction_data_update(data);
    }); // fullscreen change capture

    function fullscreenchange() {
      var type = document.isFullScreen || document.webkitIsFullScreen || document.mozIsFullScreen || document.fullscreenElement ? 'fullscreenenter' : 'fullscreenexit';
      var data = {
        event: type,
        trial: jsPsych.progress().current_trial_global,
        time: jsPsych.totalTime()
      };
      interactionData.push(data);
      jsPsych.initSettings().on_interaction_data_update(data);
    }

    document.addEventListener('fullscreenchange', fullscreenchange);
    document.addEventListener('mozfullscreenchange', fullscreenchange);
    document.addEventListener('webkitfullscreenchange', fullscreenchange);
  }; // public methods for testing purposes. not recommended for use.


  module._customInsert = function (data) {
    allData = DataCollection(data);
  };

  module._fullreset = function () {
    module.reset();
    dataProperties = {};
  }; // private function to save text file on local drive


  function saveTextToFile(textstr, filename) {
    var blobToSave = new Blob([textstr], {
      type: 'text/plain'
    });
    var blobURL = "";

    if (typeof window.webkitURL !== 'undefined') {
      blobURL = window.webkitURL.createObjectURL(blobToSave);
    } else {
      blobURL = window.URL.createObjectURL(blobToSave);
    }

    var display_element = jsPsych.getDisplayElement();
    display_element.insertAdjacentHTML('beforeend', '<a id="jspsych-download-as-text-link" style="display:none;" download="' + filename + '" href="' + blobURL + '">click to download</a>');
    document.getElementById('jspsych-download-as-text-link').click();
  } //
  // A few helper functions to handle data format conversion
  //
  // this function based on code suggested by StackOverflow users:
  // http://stackoverflow.com/users/64741/zachary
  // http://stackoverflow.com/users/317/joseph-sturtevant


  function JSON2CSV(objArray) {
    var array = _typeof(objArray) != 'object' ? JSON.parse(objArray) : objArray;
    var line = '';
    var result = '';
    var columns = [];
    var i = 0;

    for (var j = 0; j < array.length; j++) {
      for (var key in array[j]) {
        var keyString = key + "";
        keyString = '"' + keyString.replace(/"/g, '""') + '",';

        if (!columns.includes(key)) {
          columns[i] = key;
          line += keyString;
          i++;
        }
      }
    }

    line = line.slice(0, -1);
    result += line + '\r\n';

    for (var i = 0; i < array.length; i++) {
      var line = '';

      for (var j = 0; j < columns.length; j++) {
        var value = typeof array[i][columns[j]] === 'undefined' ? '' : array[i][columns[j]];

        if (_typeof(value) == 'object') {
          value = JSON.stringify(value);
        }

        var valueString = value + "";
        line += '"' + valueString.replace(/"/g, '""') + '",';
      }

      line = line.slice(0, -1);
      result += line + '\r\n';
    }

    return result;
  } // this function is modified from StackOverflow:
  // http://stackoverflow.com/posts/3855394


  function getQueryString() {
    var a = window.location.search.substr(1).split('&');
    if (a == "") return {};
    var b = {};

    for (var i = 0; i < a.length; ++i) {
      var p = a[i].split('=', 2);
      if (p.length == 1) b[p[0]] = "";else b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " "));
    }

    return b;
  }

  return module;
}();

jsPsych.turk = function () {
  var module = {}; // core.turkInfo gets information relevant to mechanical turk experiments. returns an object
  // containing the workerID, assignmentID, and hitID, and whether or not the HIT is in
  // preview mode, meaning that they haven't accepted the HIT yet.

  module.turkInfo = function () {
    var turk = {};

    var param = function param(url, name) {
      name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
      var regexS = "[\\?&]" + name + "=([^&#]*)";
      var regex = new RegExp(regexS);
      var results = regex.exec(url);
      return results == null ? "" : results[1];
    };

    var src = param(window.location.href, "assignmentId") ? window.location.href : document.referrer;
    var keys = ["assignmentId", "hitId", "workerId", "turkSubmitTo"];
    keys.map(function (key) {
      turk[key] = unescape(param(src, key));
    });
    turk.previewMode = turk.assignmentId == "ASSIGNMENT_ID_NOT_AVAILABLE";
    turk.outsideTurk = !turk.previewMode && turk.hitId === "" && turk.assignmentId == "" && turk.workerId == "";
    turk_info = turk;
    return turk;
  }; // core.submitToTurk will submit a MechanicalTurk ExternalHIT type


  module.submitToTurk = function (data) {
    var turkInfo = jsPsych.turk.turkInfo();
    var assignmentId = turkInfo.assignmentId;
    var turkSubmitTo = turkInfo.turkSubmitTo;
    if (!assignmentId || !turkSubmitTo) return;
    var dataString = [];

    for (var key in data) {
      if (data.hasOwnProperty(key)) {
        dataString.push(key + "=" + escape(data[key]));
      }
    }

    dataString.push("assignmentId=" + assignmentId);
    var url = turkSubmitTo + "/mturk/externalSubmit?" + dataString.join("&");
    window.location.href = url;
  };

  return module;
}();

jsPsych.randomization = function () {
  var module = {};

  module.repeat = function (array, repetitions, unpack) {
    var arr_isArray = Array.isArray(array);
    var rep_isArray = Array.isArray(repetitions); // if array is not an array, then we just repeat the item

    if (!arr_isArray) {
      if (!rep_isArray) {
        array = [array];
        repetitions = [repetitions];
      } else {
        repetitions = [repetitions[0]];
        console.log('Unclear parameters given to randomization.repeat. Multiple set sizes specified, but only one item exists to sample. Proceeding using the first set size.');
      }
    } else {
      if (!rep_isArray) {
        var reps = [];

        for (var i = 0; i < array.length; i++) {
          reps.push(repetitions);
        }

        repetitions = reps;
      } else {
        if (array.length != repetitions.length) {
          console.warning('Unclear parameters given to randomization.repeat. Items and repetitions are unequal lengths. Behavior may not be as expected.'); // throw warning if repetitions is too short, use first rep ONLY.

          if (repetitions.length < array.length) {
            var reps = [];

            for (var i = 0; i < array.length; i++) {
              reps.push(repetitions);
            }

            repetitions = reps;
          } else {
            // throw warning if too long, and then use the first N
            repetitions = repetitions.slice(0, array.length);
          }
        }
      }
    } // should be clear at this point to assume that array and repetitions are arrays with == length


    var allsamples = [];

    for (var i = 0; i < array.length; i++) {
      for (var j = 0; j < repetitions[i]; j++) {
        if (array[i] == null || _typeof(array[i]) != 'object') {
          allsamples.push(array[i]);
        } else {
          allsamples.push(Object.assign({}, array[i]));
        }
      }
    }

    var out = shuffle(allsamples);

    if (unpack) {
      out = unpackArray(out);
    }

    return out;
  };

  module.shuffle = function (arr) {
    if (!Array.isArray(arr)) {
      console.error('Argument to jsPsych.randomization.shuffle() must be an array.');
    }

    return shuffle(arr);
  };

  module.shuffleNoRepeats = function (arr, equalityTest) {
    if (!Array.isArray(arr)) {
      console.error('First argument to jsPsych.randomization.shuffleNoRepeats() must be an array.');
    }

    if (typeof equalityTest !== 'undefined' && typeof equalityTest !== 'function') {
      console.error('Second argument to jsPsych.randomization.shuffleNoRepeats() must be a function.');
    } // define a default equalityTest


    if (typeof equalityTest == 'undefined') {
      equalityTest = function equalityTest(a, b) {
        if (a === b) {
          return true;
        } else {
          return false;
        }
      };
    }

    var random_shuffle = shuffle(arr);

    for (var i = 0; i < random_shuffle.length - 1; i++) {
      if (equalityTest(random_shuffle[i], random_shuffle[i + 1])) {
        // neighbors are equal, pick a new random neighbor to swap (not the first or last element, to avoid edge cases)
        var random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1; // test to make sure the new neighbor isn't equal to the old one

        while (equalityTest(random_shuffle[i + 1], random_shuffle[random_pick]) || equalityTest(random_shuffle[i + 1], random_shuffle[random_pick + 1]) || equalityTest(random_shuffle[i + 1], random_shuffle[random_pick - 1])) {
          random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1;
        }

        var new_neighbor = random_shuffle[random_pick];
        random_shuffle[random_pick] = random_shuffle[i + 1];
        random_shuffle[i + 1] = new_neighbor;
      }
    }

    return random_shuffle;
  };

  module.shuffleAlternateGroups = function (arr_groups, random_group_order) {
    if (typeof random_group_order == 'undefined') {
      random_group_order = false;
    }

    var n_groups = arr_groups.length;

    if (n_groups == 1) {
      console.warn('jsPsych.randomization.shuffleAlternateGroups was called with only one group. Defaulting to simple shuffle.');
      return module.shuffle(arr_groups[0]);
    }

    var group_order = [];

    for (var i = 0; i < n_groups; i++) {
      group_order.push(i);
    }

    if (random_group_order) {
      group_order = module.shuffle(group_order);
    }

    var randomized_groups = [];
    var min_length = null;

    for (var i = 0; i < n_groups; i++) {
      min_length = min_length === null ? arr_groups[i].length : Math.min(min_length, arr_groups[i].length);
      randomized_groups.push(module.shuffle(arr_groups[i]));
    }

    var out = [];

    for (var i = 0; i < min_length; i++) {
      for (var j = 0; j < group_order.length; j++) {
        out.push(randomized_groups[group_order[j]][i]);
      }
    }

    return out;
  };

  module.sampleWithoutReplacement = function (arr, size) {
    if (!Array.isArray(arr)) {
      console.error("First argument to jsPsych.randomization.sampleWithoutReplacement() must be an array");
    }

    if (size > arr.length) {
      console.error("Cannot take a sample " + "larger than the size of the set of items to sample.");
    }

    return jsPsych.randomization.shuffle(arr).slice(0, size);
  };

  module.sampleWithReplacement = function (arr, size, weights) {
    if (!Array.isArray(arr)) {
      console.error("First argument to jsPsych.randomization.sampleWithReplacement() must be an array");
    }

    var normalized_weights = [];

    if (typeof weights !== 'undefined') {
      if (weights.length !== arr.length) {
        console.error('The length of the weights array must equal the length of the array ' + 'to be sampled from.');
      }

      var weight_sum = 0;

      for (var i = 0; i < weights.length; i++) {
        weight_sum += weights[i];
      }

      for (var i = 0; i < weights.length; i++) {
        normalized_weights.push(weights[i] / weight_sum);
      }
    } else {
      for (var i = 0; i < arr.length; i++) {
        normalized_weights.push(1 / arr.length);
      }
    }

    var cumulative_weights = [normalized_weights[0]];

    for (var i = 1; i < normalized_weights.length; i++) {
      cumulative_weights.push(normalized_weights[i] + cumulative_weights[i - 1]);
    }

    var samp = [];

    for (var i = 0; i < size; i++) {
      var rnd = Math.random();
      var index = 0;

      while (rnd > cumulative_weights[index]) {
        index++;
      }

      samp.push(arr[index]);
    }

    return samp;
  };

  module.factorial = function (factors, repetitions, unpack) {
    var factorNames = Object.keys(factors);
    var factor_combinations = [];

    for (var i = 0; i < factors[factorNames[0]].length; i++) {
      factor_combinations.push({});
      factor_combinations[i][factorNames[0]] = factors[factorNames[0]][i];
    }

    for (var i = 1; i < factorNames.length; i++) {
      var toAdd = factors[factorNames[i]];
      var n = factor_combinations.length;

      for (var j = 0; j < n; j++) {
        var base = factor_combinations[j];

        for (var k = 0; k < toAdd.length; k++) {
          var newpiece = {};
          newpiece[factorNames[i]] = toAdd[k];
          factor_combinations.push(Object.assign({}, base, newpiece));
        }
      }

      factor_combinations.splice(0, n);
    }

    repetitions = typeof repetitions === 'undefined' ? 1 : repetitions;
    var with_repetitions = module.repeat(factor_combinations, repetitions, unpack);
    return with_repetitions;
  };

  module.randomID = function (length) {
    var result = '';
    var length = typeof length == 'undefined' ? 32 : length;
    var chars = '0123456789abcdefghjklmnopqrstuvwxyz';

    for (var i = 0; i < length; i++) {
      result += chars[Math.floor(Math.random() * chars.length)];
    }

    return result;
  };

  function unpackArray(array) {
    var out = {};

    for (var i = 0; i < array.length; i++) {
      var keys = Object.keys(array[i]);

      for (var k = 0; k < keys.length; k++) {
        if (typeof out[keys[k]] === 'undefined') {
          out[keys[k]] = [];
        }

        out[keys[k]].push(array[i][keys[k]]);
      }
    }

    return out;
  }

  function shuffle(array) {
    var copy_array = array.slice(0);
    var m = copy_array.length,
        t,
        i; // While there remain elements to shuffle…

    while (m) {
      // Pick a remaining element…
      i = Math.floor(Math.random() * m--); // And swap it with the current element.

      t = copy_array[m];
      copy_array[m] = copy_array[i];
      copy_array[i] = t;
    }

    return copy_array;
  }

  return module;
}();

jsPsych.pluginAPI = function () {
  var module = {}; // keyboard listeners //

  var keyboard_listeners = [];
  var held_keys = {};

  var root_keydown_listener = function root_keydown_listener(e) {
    for (var i = 0; i < keyboard_listeners.length; i++) {
      keyboard_listeners[i].fn(e);
    }

    held_keys[e.key] = true;
  };

  var root_keyup_listener = function root_keyup_listener(e) {
    held_keys[e.key] = false;
  };

  module.reset = function (root_element) {
    keyboard_listeners = [];
    held_keys = {};
    root_element.removeEventListener('keydown', root_keydown_listener);
    root_element.removeEventListener('keyup', root_keyup_listener);
  };

  module.createKeyboardEventListeners = function (root_element) {
    root_element.addEventListener('keydown', root_keydown_listener);
    root_element.addEventListener('keyup', root_keyup_listener);
  };

  module.getKeyboardResponse = function (parameters) {
    //parameters are: callback_function, valid_responses, rt_method, persist, audio_context, audio_context_start_time, allow_held_key
    parameters.rt_method = typeof parameters.rt_method === 'undefined' ? 'performance' : parameters.rt_method;

    if (parameters.rt_method != 'performance' && parameters.rt_method != 'audio') {
      console.log('Invalid RT method specified in getKeyboardResponse. Defaulting to "performance" method.');
      parameters.rt_method = 'performance';
    }

    var start_time;

    if (parameters.rt_method == 'performance') {
      start_time = performance.now();
    } else if (parameters.rt_method === 'audio') {
      start_time = parameters.audio_context_start_time;
    }

    var case_sensitive = typeof jsPsych.initSettings().case_sensitive_responses === 'undefined' ? false : jsPsych.initSettings().case_sensitive_responses;
    var listener_id;

    var listener_function = function listener_function(e) {
      var key_time;

      if (parameters.rt_method == 'performance') {
        key_time = performance.now();
      } else if (parameters.rt_method === 'audio') {
        key_time = parameters.audio_context.currentTime;
      }

      var rt = key_time - start_time; // overiding via parameters for testing purposes.

      var minimum_valid_rt = parameters.minimum_valid_rt;

      if (!minimum_valid_rt) {
        minimum_valid_rt = jsPsych.initSettings().minimum_valid_rt || 0;
      }

      var rt_ms = rt;

      if (parameters.rt_method == 'audio') {
        rt_ms = rt_ms * 1000;
      }

      if (rt_ms < minimum_valid_rt) {
        return;
      }

      var valid_response = false;

      if (typeof parameters.valid_responses === 'undefined') {
        valid_response = true;
      } else if (parameters.valid_responses == jsPsych.ALL_KEYS) {
        valid_response = true;
      } else if (parameters.valid_responses != jsPsych.NO_KEYS) {
        if (parameters.valid_responses.includes(e.key)) {
          valid_response = true;
        }

        if (!case_sensitive) {
          var valid_lower = parameters.valid_responses.map(function (v) {
            return v.toLowerCase();
          });
          var key_lower = e.key.toLowerCase();

          if (valid_lower.includes(key_lower)) {
            valid_response = true;
          }
        }
      } // check if key was already held down


      if ((typeof parameters.allow_held_key === 'undefined' || !parameters.allow_held_key) && valid_response) {
        if (typeof held_keys[e.key] !== 'undefined' && held_keys[e.key] == true) {
          valid_response = false;
        }

        if (!case_sensitive && typeof held_keys[e.key.toLowerCase()] !== 'undefined' && held_keys[e.key.toLowerCase()] == true) {
          valid_response = false;
        }
      }

      if (valid_response) {
        // if this is a valid response, then we don't want the key event to trigger other actions
        // like scrolling via the spacebar.
        e.preventDefault();
        var key = e.key;

        if (!case_sensitive) {
          key = key.toLowerCase();
        }

        parameters.callback_function({
          key: key,
          rt: rt_ms
        });

        if (keyboard_listeners.includes(listener_id)) {
          if (!parameters.persist) {
            // remove keyboard listener
            module.cancelKeyboardResponse(listener_id);
          }
        }
      }
    }; // create listener id object


    listener_id = {
      type: 'keydown',
      fn: listener_function
    }; // add this keyboard listener to the list of listeners

    keyboard_listeners.push(listener_id);
    return listener_id;
  };

  module.cancelKeyboardResponse = function (listener) {
    // remove the listener from the list of listeners
    if (keyboard_listeners.includes(listener)) {
      keyboard_listeners.splice(keyboard_listeners.indexOf(listener), 1);
    }
  };

  module.cancelAllKeyboardResponses = function () {
    keyboard_listeners = [];
  };

  module.convertKeyCharacterToKeyCode = function (character) {
    console.warn('Warning: The jsPsych.pluginAPI.convertKeyCharacterToKeyCode function will be removed in future jsPsych releases. ' + 'We recommend removing this function and using strings to identify/compare keys.');
    var code;
    character = character.toLowerCase();

    if (typeof keylookup[character] !== 'undefined') {
      code = keylookup[character];
    }

    return code;
  };

  module.convertKeyCodeToKeyCharacter = function (code) {
    console.warn('Warning: The jsPsych.pluginAPI.convertKeyCodeToKeyCharacter function will be removed in future jsPsych releases. ' + 'We recommend removing this function and using strings to identify/compare keys.');

    for (var i in Object.keys(keylookup)) {
      if (keylookup[Object.keys(keylookup)[i]] == code) {
        return Object.keys(keylookup)[i];
      }
    }

    return undefined;
  };

  module.compareKeys = function (key1, key2) {
    if (Number.isFinite(key1) || Number.isFinite(key2)) {
      // if either value is a numeric keyCode, then convert both to numeric keyCode values and compare (maintained for backwards compatibility)
      if (typeof key1 == 'string') {
        key1 = module.convertKeyCharacterToKeyCode(key1);
      }

      if (typeof key2 == 'string') {
        key2 = module.convertKeyCharacterToKeyCode(key2);
      }

      return key1 == key2;
    } else if (typeof key1 === 'string' && typeof key2 === 'string') {
      // if both values are strings, then check whether or not letter case should be converted before comparing (case_sensitive_responses in jsPsych.init)
      var case_sensitive = typeof jsPsych.initSettings().case_sensitive_responses === 'undefined' ? false : jsPsych.initSettings().case_sensitive_responses;

      if (case_sensitive) {
        return key1 == key2;
      } else {
        return key1.toLowerCase() == key2.toLowerCase();
      }
    } else if (key1 === null && (typeof key2 === 'string' || Number.isFinite(key2)) || key2 === null && (typeof key1 === 'string' || Number.isFinite(key1))) {
      return false;
    } else if (key1 === null && key2 === null) {
      return true;
    } else {
      console.error('Error in jsPsych.pluginAPI.compareKeys: arguments must be numeric key codes, key strings, or null.');
      return undefined;
    }
  };

  var keylookup = {
    'backspace': 8,
    'tab': 9,
    'enter': 13,
    'shift': 16,
    'ctrl': 17,
    'alt': 18,
    'pause': 19,
    'capslock': 20,
    'esc': 27,
    'space': 32,
    'spacebar': 32,
    ' ': 32,
    'pageup': 33,
    'pagedown': 34,
    'end': 35,
    'home': 36,
    'leftarrow': 37,
    'uparrow': 38,
    'rightarrow': 39,
    'downarrow': 40,
    'insert': 45,
    'delete': 46,
    '0': 48,
    '1': 49,
    '2': 50,
    '3': 51,
    '4': 52,
    '5': 53,
    '6': 54,
    '7': 55,
    '8': 56,
    '9': 57,
    'a': 65,
    'b': 66,
    'c': 67,
    'd': 68,
    'e': 69,
    'f': 70,
    'g': 71,
    'h': 72,
    'i': 73,
    'j': 74,
    'k': 75,
    'l': 76,
    'm': 77,
    'n': 78,
    'o': 79,
    'p': 80,
    'q': 81,
    'r': 82,
    's': 83,
    't': 84,
    'u': 85,
    'v': 86,
    'w': 87,
    'x': 88,
    'y': 89,
    'z': 90,
    '0numpad': 96,
    '1numpad': 97,
    '2numpad': 98,
    '3numpad': 99,
    '4numpad': 100,
    '5numpad': 101,
    '6numpad': 102,
    '7numpad': 103,
    '8numpad': 104,
    '9numpad': 105,
    'multiply': 106,
    'plus': 107,
    'minus': 109,
    'decimal': 110,
    'divide': 111,
    'f1': 112,
    'f2': 113,
    'f3': 114,
    'f4': 115,
    'f5': 116,
    'f6': 117,
    'f7': 118,
    'f8': 119,
    'f9': 120,
    'f10': 121,
    'f11': 122,
    'f12': 123,
    '=': 187,
    ',': 188,
    '.': 190,
    '/': 191,
    '`': 192,
    '[': 219,
    '\\': 220,
    ']': 221
  }; // timeout registration

  var timeout_handlers = [];

  module.setTimeout = function (callback, delay) {
    var handle = setTimeout(callback, delay);
    timeout_handlers.push(handle);
    return handle;
  };

  module.clearAllTimeouts = function () {
    for (var i = 0; i < timeout_handlers.length; i++) {
      clearTimeout(timeout_handlers[i]);
    }

    timeout_handlers = [];
  }; // video //


  var video_buffers = {};

  module.getVideoBuffer = function (videoID) {
    return video_buffers[videoID];
  }; // audio //


  var context = null;
  var audio_buffers = [];

  module.initAudio = function () {
    context = jsPsych.initSettings().use_webaudio === true ? jsPsych.webaudio_context : null;
  };

  module.audioContext = function () {
    if (context !== null) {
      if (context.state !== 'running') {
        context.resume();
      }
    }

    return context;
  };

  module.getAudioBuffer = function (audioID) {
    return new Promise(function (resolve, reject) {
      // check whether audio file already preloaded
      if (typeof audio_buffers[audioID] == 'undefined' || audio_buffers[audioID] == 'tmp') {
        // if audio is not already loaded, try to load it
        var complete = function complete() {
          resolve(audio_buffers[audioID]);
        };

        var error = function error(e) {
          reject(e.error);
        };

        module.preloadAudio([audioID], complete, function () {}, error);
      } else {
        // audio is already loaded
        resolve(audio_buffers[audioID]);
      }
    });
  }; // preloading stimuli //


  var preloads = [];
  var preload_requests = [];
  var img_cache = {};

  module.preloadAudio = function (files, callback_complete, callback_load, callback_error) {
    files = jsPsych.utils.flatten(files);
    files = jsPsych.utils.unique(files);
    var n_loaded = 0;
    var loadfn = typeof callback_load === 'undefined' ? function () {} : callback_load;
    var finishfn = typeof callback_complete === 'undefined' ? function () {} : callback_complete;
    var errorfn = typeof callback_error === 'undefined' ? function () {} : callback_error;

    if (files.length == 0) {
      finishfn();
      return;
    }

    function load_audio_file_webaudio(source, count) {
      count = count || 1;
      var request = new XMLHttpRequest();
      request.open('GET', source, true);
      request.responseType = 'arraybuffer';

      request.onload = function () {
        context.decodeAudioData(request.response, function (buffer) {
          audio_buffers[source] = buffer;
          n_loaded++;
          loadfn(source);

          if (n_loaded == files.length) {
            finishfn();
          }
        }, function (e) {
          errorfn({
            source: source,
            error: e
          });
        });
      };

      request.onerror = function (e) {
        var err = e;

        if (this.status == 404) {
          err = "404";
        }

        errorfn({
          source: source,
          error: err
        });
      };

      request.onloadend = function (e) {
        if (this.status == 404) {
          errorfn({
            source: source,
            error: "404"
          });
        }
      };

      request.send();
      preload_requests.push(request);
    }

    function load_audio_file_html5audio(source, count) {
      count = count || 1;
      var audio = new Audio();
      audio.addEventListener('canplaythrough', function handleCanPlayThrough() {
        audio_buffers[source] = audio;
        n_loaded++;
        loadfn(source);

        if (n_loaded == files.length) {
          finishfn();
        }

        audio.removeEventListener('canplaythrough', handleCanPlayThrough);
      });
      audio.addEventListener('error', function handleError(e) {
        errorfn({
          source: audio.src,
          error: e
        });
        audio.removeEventListener('error', handleError);
      });
      audio.addEventListener('abort', function handleAbort(e) {
        errorfn({
          source: audio.src,
          error: e
        });
        audio.removeEventListener('abort', handleAbort);
      });
      audio.src = source;
      preload_requests.push(audio);
    }

    for (var i = 0; i < files.length; i++) {
      var bufferID = files[i];

      if (typeof audio_buffers[bufferID] !== 'undefined') {
        n_loaded++;
        loadfn(bufferID);

        if (n_loaded == files.length) {
          finishfn();
        }
      } else {
        audio_buffers[bufferID] = 'tmp';

        if (module.audioContext() !== null) {
          load_audio_file_webaudio(bufferID);
        } else {
          load_audio_file_html5audio(bufferID);
        }
      }
    }
  };

  module.preloadImages = function (images, callback_complete, callback_load, callback_error) {
    // flatten the images array
    images = jsPsych.utils.flatten(images);
    images = jsPsych.utils.unique(images);
    var n_loaded = 0;
    var finishfn = typeof callback_complete === 'undefined' ? function () {} : callback_complete;
    var loadfn = typeof callback_load === 'undefined' ? function () {} : callback_load;
    var errorfn = typeof callback_error === 'undefined' ? function () {} : callback_error;

    if (images.length === 0) {
      finishfn();
      return;
    }

    function preload_image(source) {
      var img = new Image();

      img.onload = function () {
        n_loaded++;
        loadfn(img.src);

        if (n_loaded === images.length) {
          finishfn();
        }
      };

      img.onerror = function (e) {
        errorfn({
          source: img.src,
          error: e
        });
      };

      img.src = source;
      img_cache[source] = img;
      preload_requests.push(img);
    }

    for (var i = 0; i < images.length; i++) {
      preload_image(images[i]);
    }
  };

  module.preloadVideo = function (video, callback_complete, callback_load, callback_error) {
    // flatten the video array
    video = jsPsych.utils.flatten(video);
    video = jsPsych.utils.unique(video);
    var n_loaded = 0;
    var finishfn = !callback_complete ? function () {} : callback_complete;
    var loadfn = !callback_load ? function () {} : callback_load;
    var errorfn = typeof callback_error === 'undefined' ? function () {} : callback_error;

    if (video.length === 0) {
      finishfn();
      return;
    }

    function preload_video(source, count) {
      count = count || 1; //based on option 4 here: http://dinbror.dk/blog/how-to-preload-entire-html5-video-before-play-solved/

      var request = new XMLHttpRequest();
      request.open('GET', source, true);
      request.responseType = 'blob';

      request.onload = function () {
        if (this.status === 200 || this.status === 0) {
          var videoBlob = this.response;
          video_buffers[source] = URL.createObjectURL(videoBlob); // IE10+

          n_loaded++;
          loadfn(source);

          if (n_loaded === video.length) {
            finishfn();
          }
        }
      };

      request.onerror = function (e) {
        var err = e;

        if (this.status == 404) {
          err = "404";
        }

        errorfn({
          source: source,
          error: err
        });
      };

      request.onloadend = function (e) {
        if (this.status == 404) {
          errorfn({
            source: source,
            error: "404"
          });
        }
      };

      request.send();
      preload_requests.push(request);
    }

    for (var i = 0; i < video.length; i++) {
      preload_video(video[i]);
    }
  };

  module.registerPreload = function (plugin_name, parameter, media_type) {
    if (['audio', 'image', 'video'].indexOf(media_type) === -1) {
      console.error('Invalid media_type parameter for jsPsych.pluginAPI.registerPreload. Please check the plugin file.');
    }

    var preload = {
      plugin: plugin_name,
      parameter: parameter,
      media_type: media_type
    };
    preloads.push(preload);
  };

  module.getAutoPreloadList = function (timeline_description) {
    function getTrialsOfTypeFromTimelineDescription(td, target_type, inherited_type) {
      var trials = [];

      for (var i = 0; i < td.length; i++) {
        var node = td[i];

        if (Array.isArray(node.timeline)) {
          if (typeof node.type !== 'undefined') {
            inherited_type = node.type;
          }

          trials = trials.concat(getTrialsOfTypeFromTimelineDescription(node.timeline, target_type, inherited_type));
        } else {
          if (typeof node.type !== 'undefined' && node.type == target_type) {
            trials.push(node);
          }

          if (typeof node.type == 'undefined' && inherited_type == target_type) {
            trials.push(Object.assign({}, {
              type: target_type
            }, node));
          }
        }
      }

      return trials;
    }

    if (typeof timeline_description == 'undefined') {
      timeline_description = jsPsych.initSettings().timeline;
    } // list of items to preload


    var images = [];
    var audio = [];
    var video = []; // construct list

    for (var i = 0; i < preloads.length; i++) {
      var type = preloads[i].plugin;
      var param = preloads[i].parameter;
      var media = preloads[i].media_type;
      var trials = getTrialsOfTypeFromTimelineDescription(timeline_description, type);

      for (var j = 0; j < trials.length; j++) {
        if (typeof trials[j][param] == 'undefined') {
          console.warn("jsPsych failed to auto preload one or more files:");
          console.warn("no parameter called " + param + " in plugin " + type);
        } else if (typeof trials[j][param] !== 'function') {
          if (media === 'image') {
            images = images.concat(jsPsych.utils.flatten([trials[j][param]]));
          } else if (media === 'audio') {
            audio = audio.concat(jsPsych.utils.flatten([trials[j][param]]));
          } else if (media === 'video') {
            video = video.concat(jsPsych.utils.flatten([trials[j][param]]));
          }
        }
      }
    }

    images = jsPsych.utils.unique(jsPsych.utils.flatten(images));
    audio = jsPsych.utils.unique(jsPsych.utils.flatten(audio));
    video = jsPsych.utils.unique(jsPsych.utils.flatten(video)); // remove any nulls false values

    images = images.filter(function (x) {
      return x != false && x != null;
    });
    audio = audio.filter(function (x) {
      return x != false && x != null;
    });
    video = video.filter(function (x) {
      return x != false && x != null;
    });
    return {
      images: images,
      audio: audio,
      video: video
    };
  };

  module.cancelPreloads = function () {
    for (var i = 0; i < preload_requests.length; i++) {
      preload_requests[i].onload = function () {};

      preload_requests[i].onerror = function () {};

      preload_requests[i].oncanplaythrough = function () {};

      preload_requests[i].onabort = function () {};
    }

    preload_requests = [];
  };
  /**
   * Allows communication with user hardware through our custom Google Chrome extension + native C++ program
   * @param		{object}	mess	The message to be passed to our extension, see its documentation for the expected members of this object.
   * @author	Daniel Rivas
   *
   */


  module.hardware = function hardware(mess) {
    //since Chrome extension content-scripts do not share the javascript environment with the page script that loaded jspsych,
    //we will need to use hacky methods like communicating through DOM events.
    var jspsychEvt = new CustomEvent('jspsych', {
      detail: mess
    });
    document.dispatchEvent(jspsychEvt); //And voila! it will be the job of the content script injected by the extension to listen for the event and do the appropriate actions.
  };
  /** {boolean} Indicates whether this instance of jspsych has opened a hardware connection through our browser extension */


  module.hardwareConnected = false; //it might be useful to open up a line of communication from the extension back to this page script,
  //again, this will have to pass through DOM events. For now speed is of no concern so I will use jQuery

  document.addEventListener("jspsych-activate", function (evt) {
    module.hardwareConnected = true;
  });
  return module;
}(); // methods used in multiple modules //


jsPsych.utils = function () {
  var module = {};

  module.flatten = function (arr, out) {
    out = typeof out === 'undefined' ? [] : out;

    for (var i = 0; i < arr.length; i++) {
      if (Array.isArray(arr[i])) {
        module.flatten(arr[i], out);
      } else {
        out.push(arr[i]);
      }
    }

    return out;
  };

  module.unique = function (arr) {
    var out = [];

    for (var i = 0; i < arr.length; i++) {
      if (arr.indexOf(arr[i]) == i) {
        out.push(arr[i]);
      }
    }

    return out;
  };

  module.deepCopy = function (obj) {
    if (!obj) return obj;
    var out;

    if (Array.isArray(obj)) {
      out = [];

      for (var i = 0; i < obj.length; i++) {
        out.push(module.deepCopy(obj[i]));
      }

      return out;
    } else if (_typeof(obj) === 'object') {
      out = {};

      for (var key in obj) {
        if (obj.hasOwnProperty(key)) {
          out[key] = module.deepCopy(obj[key]);
        }
      }

      return out;
    } else {
      return obj;
    }
  };

  return module;
}(); // polyfill for Object.assign to support IE


if (typeof Object.assign != 'function') {
  Object.assign = function (target, varArgs) {
    // .length of function is 2
    'use strict';

    if (target == null) {
      // TypeError if undefined or null
      throw new TypeError('Cannot convert undefined or null to object');
    }

    var to = Object(target);

    for (var index = 1; index < arguments.length; index++) {
      var nextSource = arguments[index];

      if (nextSource != null) {
        // Skip over if undefined or null
        for (var nextKey in nextSource) {
          // Avoid bugs when hasOwnProperty is shadowed
          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
            to[nextKey] = nextSource[nextKey];
          }
        }
      }
    }

    return to;
  };
} // polyfill for Array.includes to support IE


if (!Array.prototype.includes) {
  Array.prototype.includes = function (searchElement
  /*, fromIndex*/
  ) {
    'use strict';

    if (this == null) {
      throw new TypeError('Array.prototype.includes called on null or undefined');
    }

    var O = Object(this);
    var len = parseInt(O.length, 10) || 0;

    if (len === 0) {
      return false;
    }

    var n = parseInt(arguments[1], 10) || 0;
    var k;

    if (n >= 0) {
      k = n;
    } else {
      k = len + n;

      if (k < 0) {
        k = 0;
      }
    }

    var currentElement;

    while (k < len) {
      currentElement = O[k];

      if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {
        // NaN !== NaN
        return true;
      }

      k++;
    }

    return false;
  };
} // polyfill for Array.isArray


if (!Array.isArray) {
  Array.isArray = function (arg) {
    return Object.prototype.toString.call(arg) === '[object Array]';
  };
}

/***/ }),

/***/ "./node_modules/jspsych/plugins/jspsych-external-html.js":
/*!***************************************************************!*\
  !*** ./node_modules/jspsych/plugins/jspsych-external-html.js ***!
  \***************************************************************/
/***/ (function() {

"use strict";


function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/** (July 2012, Erik Weitnauer)
The html-plugin will load and display an external html pages. To proceed to the next, the
user might either press a button on the page or a specific key. Afterwards, the page get hidden and
the plugin will wait of a specified time before it proceeds.

documentation: docs.jspsych.org
*/
jsPsych.plugins['external-html'] = function () {
  var plugin = {};
  plugin.info = {
    name: 'external-html',
    description: '',
    parameters: {
      url: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'URL',
        default: undefined,
        description: 'The url of the external html page'
      },
      cont_key: {
        type: jsPsych.plugins.parameterType.KEY,
        pretty_name: 'Continue key',
        default: null,
        description: 'The key to continue to the next page.'
      },
      cont_btn: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Continue button',
        default: null,
        description: 'The button to continue to the next page.'
      },
      check_fn: {
        type: jsPsych.plugins.parameterType.FUNCTION,
        pretty_name: 'Check function',
        default: function _default() {
          return true;
        },
        description: ''
      },
      force_refresh: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Force refresh',
        default: false,
        description: 'Refresh page.'
      },
      // if execute_Script == true, then all javascript code on the external page
      // will be executed in the plugin site within your jsPsych test
      execute_script: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Execute scripts',
        default: false,
        description: 'If true, JS scripts on the external html file will be executed.'
      }
    }
  };

  plugin.trial = function (display_element, trial) {
    var url = trial.url;

    if (trial.force_refresh) {
      url = trial.url + "?t=" + performance.now();
    }

    load(display_element, url, function () {
      var t0 = performance.now();

      var finish = function finish() {
        if (trial.check_fn && !trial.check_fn(display_element)) {
          return;
        }

        ;

        if (trial.cont_key) {
          display_element.removeEventListener('keydown', key_listener);
        }

        var trial_data = {
          rt: performance.now() - t0,
          url: trial.url
        };
        display_element.innerHTML = '';
        jsPsych.finishTrial(trial_data);
      }; // by default, scripts on the external page are not executed with XMLHttpRequest().
      // To activate their content through DOM manipulation, we need to relocate all script tags


      if (trial.execute_script) {
        var _iterator = _createForOfIteratorHelper(display_element.getElementsByTagName("script")),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var scriptElement = _step.value;
            var relocatedScript = document.createElement("script");
            relocatedScript.text = scriptElement.text;
            scriptElement.parentNode.replaceChild(relocatedScript, scriptElement);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        ;
      }

      if (trial.cont_btn) {
        display_element.querySelector('#' + trial.cont_btn).addEventListener('click', finish);
      }

      if (trial.cont_key) {
        var key_listener = function key_listener(e) {
          if (jsPsych.pluginAPI.compareKeys(e.key, trial.cont_key)) finish();
        };

        display_element.addEventListener('keydown', key_listener);
      }
    });
  }; // helper to load via XMLHttpRequest


  function load(element, file, callback) {
    var xmlhttp = new XMLHttpRequest();
    xmlhttp.open("GET", file, true);

    xmlhttp.onload = function () {
      if (xmlhttp.status == 200 || xmlhttp.status == 0) {
        //Check if loaded
        element.innerHTML = xmlhttp.responseText;
        callback();
      }
    };

    xmlhttp.send();
  }

  return plugin;
}();

/***/ }),

/***/ "./node_modules/jspsych/plugins/jspsych-fullscreen.js":
/*!************************************************************!*\
  !*** ./node_modules/jspsych/plugins/jspsych-fullscreen.js ***!
  \************************************************************/
/***/ (function() {

"use strict";


/* jspsych-fullscreen.js
 * Josh de Leeuw
 *
 * toggle fullscreen mode in the browser
 *
 */
jsPsych.plugins.fullscreen = function () {
  var plugin = {};
  plugin.info = {
    name: 'fullscreen',
    description: '',
    parameters: {
      fullscreen_mode: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Fullscreen mode',
        default: true,
        array: false,
        description: 'If true, experiment will enter fullscreen mode. If false, the browser will exit fullscreen mode.'
      },
      message: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Message',
        default: '<p>The experiment will switch to full screen mode when you press the button below</p>',
        array: false,
        description: 'HTML content to display above the button to enter fullscreen mode.'
      },
      button_label: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Button label',
        default: 'Continue',
        array: false,
        description: 'The text that appears on the button to enter fullscreen.'
      },
      delay_after: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Delay after',
        default: 1000,
        array: false,
        description: 'The length of time to delay after entering fullscreen mode before ending the trial.'
      }
    }
  };

  plugin.trial = function (display_element, trial) {
    // check if keys are allowed in fullscreen mode
    var keyboardNotAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;

    if (keyboardNotAllowed) {
      // This is Safari, and keyboard events will be disabled. Don't allow fullscreen here.
      // do something else?
      endTrial();
    } else {
      if (trial.fullscreen_mode) {
        display_element.innerHTML = trial.message + '<button id="jspsych-fullscreen-btn" class="jspsych-btn">' + trial.button_label + '</button>';
        var listener = display_element.querySelector('#jspsych-fullscreen-btn').addEventListener('click', function () {
          var element = document.documentElement;

          if (element.requestFullscreen) {
            element.requestFullscreen();
          } else if (element.mozRequestFullScreen) {
            element.mozRequestFullScreen();
          } else if (element.webkitRequestFullscreen) {
            element.webkitRequestFullscreen();
          } else if (element.msRequestFullscreen) {
            element.msRequestFullscreen();
          }

          endTrial();
        });
      } else {
        if (document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement) {
          if (document.exitFullscreen) {
            document.exitFullscreen();
          } else if (document.msExitFullscreen) {
            document.msExitFullscreen();
          } else if (document.mozCancelFullScreen) {
            document.mozCancelFullScreen();
          } else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
          }
        }

        endTrial();
      }
    }

    function endTrial() {
      display_element.innerHTML = '';
      jsPsych.pluginAPI.setTimeout(function () {
        var trial_data = {
          success: !keyboardNotAllowed
        };
        jsPsych.finishTrial(trial_data);
      }, trial.delay_after);
    }
  };

  return plugin;
}();

/***/ }),

/***/ "./node_modules/jspsych/plugins/jspsych-html-keyboard-response.js":
/*!************************************************************************!*\
  !*** ./node_modules/jspsych/plugins/jspsych-html-keyboard-response.js ***!
  \************************************************************************/
/***/ (function() {

"use strict";


/**
 * jspsych-html-keyboard-response
 * Josh de Leeuw
 *
 * plugin for displaying a stimulus and getting a keyboard response
 *
 * documentation: docs.jspsych.org
 *
 **/
jsPsych.plugins["html-keyboard-response"] = function () {
  var plugin = {};
  plugin.info = {
    name: 'html-keyboard-response',
    description: '',
    parameters: {
      stimulus: {
        type: jsPsych.plugins.parameterType.HTML_STRING,
        pretty_name: 'Stimulus',
        default: undefined,
        description: 'The HTML string to be displayed'
      },
      choices: {
        type: jsPsych.plugins.parameterType.KEY,
        array: true,
        pretty_name: 'Choices',
        default: jsPsych.ALL_KEYS,
        description: 'The keys the subject is allowed to press to respond to the stimulus.'
      },
      prompt: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Prompt',
        default: null,
        description: 'Any content here will be displayed below the stimulus.'
      },
      stimulus_duration: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Stimulus duration',
        default: null,
        description: 'How long to hide the stimulus.'
      },
      trial_duration: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Trial duration',
        default: null,
        description: 'How long to show trial before it ends.'
      },
      response_ends_trial: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Response ends trial',
        default: true,
        description: 'If true, trial will end when subject makes a response.'
      }
    }
  };

  plugin.trial = function (display_element, trial) {
    var new_html = '<div id="jspsych-html-keyboard-response-stimulus">' + trial.stimulus + '</div>'; // add prompt

    if (trial.prompt !== null) {
      new_html += trial.prompt;
    } // draw


    display_element.innerHTML = new_html; // store response

    var response = {
      rt: null,
      key: null
    }; // function to end trial when it is time

    var end_trial = function end_trial() {
      // kill any remaining setTimeout handlers
      jsPsych.pluginAPI.clearAllTimeouts(); // kill keyboard listeners

      if (typeof keyboardListener !== 'undefined') {
        jsPsych.pluginAPI.cancelKeyboardResponse(keyboardListener);
      } // gather the data to store for the trial


      var trial_data = {
        rt: response.rt,
        stimulus: trial.stimulus,
        response: response.key
      }; // clear the display

      display_element.innerHTML = ''; // move on to the next trial

      jsPsych.finishTrial(trial_data);
    }; // function to handle responses by the subject


    var after_response = function after_response(info) {
      // after a valid response, the stimulus will have the CSS class 'responded'
      // which can be used to provide visual feedback that a response was recorded
      display_element.querySelector('#jspsych-html-keyboard-response-stimulus').className += ' responded'; // only record the first response

      if (response.key == null) {
        response = info;
      }

      if (trial.response_ends_trial) {
        end_trial();
      }
    }; // start the response listener


    if (trial.choices != jsPsych.NO_KEYS) {
      var keyboardListener = jsPsych.pluginAPI.getKeyboardResponse({
        callback_function: after_response,
        valid_responses: trial.choices,
        rt_method: 'performance',
        persist: false,
        allow_held_key: false
      });
    } // hide stimulus if stimulus_duration is set


    if (trial.stimulus_duration !== null) {
      jsPsych.pluginAPI.setTimeout(function () {
        display_element.querySelector('#jspsych-html-keyboard-response-stimulus').style.visibility = 'hidden';
      }, trial.stimulus_duration);
    } // end trial if trial_duration is set


    if (trial.trial_duration !== null) {
      jsPsych.pluginAPI.setTimeout(function () {
        end_trial();
      }, trial.trial_duration);
    }
  };

  return plugin;
}();

/***/ }),

/***/ "./node_modules/jspsych/plugins/jspsych-image-keyboard-response.js":
/*!*************************************************************************!*\
  !*** ./node_modules/jspsych/plugins/jspsych-image-keyboard-response.js ***!
  \*************************************************************************/
/***/ (function() {

"use strict";


/**
 * jspsych-image-keyboard-response
 * Josh de Leeuw
 *
 * plugin for displaying a stimulus and getting a keyboard response
 *
 * documentation: docs.jspsych.org
 *
 **/
jsPsych.plugins["image-keyboard-response"] = function () {
  var plugin = {};
  jsPsych.pluginAPI.registerPreload('image-keyboard-response', 'stimulus', 'image');
  plugin.info = {
    name: 'image-keyboard-response',
    description: '',
    parameters: {
      stimulus: {
        type: jsPsych.plugins.parameterType.IMAGE,
        pretty_name: 'Stimulus',
        default: undefined,
        description: 'The image to be displayed'
      },
      stimulus_height: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Image height',
        default: null,
        description: 'Set the image height in pixels'
      },
      stimulus_width: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Image width',
        default: null,
        description: 'Set the image width in pixels'
      },
      maintain_aspect_ratio: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Maintain aspect ratio',
        default: true,
        description: 'Maintain the aspect ratio after setting width or height'
      },
      choices: {
        type: jsPsych.plugins.parameterType.KEY,
        array: true,
        pretty_name: 'Choices',
        default: jsPsych.ALL_KEYS,
        description: 'The keys the subject is allowed to press to respond to the stimulus.'
      },
      prompt: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Prompt',
        default: null,
        description: 'Any content here will be displayed below the stimulus.'
      },
      stimulus_duration: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Stimulus duration',
        default: null,
        description: 'How long to hide the stimulus.'
      },
      trial_duration: {
        type: jsPsych.plugins.parameterType.INT,
        pretty_name: 'Trial duration',
        default: null,
        description: 'How long to show trial before it ends.'
      },
      response_ends_trial: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Response ends trial',
        default: true,
        description: 'If true, trial will end when subject makes a response.'
      },
      render_on_canvas: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Render on canvas',
        default: true,
        description: 'If true, the image will be drawn onto a canvas element (prevents blank screen between consecutive images in some browsers).' + 'If false, the image will be shown via an img element.'
      }
    }
  };

  plugin.trial = function (display_element, trial) {
    var height, width;

    if (trial.render_on_canvas) {
      // get/set image height and width - this can only be done after image loads because uses image's naturalWidth/naturalHeight properties
      var getHeightWidth = function getHeightWidth() {
        if (trial.stimulus_height !== null) {
          height = trial.stimulus_height;

          if (trial.stimulus_width == null && trial.maintain_aspect_ratio) {
            width = img.naturalWidth * (trial.stimulus_height / img.naturalHeight);
          }
        } else {
          height = img.naturalHeight;
        }

        if (trial.stimulus_width !== null) {
          width = trial.stimulus_width;

          if (trial.stimulus_height == null && trial.maintain_aspect_ratio) {
            height = img.naturalHeight * (trial.stimulus_width / img.naturalWidth);
          }
        } else if (!(trial.stimulus_height !== null & trial.maintain_aspect_ratio)) {
          // if stimulus width is null, only use the image's natural width if the width value wasn't set 
          // in the if statement above, based on a specified height and maintain_aspect_ratio = true
          width = img.naturalWidth;
        }

        canvas.height = height;
        canvas.width = width;
      };

      var image_drawn = false; // first clear the display element (because the render_on_canvas method appends to display_element instead of overwriting it with .innerHTML)

      if (display_element.hasChildNodes()) {
        // can't loop through child list because the list will be modified by .removeChild()
        while (display_element.firstChild) {
          display_element.removeChild(display_element.firstChild);
        }
      } // create canvas element and image


      var canvas = document.createElement("canvas");
      canvas.id = "jspsych-image-keyboard-response-stimulus";
      canvas.style.margin = 0;
      canvas.style.padding = 0;
      var ctx = canvas.getContext("2d");
      var img = new Image();

      img.onload = function () {
        // if image wasn't preloaded, then it will need to be drawn whenever it finishes loading
        if (!image_drawn) {
          getHeightWidth(); // only possible to get width/height after image loads

          ctx.drawImage(img, 0, 0, width, height);
        }
      };

      img.src = trial.stimulus;
      getHeightWidth(); // call now, in case image loads immediately (is cached)
      // add canvas and draw image

      display_element.insertBefore(canvas, null);

      if (img.complete && Number.isFinite(width) && Number.isFinite(height)) {
        // if image has loaded and width/height have been set, then draw it now
        // (don't rely on img onload function to draw image when image is in the cache, because that causes a delay in the image presentation)
        ctx.drawImage(img, 0, 0, width, height);
        image_drawn = true;
      } // add prompt if there is one


      if (trial.prompt !== null) {
        display_element.insertAdjacentHTML('beforeend', trial.prompt);
      }
    } else {
      // display stimulus as an image element
      var html = '<img src="' + trial.stimulus + '" id="jspsych-image-keyboard-response-stimulus">'; // add prompt

      if (trial.prompt !== null) {
        html += trial.prompt;
      } // update the page content


      display_element.innerHTML = html; // set image dimensions after image has loaded (so that we have access to naturalHeight/naturalWidth)

      var img = display_element.querySelector('#jspsych-image-keyboard-response-stimulus');

      if (trial.stimulus_height !== null) {
        height = trial.stimulus_height;

        if (trial.stimulus_width == null && trial.maintain_aspect_ratio) {
          width = img.naturalWidth * (trial.stimulus_height / img.naturalHeight);
        }
      } else {
        height = img.naturalHeight;
      }

      if (trial.stimulus_width !== null) {
        width = trial.stimulus_width;

        if (trial.stimulus_height == null && trial.maintain_aspect_ratio) {
          height = img.naturalHeight * (trial.stimulus_width / img.naturalWidth);
        }
      } else if (!(trial.stimulus_height !== null & trial.maintain_aspect_ratio)) {
        // if stimulus width is null, only use the image's natural width if the width value wasn't set 
        // in the if statement above, based on a specified height and maintain_aspect_ratio = true
        width = img.naturalWidth;
      }

      img.style.height = height.toString() + "px";
      img.style.width = width.toString() + "px";
    } // store response


    var response = {
      rt: null,
      key: null
    }; // function to end trial when it is time

    var end_trial = function end_trial() {
      // kill any remaining setTimeout handlers
      jsPsych.pluginAPI.clearAllTimeouts(); // kill keyboard listeners

      if (typeof keyboardListener !== 'undefined') {
        jsPsych.pluginAPI.cancelKeyboardResponse(keyboardListener);
      } // gather the data to store for the trial


      var trial_data = {
        rt: response.rt,
        stimulus: trial.stimulus,
        response: response.key
      }; // clear the display

      display_element.innerHTML = ''; // move on to the next trial

      jsPsych.finishTrial(trial_data);
    }; // function to handle responses by the subject


    var after_response = function after_response(info) {
      // after a valid response, the stimulus will have the CSS class 'responded'
      // which can be used to provide visual feedback that a response was recorded
      display_element.querySelector('#jspsych-image-keyboard-response-stimulus').className += ' responded'; // only record the first response

      if (response.key == null) {
        response = info;
      }

      if (trial.response_ends_trial) {
        end_trial();
      }
    }; // start the response listener


    if (trial.choices != jsPsych.NO_KEYS) {
      var keyboardListener = jsPsych.pluginAPI.getKeyboardResponse({
        callback_function: after_response,
        valid_responses: trial.choices,
        rt_method: 'performance',
        persist: false,
        allow_held_key: false
      });
    } // hide stimulus if stimulus_duration is set


    if (trial.stimulus_duration !== null) {
      jsPsych.pluginAPI.setTimeout(function () {
        display_element.querySelector('#jspsych-image-keyboard-response-stimulus').style.visibility = 'hidden';
      }, trial.stimulus_duration);
    } // end trial if trial_duration is set


    if (trial.trial_duration !== null) {
      jsPsych.pluginAPI.setTimeout(function () {
        end_trial();
      }, trial.trial_duration);
    } else if (trial.response_ends_trial === false) {
      console.warn("The experiment may be deadlocked. Try setting a trial duration or set response_ends_trial to true.");
    }
  };

  return plugin;
}();

/***/ }),

/***/ "./node_modules/jspsych/plugins/jspsych-instructions.js":
/*!**************************************************************!*\
  !*** ./node_modules/jspsych/plugins/jspsych-instructions.js ***!
  \**************************************************************/
/***/ (function() {

"use strict";


/* jspsych-instructions.js
 * Josh de Leeuw
 *
 * This plugin displays text (including HTML formatted strings) during the experiment.
 * Use it to show instructions, provide performance feedback, etc...
 *
 * Page numbers can be displayed to help with navigation by setting show_page_number
 * to true.
 *
 * documentation: docs.jspsych.org
 *
 *
 */
jsPsych.plugins.instructions = function () {
  var plugin = {};
  plugin.info = {
    name: 'instructions',
    description: '',
    parameters: {
      pages: {
        type: jsPsych.plugins.parameterType.HTML_STRING,
        pretty_name: 'Pages',
        default: undefined,
        array: true,
        description: 'Each element of the array is the content for a single page.'
      },
      key_forward: {
        type: jsPsych.plugins.parameterType.KEY,
        pretty_name: 'Key forward',
        default: 'ArrowRight',
        description: 'The key the subject can press in order to advance to the next page.'
      },
      key_backward: {
        type: jsPsych.plugins.parameterType.KEY,
        pretty_name: 'Key backward',
        default: 'ArrowLeft',
        description: 'The key that the subject can press to return to the previous page.'
      },
      allow_backward: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Allow backward',
        default: true,
        description: 'If true, the subject can return to the previous page of the instructions.'
      },
      allow_keys: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Allow keys',
        default: true,
        description: 'If true, the subject can use keyboard keys to navigate the pages.'
      },
      show_clickable_nav: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Show clickable nav',
        default: false,
        description: 'If true, then a "Previous" and "Next" button will be displayed beneath the instructions.'
      },
      show_page_number: {
        type: jsPsych.plugins.parameterType.BOOL,
        pretty_name: 'Show page number',
        default: false,
        description: 'If true, and clickable navigation is enabled, then Page x/y will be shown between the nav buttons.'
      },
      page_label: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Page label',
        default: 'Page',
        description: 'The text that appears before x/y (current/total) pages displayed with show_page_number'
      },
      button_label_previous: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Button label previous',
        default: 'Previous',
        description: 'The text that appears on the button to go backwards.'
      },
      button_label_next: {
        type: jsPsych.plugins.parameterType.STRING,
        pretty_name: 'Button label next',
        default: 'Next',
        description: 'The text that appears on the button to go forwards.'
      }
    }
  };

  plugin.trial = function (display_element, trial) {
    var current_page = 0;
    var view_history = [];
    var start_time = performance.now();
    var last_page_update_time = start_time;

    function btnListener(evt) {
      evt.target.removeEventListener('click', btnListener);

      if (this.id === "jspsych-instructions-back") {
        back();
      } else if (this.id === 'jspsych-instructions-next') {
        next();
      }
    }

    function show_current_page() {
      var html = trial.pages[current_page];
      var pagenum_display = "";

      if (trial.show_page_number) {
        pagenum_display = "<span style='margin: 0 1em;' class='" + "jspsych-instructions-pagenum'>" + trial.page_label + ' ' + (current_page + 1) + "/" + trial.pages.length + "</span>";
      }

      if (trial.show_clickable_nav) {
        var nav_html = "<div class='jspsych-instructions-nav' style='padding: 10px 0px;'>";

        if (trial.allow_backward) {
          var allowed = current_page > 0 ? '' : "disabled='disabled'";
          nav_html += "<button id='jspsych-instructions-back' class='jspsych-btn' style='margin-right: 5px;' " + allowed + ">&lt; " + trial.button_label_previous + "</button>";
        }

        if (trial.pages.length > 1 && trial.show_page_number) {
          nav_html += pagenum_display;
        }

        nav_html += "<button id='jspsych-instructions-next' class='jspsych-btn'" + "style='margin-left: 5px;'>" + trial.button_label_next + " &gt;</button></div>";
        html += nav_html;
        display_element.innerHTML = html;

        if (current_page != 0 && trial.allow_backward) {
          display_element.querySelector('#jspsych-instructions-back').addEventListener('click', btnListener);
        }

        display_element.querySelector('#jspsych-instructions-next').addEventListener('click', btnListener);
      } else {
        if (trial.show_page_number && trial.pages.length > 1) {
          // page numbers for non-mouse navigation
          html += "<div class='jspsych-instructions-pagenum'>" + pagenum_display + "</div>";
        }

        display_element.innerHTML = html;
      }
    }

    function next() {
      add_current_page_to_view_history();
      current_page++; // if done, finish up...

      if (current_page >= trial.pages.length) {
        endTrial();
      } else {
        show_current_page();
      }
    }

    function back() {
      add_current_page_to_view_history();
      current_page--;
      show_current_page();
    }

    function add_current_page_to_view_history() {
      var current_time = performance.now();
      var page_view_time = current_time - last_page_update_time;
      view_history.push({
        page_index: current_page,
        viewing_time: page_view_time
      });
      last_page_update_time = current_time;
    }

    function endTrial() {
      if (trial.allow_keys) {
        jsPsych.pluginAPI.cancelKeyboardResponse(keyboard_listener);
      }

      display_element.innerHTML = '';
      var trial_data = {
        view_history: view_history,
        rt: performance.now() - start_time
      };
      jsPsych.finishTrial(trial_data);
    }

    var after_response = function after_response(info) {
      // have to reinitialize this instead of letting it persist to prevent accidental skips of pages by holding down keys too long
      keyboard_listener = jsPsych.pluginAPI.getKeyboardResponse({
        callback_function: after_response,
        valid_responses: [trial.key_forward, trial.key_backward],
        rt_method: 'performance',
        persist: false,
        allow_held_key: false
      }); // check if key is forwards or backwards and update page

      if (jsPsych.pluginAPI.compareKeys(info.key, trial.key_backward)) {
        if (current_page !== 0 && trial.allow_backward) {
          back();
        }
      }

      if (jsPsych.pluginAPI.compareKeys(info.key, trial.key_forward)) {
        next();
      }
    };

    show_current_page();

    if (trial.allow_keys) {
      var keyboard_listener = jsPsych.pluginAPI.getKeyboardResponse({
        callback_function: after_response,
        valid_responses: [trial.key_forward, trial.key_backward],
        rt_method: 'performance',
        persist: false
      });
    }
  };

  return plugin;
}();

/***/ }),

/***/ "./src/components/consentComponent.js":
/*!********************************************!*\
  !*** ./src/components/consentComponent.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

__webpack_require__(/*! jspsych/plugins/jspsych-instructions */ "./node_modules/jspsych/plugins/jspsych-instructions.js");

var consentComponent = /*#__PURE__*/function () {
  function consentComponent() {}

  consentComponent.getConsentTrial = function getConsentTrial() {
    var pages = this.getImageTags();
    var trial = {
      type: 'instructions',
      pages: pages,
      show_clickable_nav: true,
      allow_backward: false,
      button_label_next: "המשך"
    };
    return trial;
  };

  consentComponent.getImageTags = function getImageTags() {
    var tagsArray = [];

    for (var i = 1; i <= 2; i++) {
      tagsArray.push('<img src="media/images/consent/consent' + i + '.png" style="max-width:' + window.screen.availWidth + "px; max-height:" + (window.screen.availHeight - 50) + 'px;">');
    }

    return tagsArray;
  };

  return consentComponent;
}();

var _default = consentComponent;
exports["default"] = _default;

/***/ }),

/***/ "./src/components/idComponent.js":
/*!***************************************!*\
  !*** ./src/components/idComponent.js ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

__webpack_require__(/*! jspsych/jspsych */ "./node_modules/jspsych/jspsych.js");

__webpack_require__(/*! jspsych/plugins/jspsych-external-html */ "./node_modules/jspsych/plugins/jspsych-external-html.js");

var idComponent = /*#__PURE__*/function () {
  function idComponent() {}

  idComponent.checkAndSave = function checkAndSave() {
    var id = document.getElementById("participantId").value;

    if (id == "") {
      return false;
    } else {
      jsPsych.data.addProperties({
        participantId: id
      });
      return true;
    }
  };

  idComponent.getTrial = function getTrial() {
    var trial = {
      type: 'external-html',
      url: "media/html/idComponent.html",
      cont_btn: "continue",
      check_fn: idComponent.checkAndSave
    };
    return trial;
  };

  return idComponent;
}();

var _default = idComponent;
exports["default"] = _default;

/***/ }),

/***/ "./src/components/imageKeyComponent.js":
/*!*********************************************!*\
  !*** ./src/components/imageKeyComponent.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

__webpack_require__(/*! jspsych/plugins/jspsych-image-keyboard-response */ "./node_modules/jspsych/plugins/jspsych-image-keyboard-response.js");

var imageKeyComponent = /*#__PURE__*/function () {
  function imageKeyComponent() {}

  imageKeyComponent.getTrial = function getTrial() {
    var imageHeight = Math.round(window.screen.availHeight / 2);
    var trial = {
      type: 'image-keyboard-response',
      stimulus: jsPsych.timelineVariable("path"),
      choices: ['1', '2', '3', '4'],
      prompt: '<div style="width:100%;"><img src="media/images/scale.png"></div>',
      response_ends_trial: true,
      maintain_aspect_ratio: true,
      stimulus_height: imageHeight
    };
    return trial;
  };

  return imageKeyComponent;
}();

var _default = imageKeyComponent;
exports["default"] = _default;

/***/ }),

/***/ "./src/components/instructionsComponent.js":
/*!*************************************************!*\
  !*** ./src/components/instructionsComponent.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

__webpack_require__(/*! jspsych/plugins/jspsych-instructions */ "./node_modules/jspsych/plugins/jspsych-instructions.js");

var instructionsComponent = /*#__PURE__*/function () {
  function instructionsComponent() {}

  instructionsComponent.getTrial = function getTrial() {
    var pages = this.getImageTags();
    var trial = {
      type: 'instructions',
      pages: pages,
      show_clickable_nav: true,
      allow_backward: false,
      button_label_next: "המשך"
    };
    return trial;
  };

  instructionsComponent.getImageTags = function getImageTags() {
    var tagsArray = [];

    for (var i = 1; i <= 3; i++) {
      tagsArray.push('<img src="media/images/instructions/instructions' + i + '.png" style="max-width:' + window.screen.availWidth + "px; max-height:" + (window.screen.availHeight - 50) + 'px;">');
    }

    return tagsArray;
  };

  return instructionsComponent;
}();

var _default = instructionsComponent;
exports["default"] = _default;

/***/ }),

/***/ "./src/experiment.js":
/*!***************************!*\
  !*** ./src/experiment.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.createTimeline = createTimeline;

__webpack_require__(/*! ../styles/main.scss */ "./styles/main.scss");

__webpack_require__(/*! jspsych/plugins/jspsych-html-keyboard-response */ "./node_modules/jspsych/plugins/jspsych-html-keyboard-response.js");

__webpack_require__(/*! jspsych/plugins/jspsych-fullscreen */ "./node_modules/jspsych/plugins/jspsych-fullscreen.js");

var consent = _interopRequireWildcard(__webpack_require__(/*! ./components/consentComponent */ "./src/components/consentComponent.js"));

var id = _interopRequireWildcard(__webpack_require__(/*! ./components/idComponent */ "./src/components/idComponent.js"));

var instructions = _interopRequireWildcard(__webpack_require__(/*! ./components/instructionsComponent */ "./src/components/instructionsComponent.js"));

var _showStimProcedure = __webpack_require__(/*! ./procedures/showStimProcedure */ "./src/procedures/showStimProcedure.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * @title check jspsych
 * @description 
 * @version 0.1.0
 *
 * The following lines specify which media directories will be packaged and preloaded by jsPsych.
 * Modify them to arbitrary paths (or comma-separated lists of paths) within the `media` directory,
 * or delete them.
 * @imageDir images
 * @miscDir html
 */
// You can import the custom stylesheets you use (.scss or .css).
// jsPsych plugins

/**
 * This is where you define your jsPsych timeline.
 *
 * @param input A custom object that can be specified via the JATOS web interface ("JSON study
 *              input").
 */
function createTimeline() {
  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var timeline = [];
  timeline.push(id.default.getTrial());
  timeline.push(consent.default.getConsentTrial()); // Switch to fullscreen

  timeline.push({
    type: "fullscreen",
    fullscreen_mode: true
  });
  document.addEventListener("fullscreenchange", function () {
    if (!document.fullscreenElement) {
      jsPsych.endExperiment("You can no longer participate in this experiment");
    }
  });
  timeline.push(instructions.default.getTrial());
  timeline.push(new _showStimProcedure.showStimProcedure("stimuli", "stim", 4, "jpg").getProcedure());
  return timeline;
} // Whatever you `export` from this file will be passed to `jsPsych.init()` (except for `timeline`,
// which is determined using `createTimeline()`)
// Note: `preload_images`, `preload_audio`, and `preload_video` will be set automatically if you
// don't export them.

/***/ }),

/***/ "./src/procedures/showStimProcedure.js":
/*!*********************************************!*\
  !*** ./src/procedures/showStimProcedure.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.showStimProcedure = void 0;

var stimTrial = _interopRequireWildcard(__webpack_require__(/*! ../components/imageKeyComponent */ "./src/components/imageKeyComponent.js"));

__webpack_require__(/*! jspsych/jspsych */ "./node_modules/jspsych/jspsych.js");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var showStimProcedure = /*#__PURE__*/function () {
  function showStimProcedure(stimFolder, stimImageName, numOfStims, fileExtension) {
    this.stimFolder = stimFolder;
    this.stimImageName = stimImageName;
    this.numOfStims = numOfStims;
    this.fileExtension = fileExtension;
  }

  var _proto = showStimProcedure.prototype;

  _proto.getProcedure = function getProcedure() {
    var procedure = {
      timeline: [stimTrial.default.getTrial()],
      timeline_variables: this.getTimelineVariables(),
      randomize_order: true
    };
    return procedure;
  };

  _proto.getTimelineVariables = function getTimelineVariables() {
    var timelineVariables = [];

    for (var i = 1; i <= this.numOfStims; i++) {
      var path = "media/images/" + this.stimFolder + "/" + this.stimImageName + i + "." + this.fileExtension;
      var pathObject = {
        path: path
      };
      timelineVariables.push(pathObject);
    }

    return timelineVariables;
  };

  return showStimProcedure;
}();

exports.showStimProcedure = showStimProcedure;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
/*!**********************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/assets/app.js ***!
  \**********************************************************************************/


function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

__webpack_require__(/*! core-js/stable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/stable/index.js");

__webpack_require__(/*! regenerator-runtime/runtime */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/regenerator-runtime/runtime.js");

__webpack_require__(/*! JsPsychJs */ "./node_modules/jspsych/jspsych.js");

__webpack_require__(/*! JsPsychCss */ "./node_modules/jspsych/css/jspsych.css");

var experiment = _interopRequireWildcard(__webpack_require__(/*! JsPsychBuilderCurrentExperiment */ "./src/experiment.js"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// webpack alias for the main experiment file
var createTimeline = experiment.createTimeline,
    on_finish = experiment.on_finish,
    on_finish_jatos = experiment.on_finish_jatos,
    exportedJsPsychOptions = _objectWithoutProperties(experiment, ["createTimeline", "on_finish", "on_finish_jatos"]);

var injectedConfig = {"assetPaths":{"audio":[],"video":[],"misc":[],"images":[]}}; // Injected by webpack
// Create common jsPsych configuration

var jsPsychConfig = _objectSpread({
  preload_images: injectedConfig.assetPaths.images,
  preload_audio: injectedConfig.assetPaths.audio,
  preload_video: injectedConfig.assetPaths.video
}, exportedJsPsychOptions);

if (typeof jatos !== "undefined") {
  // Experiment is served by JATOS
  jatos.onLoad(function () {
    jsPsych.init(_objectSpread(_objectSpread({}, jsPsychConfig), {}, {
      timeline: createTimeline(jatos.studyJsonInput),
      on_finish: function on_finish() {
        if (typeof on_finish_jatos !== "undefined") {
          on_finish_jatos();
        }

        var results = jsPsych.data.get().json();
        jatos.submitResultData(results, jatos.startNextComponent);
      }
    }));
  });
} else {
  // Experiment is run locally
  jsPsych.init(_objectSpread(_objectSpread({}, jsPsychConfig), {}, {
    timeline: createTimeline(),
    on_finish: typeof on_finish !== "undefined" ? on_finish : function () {
      jsPsych.data.displayData();
    }
  }));
}
}();
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,